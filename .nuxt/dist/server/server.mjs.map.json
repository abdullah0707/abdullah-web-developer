{"file":"server.mjs","mappings":"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ACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IAAA;AAAA,IAEF,gBAAgB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","names":["$fetch","plugin","provide","plugins","createH3Error","createRadixRouter","aboutxHkZZAEwmuWBknniLH_45csqoILZvdkfGTzend3mnvsHIMeta","indexvuOPrk83wW5ZgOVjblucXvP8w1_45kuM_45cC31POXuGUi0Meta","contacttkQpo_I5X9jp3i5mZQJUWnUFFMvkkhglIEYH4ZLEYqQMeta","service_45JrM60WKlt8QD7YCgW7bPxwTYd_CbSEeaXn8_HHqKc0Meta","projectsjp3G5Dr8ktQWbAZs7sjVMRSDUapiOI9H9nzfwpBzXpgMeta","index","__executeAsync","createRouter","entry","input","headCore","__appConfig","config","appConfig","colors","baseURL","router_GNCWhvtYfLTYRZZ135CdFAEjxdMexN0ixiUYCAN_tpw","useVueRouterRoute","defaultLayoutTransition","_push","_parent","_createVNode","_sfc_main","_mergeProps","_renderSlot","_ssrRenderSlot","_getIcon","_loadIcon","Iconify","UIcon","ULink","_createBlock","_ssrRenderAttrs","_ssrInterpolate","_unref","_ssrRenderComponent","RootComponent"],"sources":["../../../virtual:nuxt:C%3A%2FUsers%2Fabdul%2FDownloads%2Fabdullah-developer%2F.nuxt%2Ffetch.mjs","../../../virtual:nuxt:C%3A%2FUsers%2Fabdul%2FDownloads%2Fabdullah-developer%2F.nuxt%2Fglobal-polyfills.mjs","../../../virtual:nuxt:C%3A%2FUsers%2Fabdul%2FDownloads%2Fabdullah-developer%2F.nuxt%2Fnuxt.config.mjs","../../../node_modules/nuxt/dist/app/nuxt.js","../../../node_modules/nuxt/dist/app/components/injections.js","../../../node_modules/nuxt/dist/app/utils.js","../../../node_modules/nuxt/dist/app/composables/router.js","../../../node_modules/nuxt/dist/app/composables/error.js","../../../node_modules/nuxt/dist/head/runtime/plugins/unhead.js","../../../node_modules/nuxt/dist/pages/runtime/utils.js","../../../node_modules/nuxt/dist/app/composables/manifest.js","../../../virtual:nuxt:C%3A%2FUsers%2Fabdul%2FDownloads%2Fabdullah-developer%2F.nuxt%2Froutes.mjs","../../../node_modules/nuxt/dist/app/components/utils.js","../../../node_modules/nuxt/dist/pages/runtime/router.options.js","../../../virtual:nuxt:C%3A%2FUsers%2Fabdul%2FDownloads%2Fabdullah-developer%2F.nuxt%2Frouter.options.mjs","../../../node_modules/nuxt/dist/pages/runtime/validate.js","../../../node_modules/nuxt/dist/app/middleware/manifest-route-rule.js","../../../virtual:nuxt:C%3A%2FUsers%2Fabdul%2FDownloads%2Fabdullah-developer%2F.nuxt%2Fmiddleware.mjs","../../../node_modules/nuxt/dist/pages/runtime/plugins/router.js","../../../node_modules/nuxt/dist/head/runtime/composables/v3.js","../../../node_modules/nuxt/dist/app/composables/payload.js","../../../node_modules/nuxt/dist/app/plugins/revive-payload.server.js","../../../node_modules/@nuxt/ui/dist/runtime/components/elements/Accordion.vue?nuxt_component=async&nuxt_component_name=UAccordion&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/elements/Alert.vue?nuxt_component=async&nuxt_component_name=UAlert&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/elements/Avatar.vue?nuxt_component=async&nuxt_component_name=UAvatar&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/elements/AvatarGroup.js?nuxt_component=async&nuxt_component_name=UAvatarGroup&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/elements/Badge.vue?nuxt_component=async&nuxt_component_name=UBadge&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue?nuxt_component=async&nuxt_component_name=UButton&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/elements/ButtonGroup.js?nuxt_component=async&nuxt_component_name=UButtonGroup&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/elements/Carousel.vue?nuxt_component=async&nuxt_component_name=UCarousel&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/elements/Chip.vue?nuxt_component=async&nuxt_component_name=UChip&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/elements/Dropdown.vue?nuxt_component=async&nuxt_component_name=UDropdown&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/elements/Icon.vue?nuxt_component=async&nuxt_component_name=UIcon&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/elements/Kbd.vue?nuxt_component=async&nuxt_component_name=UKbd&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/elements/Link.vue?nuxt_component=async&nuxt_component_name=ULink&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/elements/Meter.vue?nuxt_component=async&nuxt_component_name=UMeter&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/elements/MeterGroup.js?nuxt_component=async&nuxt_component_name=UMeterGroup&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/elements/Progress.vue?nuxt_component=async&nuxt_component_name=UProgress&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/forms/Checkbox.vue?nuxt_component=async&nuxt_component_name=UCheckbox&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/forms/Form.vue?nuxt_component=async&nuxt_component_name=UForm&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/forms/FormGroup.vue?nuxt_component=async&nuxt_component_name=UFormGroup&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/forms/Input.vue?nuxt_component=async&nuxt_component_name=UInput&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/forms/InputMenu.vue?nuxt_component=async&nuxt_component_name=UInputMenu&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/forms/Radio.vue?nuxt_component=async&nuxt_component_name=URadio&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/forms/RadioGroup.vue?nuxt_component=async&nuxt_component_name=URadioGroup&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/forms/Range.vue?nuxt_component=async&nuxt_component_name=URange&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/forms/Select.vue?nuxt_component=async&nuxt_component_name=USelect&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/forms/SelectMenu.vue?nuxt_component=async&nuxt_component_name=USelectMenu&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/forms/Textarea.vue?nuxt_component=async&nuxt_component_name=UTextarea&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/forms/Toggle.vue?nuxt_component=async&nuxt_component_name=UToggle&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/data/Table.vue?nuxt_component=async&nuxt_component_name=UTable&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/layout/Card.vue?nuxt_component=async&nuxt_component_name=UCard&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/layout/Container.vue?nuxt_component=async&nuxt_component_name=UContainer&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/layout/Divider.vue?nuxt_component=async&nuxt_component_name=UDivider&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/layout/Skeleton.vue?nuxt_component=async&nuxt_component_name=USkeleton&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/navigation/Breadcrumb.vue?nuxt_component=async&nuxt_component_name=UBreadcrumb&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/navigation/CommandPalette.vue?nuxt_component=async&nuxt_component_name=UCommandPalette&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/navigation/CommandPaletteGroup.vue?nuxt_component=async&nuxt_component_name=UCommandPaletteGroup&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/navigation/HorizontalNavigation.vue?nuxt_component=async&nuxt_component_name=UHorizontalNavigation&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/navigation/Pagination.vue?nuxt_component=async&nuxt_component_name=UPagination&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/navigation/Tabs.vue?nuxt_component=async&nuxt_component_name=UTabs&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/navigation/VerticalNavigation.vue?nuxt_component=async&nuxt_component_name=UVerticalNavigation&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/overlays/ContextMenu.vue?nuxt_component=async&nuxt_component_name=UContextMenu&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/overlays/Modal.vue?nuxt_component=async&nuxt_component_name=UModal&nuxt_component_export=default","../../../node_modules/nuxt/dist/app/components/server-placeholder.js?nuxt_component=async&nuxt_component_name=UModals&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/overlays/Notification.vue?nuxt_component=async&nuxt_component_name=UNotification&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/overlays/Notifications.vue?nuxt_component=async&nuxt_component_name=UNotifications&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/overlays/Popover.vue?nuxt_component=async&nuxt_component_name=UPopover&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/overlays/Slideover.vue?nuxt_component=async&nuxt_component_name=USlideover&nuxt_component_export=default","../../../node_modules/nuxt/dist/app/components/server-placeholder.js?nuxt_component=async&nuxt_component_name=USlideovers&nuxt_component_export=default","../../../node_modules/@nuxt/ui/dist/runtime/components/overlays/Tooltip.vue?nuxt_component=async&nuxt_component_name=UTooltip&nuxt_component_export=default","../../../node_modules/@nuxt/icon/dist/runtime/components/index.js?nuxt_component=async&nuxt_component_name=Icon&nuxt_component_export=default","../../../virtual:nuxt:C%3A%2FUsers%2Fabdul%2FDownloads%2Fabdullah-developer%2F.nuxt%2Fcomponents.plugin.mjs","../../../node_modules/@nuxt/ui/dist/runtime/composables/useSlideover.js","../../../node_modules/@nuxt/ui/dist/runtime/plugins/slideovers.js","../../../node_modules/@nuxt/ui/dist/runtime/composables/useModal.js","../../../node_modules/@nuxt/ui/dist/runtime/plugins/modals.js","../../../node_modules/nuxt/dist/app/config.js","../../../virtual:nuxt:C%3A%2FUsers%2Fabdul%2FDownloads%2Fabdullah-developer%2F.nuxt%2Fapp.config.mjs","../../../node_modules/@nuxt/ui/dist/runtime/utils/lodash.js","../../../node_modules/@nuxt/ui/dist/runtime/utils/link.js","../../../node_modules/@nuxt/ui/dist/runtime/utils/index.js","../../../virtual:nuxt:C%3A%2FUsers%2Fabdul%2FDownloads%2Fabdullah-developer%2F.nuxt%2Ftailwind%2Fexpose%2Ftheme%2Fcolors.mjs","../../../node_modules/@nuxt/ui/dist/runtime/plugins/colors.js","../../../virtual:nuxt:C%3A%2FUsers%2Fabdul%2FDownloads%2Fabdullah-developer%2F.nuxt%2Fcolor-mode-options.mjs","../../../node_modules/nuxt/dist/app/composables/state.js","../../../node_modules/@nuxtjs/color-mode/dist/runtime/plugin.server.js","../../../node_modules/@nuxt/icon/dist/runtime/plugin.js","../../../virtual:nuxt:C%3A%2FUsers%2Fabdul%2FDownloads%2Fabdullah-developer%2F.nuxt%2Fplugins.server.mjs","../../../virtual:nuxt:C%3A%2FUsers%2Fabdul%2FDownloads%2Fabdullah-developer%2F.nuxt%2Flayouts.mjs","../../../node_modules/nuxt/dist/app/components/nuxt-layout.js","../../../node_modules/nuxt/dist/app/components/server-placeholder.js","../../../node_modules/nuxt/dist/app/components/route-provider.js","../../../node_modules/nuxt/dist/pages/runtime/page.js","../../../node_modules/nuxt/dist/pages/runtime/app.vue","../../../node_modules/nuxt/dist/app/components/nuxt-link.js","../../../node_modules/@nuxt/ui/dist/runtime/components/elements/Link.vue","../../../node_modules/@nuxt/icon/dist/runtime/components/shared.js","../../../node_modules/@nuxt/icon/dist/runtime/components/css.js","../../../node_modules/nuxt/dist/app/components/client-only.js","../../../node_modules/nuxt/dist/app/composables/asyncData.js","../../../node_modules/@nuxt/icon/dist/runtime/components/svg.js","../../../node_modules/@nuxt/icon/dist/runtime/components/index.js","../../../node_modules/@nuxt/ui/dist/runtime/components/elements/Icon.vue","../../../node_modules/@nuxt/ui/dist/runtime/composables/useUI.js","../../../node_modules/@nuxt/ui/dist/runtime/composables/useButtonGroup.js","../../../node_modules/@nuxt/ui/dist/runtime/ui.config/elements/button.js","../../../node_modules/@nuxt/ui/dist/runtime/ui.config/popper.js","../../../node_modules/@nuxt/ui/dist/runtime/ui.config/elements/dropdown.js","../../../node_modules/@nuxt/ui/dist/runtime/ui.config/forms/input.js","../../../node_modules/@nuxt/ui/dist/runtime/ui.config/forms/inputMenu.js","../../../node_modules/@nuxt/ui/dist/runtime/ui.config/forms/textarea.js","../../../node_modules/@nuxt/ui/dist/runtime/ui.config/forms/select.js","../../../node_modules/@nuxt/ui/dist/runtime/ui.config/forms/selectMenu.js","../../../node_modules/@nuxt/ui/dist/runtime/ui.config/overlays/tooltip.js","../../../node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue","../../../error.vue","../../../node_modules/nuxt/dist/app/components/nuxt-root.vue","../../../node_modules/nuxt/dist/app/entry.js"],"sourcesContent":["import { $fetch } from 'ofetch'\nimport { baseURL } from '#internal/nuxt/paths'\nif (!globalThis.$fetch) {\n  globalThis.$fetch = $fetch.create({\n    baseURL: baseURL()\n  })\n}","\nif (!(\"global\" in globalThis)) {\n  globalThis.global = globalThis;\n}","export const appHead = {\"meta\":[{\"charset\":\"utf-8\"},{\"name\":\"viewport\",\"content\":\"width=device-width, initial-scale=1\"},{\"hid\":\"description\",\"name\":\"description\",\"content\":\"pkg.description\"}],\"link\":[{\"rel\":\"stylesheet\",\"href\":\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css\",\"integrity\":\"sha512-MV7K8+y+gLIBoVD59lQIYicR65iaqukzvf/nwasF0nqhPay5w/9lJmVM2hMDcnK1OnMGCdVK+iQrJ7lzPJQd1w==\",\"crossorigin\":\"anonymous\",\"referrerpolicy\":\"no-referrer\"},{\"rel\":\"stylesheet\",\"href\":\"https://fonts.googleapis.com/css2?family=Exo:ital,wght@0,100..900;1,100..900&display=swap\"},{\"rel\":\"stylesheet\",\"href\":\"https: //fonts.googleapis.com/css2?family=Cairo:wght@200..1000&display=swap\"},{\"rel\":\"stylesheet\",\"href\":\"https://fonts.googleapis.com/css2?family=Allerta+Stencil&display=swap\"}],\"style\":[],\"script\":[{\"src\":\"https://smtpjs.com/v3/smtp.js\"},{\"src\":\"https://cdn.botpress.cloud/webchat/v3.2/inject.js\",\"async\":true,\"defer\":true,\"data-bot-id\":\"63f4f3f2d1c6e9001f3b2e5a\"},{\"src\":\"https://files.bpcontent.cloud/2025/08/20/07/20250820074314-2DRGOL57.js\",\"async\":true,\"defer\":true},{\"src\":\"/animet.js\",\"tagPosition\":\"bodyClose\"}],\"noscript\":[],\"title\":\"Abdullah | \"}\n\nexport const appBaseURL = \"/\"\n\nexport const appBuildAssetsDir = \"/_nuxt/\"\n\nexport const appCdnURL = \"\"\n\nexport const appLayoutTransition = false\n\nexport const appPageTransition = false\n\nexport const appViewTransition = false\n\nexport const appKeepalive = false\n\nexport const appRootId = \"__nuxt\"\n\nexport const appRootTag = \"div\"\n\nexport const appRootAttrs = {\"id\":\"__nuxt\"}\n\nexport const appTeleportTag = \"div\"\n\nexport const appTeleportId = \"teleports\"\n\nexport const appTeleportAttrs = {\"id\":\"teleports\"}\n\nexport const appSpaLoaderTag = \"div\"\n\nexport const appSpaLoaderAttrs = {\"id\":\"__nuxt-loader\"}\n\nexport const renderJsonPayloads = true\n\nexport const componentIslands = false\n\nexport const payloadExtraction = true\n\nexport const cookieStore = true\n\nexport const appManifest = true\n\nexport const remoteComponentIslands = false\n\nexport const selectiveClient = false\n\nexport const devPagesDir = null\n\nexport const devRootDir = null\n\nexport const devLogs = false\n\nexport const nuxtLinkDefaults = {\"componentName\":\"NuxtLink\",\"prefetch\":true,\"prefetchOn\":{\"visibility\":true}}\n\nexport const asyncDataDefaults = {\"value\":null,\"errorValue\":null,\"deep\":true}\n\nexport const resetAsyncDataToUndefined = true\n\nexport const nuxtDefaultErrorValue = null\n\nexport const fetchDefaults = {}\n\nexport const vueAppRootContainer = '#__nuxt'\n\nexport const viewTransition = false\n\nexport const appId = \"nuxt-app\"\n\nexport const outdatedBuildInterval = 3600000\n\nexport const multiApp = false\n\nexport const chunkErrorEvent = \"vite:preloadError\"\n\nexport const crawlLinks = false\n\nexport const spaLoadingTemplateOutside = false\n\nexport const purgeCachedData = true\n\nexport const granularCachedData = false\n\nexport const pendingWhenIdle = true\n\nexport const alwaysRunFetchOnKeyChange = true","import { effectScope, getCurrentInstance, getCurrentScope, hasInjectionContext, reactive, shallowReactive } from \"vue\";\nimport { createHooks } from \"hookable\";\nimport { getContext } from \"unctx\";\nimport { appId, chunkErrorEvent, multiApp } from \"#build/nuxt.config.mjs\";\nexport function getNuxtAppCtx(id = appId || \"nuxt-app\") {\n  return getContext(id, {\n    asyncContext: !!__NUXT_ASYNC_CONTEXT__ && import.meta.server\n  });\n}\nexport const NuxtPluginIndicator = \"__nuxt_plugin\";\nexport function createNuxtApp(options) {\n  let hydratingCount = 0;\n  const nuxtApp = {\n    _id: options.id || appId || \"nuxt-app\",\n    _scope: effectScope(),\n    provide: void 0,\n    globalName: \"nuxt\",\n    versions: {\n      get nuxt() {\n        return __NUXT_VERSION__;\n      },\n      get vue() {\n        return nuxtApp.vueApp.version;\n      }\n    },\n    payload: shallowReactive({\n      ...options.ssrContext?.payload || {},\n      data: shallowReactive({}),\n      state: reactive({}),\n      once: /* @__PURE__ */ new Set(),\n      _errors: shallowReactive({})\n    }),\n    static: {\n      data: {}\n    },\n    runWithContext(fn) {\n      if (nuxtApp._scope.active && !getCurrentScope()) {\n        return nuxtApp._scope.run(() => callWithNuxt(nuxtApp, fn));\n      }\n      return callWithNuxt(nuxtApp, fn);\n    },\n    isHydrating: import.meta.client,\n    deferHydration() {\n      if (!nuxtApp.isHydrating) {\n        return () => {\n        };\n      }\n      hydratingCount++;\n      let called = false;\n      return () => {\n        if (called) {\n          return;\n        }\n        called = true;\n        hydratingCount--;\n        if (hydratingCount === 0) {\n          nuxtApp.isHydrating = false;\n          return nuxtApp.callHook(\"app:suspense:resolve\");\n        }\n      };\n    },\n    _asyncDataPromises: {},\n    _asyncData: shallowReactive({}),\n    _payloadRevivers: {},\n    ...options\n  };\n  if (import.meta.server) {\n    nuxtApp.payload.serverRendered = true;\n  }\n  if (import.meta.server && nuxtApp.ssrContext) {\n    nuxtApp.payload.path = nuxtApp.ssrContext.url;\n    nuxtApp.ssrContext.nuxt = nuxtApp;\n    nuxtApp.ssrContext.payload = nuxtApp.payload;\n    nuxtApp.ssrContext.config = {\n      public: nuxtApp.ssrContext.runtimeConfig.public,\n      app: nuxtApp.ssrContext.runtimeConfig.app\n    };\n  }\n  if (import.meta.client) {\n    const __NUXT__ = multiApp ? window.__NUXT__?.[nuxtApp._id] : window.__NUXT__;\n    if (__NUXT__) {\n      for (const key in __NUXT__) {\n        switch (key) {\n          case \"data\":\n          case \"state\":\n          case \"_errors\":\n            Object.assign(nuxtApp.payload[key], __NUXT__[key]);\n            break;\n          default:\n            nuxtApp.payload[key] = __NUXT__[key];\n        }\n      }\n    }\n  }\n  nuxtApp.hooks = createHooks();\n  nuxtApp.hook = nuxtApp.hooks.hook;\n  if (import.meta.server) {\n    const contextCaller = async function(hooks, args) {\n      for (const hook of hooks) {\n        await nuxtApp.runWithContext(() => hook(...args));\n      }\n    };\n    nuxtApp.hooks.callHook = (name, ...args) => nuxtApp.hooks.callHookWith(contextCaller, name, ...args);\n  }\n  nuxtApp.callHook = nuxtApp.hooks.callHook;\n  nuxtApp.provide = (name, value) => {\n    const $name = \"$\" + name;\n    defineGetter(nuxtApp, $name, value);\n    defineGetter(nuxtApp.vueApp.config.globalProperties, $name, value);\n  };\n  defineGetter(nuxtApp.vueApp, \"$nuxt\", nuxtApp);\n  defineGetter(nuxtApp.vueApp.config.globalProperties, \"$nuxt\", nuxtApp);\n  if (import.meta.client) {\n    if (chunkErrorEvent) {\n      window.addEventListener(chunkErrorEvent, (event) => {\n        nuxtApp.callHook(\"app:chunkError\", { error: event.payload });\n        if (event.payload.message.includes(\"Unable to preload CSS\")) {\n          event.preventDefault();\n        }\n      });\n    }\n    window.useNuxtApp ||= useNuxtApp;\n    const unreg = nuxtApp.hook(\"app:error\", (...args) => {\n      console.error(\"[nuxt] error caught during app initialization\", ...args);\n    });\n    nuxtApp.hook(\"app:mounted\", unreg);\n  }\n  const runtimeConfig = import.meta.server ? options.ssrContext.runtimeConfig : nuxtApp.payload.config;\n  nuxtApp.provide(\"config\", import.meta.client && import.meta.dev ? wrappedConfig(runtimeConfig) : runtimeConfig);\n  return nuxtApp;\n}\nexport function registerPluginHooks(nuxtApp, plugin) {\n  if (plugin.hooks) {\n    nuxtApp.hooks.addHooks(plugin.hooks);\n  }\n}\nexport async function applyPlugin(nuxtApp, plugin) {\n  if (typeof plugin === \"function\") {\n    const { provide } = await nuxtApp.runWithContext(() => plugin(nuxtApp)) || {};\n    if (provide && typeof provide === \"object\") {\n      for (const key in provide) {\n        nuxtApp.provide(key, provide[key]);\n      }\n    }\n  }\n}\nexport async function applyPlugins(nuxtApp, plugins) {\n  const resolvedPlugins = /* @__PURE__ */ new Set();\n  const unresolvedPlugins = [];\n  const parallels = [];\n  let error = void 0;\n  let promiseDepth = 0;\n  async function executePlugin(plugin) {\n    const unresolvedPluginsForThisPlugin = plugin.dependsOn?.filter((name) => plugins.some((p) => p._name === name) && !resolvedPlugins.has(name)) ?? [];\n    if (unresolvedPluginsForThisPlugin.length > 0) {\n      unresolvedPlugins.push([new Set(unresolvedPluginsForThisPlugin), plugin]);\n    } else {\n      const promise = applyPlugin(nuxtApp, plugin).then(async () => {\n        if (plugin._name) {\n          resolvedPlugins.add(plugin._name);\n          await Promise.all(unresolvedPlugins.map(async ([dependsOn, unexecutedPlugin]) => {\n            if (dependsOn.has(plugin._name)) {\n              dependsOn.delete(plugin._name);\n              if (dependsOn.size === 0) {\n                promiseDepth++;\n                await executePlugin(unexecutedPlugin);\n              }\n            }\n          }));\n        }\n      }).catch((e) => {\n        if (!plugin.parallel && !nuxtApp.payload.error) {\n          throw e;\n        }\n        error ||= e;\n      });\n      if (plugin.parallel) {\n        parallels.push(promise);\n      } else {\n        await promise;\n      }\n    }\n  }\n  for (const plugin of plugins) {\n    if (import.meta.server && nuxtApp.ssrContext?.islandContext && plugin.env?.islands === false) {\n      continue;\n    }\n    registerPluginHooks(nuxtApp, plugin);\n  }\n  for (const plugin of plugins) {\n    if (import.meta.server && nuxtApp.ssrContext?.islandContext && plugin.env?.islands === false) {\n      continue;\n    }\n    await executePlugin(plugin);\n  }\n  await Promise.all(parallels);\n  if (promiseDepth) {\n    for (let i = 0; i < promiseDepth; i++) {\n      await Promise.all(parallels);\n    }\n  }\n  if (error) {\n    throw nuxtApp.payload.error || error;\n  }\n}\n// @__NO_SIDE_EFFECTS__\nexport function defineNuxtPlugin(plugin) {\n  if (typeof plugin === \"function\") {\n    return plugin;\n  }\n  const _name = plugin._name || plugin.name;\n  delete plugin.name;\n  return Object.assign(plugin.setup || (() => {\n  }), plugin, { [NuxtPluginIndicator]: true, _name });\n}\nexport const definePayloadPlugin = defineNuxtPlugin;\nexport function isNuxtPlugin(plugin) {\n  return typeof plugin === \"function\" && NuxtPluginIndicator in plugin;\n}\nexport function callWithNuxt(nuxt, setup, args) {\n  const fn = () => args ? setup(...args) : setup();\n  const nuxtAppCtx = getNuxtAppCtx(nuxt._id);\n  if (import.meta.server) {\n    return nuxt.vueApp.runWithContext(() => nuxtAppCtx.callAsync(nuxt, fn));\n  } else {\n    nuxtAppCtx.set(nuxt);\n    return nuxt.vueApp.runWithContext(fn);\n  }\n}\nexport function tryUseNuxtApp(id) {\n  let nuxtAppInstance;\n  if (hasInjectionContext()) {\n    nuxtAppInstance = getCurrentInstance()?.appContext.app.$nuxt;\n  }\n  nuxtAppInstance ||= getNuxtAppCtx(id).tryUse();\n  return nuxtAppInstance || null;\n}\nexport function useNuxtApp(id) {\n  const nuxtAppInstance = tryUseNuxtApp(id);\n  if (!nuxtAppInstance) {\n    if (import.meta.dev) {\n      throw new Error(\"[nuxt] A composable that requires access to the Nuxt instance was called outside of a plugin, Nuxt hook, Nuxt middleware, or Vue setup function. This is probably not a Nuxt bug. Find out more at `https://nuxt.com/docs/guide/concepts/auto-imports#vue-and-nuxt-composables`.\");\n    } else {\n      throw new Error(\"[nuxt] instance unavailable\");\n    }\n  }\n  return nuxtAppInstance;\n}\n// @__NO_SIDE_EFFECTS__\nexport function useRuntimeConfig(_event) {\n  return useNuxtApp().$config;\n}\nfunction defineGetter(obj, key, val) {\n  Object.defineProperty(obj, key, { get: () => val });\n}\nexport function defineAppConfig(config) {\n  return config;\n}\nconst loggedKeys = /* @__PURE__ */ new Set();\nfunction wrappedConfig(runtimeConfig) {\n  if (!import.meta.dev || import.meta.server) {\n    return runtimeConfig;\n  }\n  const keys = [];\n  for (const key in runtimeConfig) {\n    keys.push(`\\`${key}\\``);\n  }\n  const lastKey = keys.pop();\n  return new Proxy(runtimeConfig, {\n    get(target, p, receiver) {\n      if (typeof p === \"string\" && p !== \"public\" && !(p in target) && !p.startsWith(\"__v\")) {\n        if (!loggedKeys.has(p)) {\n          loggedKeys.add(p);\n          console.warn(`[nuxt] Could not access \\`${p}\\`. The only available runtime config keys on the client side are ${keys.join(\", \")} and ${lastKey}. See https://nuxt.com/docs/guide/going-further/runtime-config for more information.`);\n        }\n      }\n      return Reflect.get(target, p, receiver);\n    }\n  });\n}\n","export const LayoutMetaSymbol = Symbol(\"layout-meta\");\nexport const PageRouteSymbol = Symbol(\"route\");\n","import { captureStackTrace } from \"errx\";\nexport function toArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\nconst distURL = import.meta.url.replace(/\\/app\\/.*$/, \"/\");\nexport function getUserTrace() {\n  if (!import.meta.dev) {\n    return [];\n  }\n  const trace = captureStackTrace();\n  const start = trace.findIndex((entry) => !entry.source.startsWith(distURL));\n  const end = [...trace].reverse().findIndex((entry) => !entry.source.includes(\"node_modules\") && !entry.source.startsWith(distURL));\n  if (start === -1 || end === -1) {\n    return [];\n  }\n  return trace.slice(start, -end).map((i) => ({\n    ...i,\n    source: i.source.replace(/^file:\\/\\//, \"\")\n  }));\n}\nexport function getUserCaller() {\n  if (!import.meta.dev) {\n    return null;\n  }\n  const { source, line, column } = captureStackTrace().find((entry) => !entry.source.startsWith(distURL)) ?? {};\n  if (!source) {\n    return null;\n  }\n  return {\n    source: source.replace(/^file:\\/\\//, \"\"),\n    line,\n    column\n  };\n}\n","import { getCurrentInstance, hasInjectionContext, inject, onScopeDispose } from \"vue\";\nimport { sanitizeStatusCode } from \"h3\";\nimport { hasProtocol, isScriptProtocol, joinURL, parseQuery, parseURL, withQuery } from \"ufo\";\nimport { useNuxtApp, useRuntimeConfig } from \"../nuxt.js\";\nimport { PageRouteSymbol } from \"../components/injections.js\";\nimport { createError, showError } from \"./error.js\";\nimport { getUserTrace } from \"../utils.js\";\nexport const useRouter = () => {\n  return useNuxtApp()?.$router;\n};\nexport const useRoute = () => {\n  if (import.meta.dev && !getCurrentInstance() && isProcessingMiddleware()) {\n    const middleware = useNuxtApp()._processingMiddleware;\n    const trace = getUserTrace().map(({ source, line, column }) => `at ${source}:${line}:${column}`).join(\"\\n\");\n    console.warn(`[nuxt] \\`useRoute\\` was called within middleware${typeof middleware === \"string\" ? ` (\\`${middleware}\\`)` : \"\"}. This may lead to misleading results. Instead, use the (to, from) arguments passed to the middleware to access the new and old routes. Learn more: https://nuxt.com/docs/4.x/guide/directory-structure/app/middleware#accessing-route-in-middleware` + (\"\\n\" + trace));\n  }\n  if (hasInjectionContext()) {\n    return inject(PageRouteSymbol, useNuxtApp()._route);\n  }\n  return useNuxtApp()._route;\n};\nexport const onBeforeRouteLeave = (guard) => {\n  const unsubscribe = useRouter().beforeEach((to, from, next) => {\n    if (to === from) {\n      return;\n    }\n    return guard(to, from, next);\n  });\n  onScopeDispose(unsubscribe);\n};\nexport const onBeforeRouteUpdate = (guard) => {\n  const unsubscribe = useRouter().beforeEach(guard);\n  onScopeDispose(unsubscribe);\n};\n// @__NO_SIDE_EFFECTS__\nexport function defineNuxtRouteMiddleware(middleware) {\n  return middleware;\n}\nexport const addRouteMiddleware = (name, middleware, options = {}) => {\n  const nuxtApp = useNuxtApp();\n  const global = options.global || typeof name !== \"string\";\n  const mw = typeof name !== \"string\" ? name : middleware;\n  if (!mw) {\n    console.warn(\"[nuxt] No route middleware passed to `addRouteMiddleware`.\", name);\n    return;\n  }\n  if (global) {\n    nuxtApp._middleware.global.push(mw);\n  } else {\n    nuxtApp._middleware.named[name] = mw;\n  }\n};\nconst isProcessingMiddleware = () => {\n  try {\n    if (useNuxtApp()._processingMiddleware) {\n      return true;\n    }\n  } catch {\n    return false;\n  }\n  return false;\n};\nconst URL_QUOTE_RE = /\"/g;\nexport const navigateTo = (to, options) => {\n  to ||= \"/\";\n  const toPath = typeof to === \"string\" ? to : \"path\" in to ? resolveRouteObject(to) : useRouter().resolve(to).href;\n  if (import.meta.client && options?.open) {\n    const { target = \"_blank\", windowFeatures = {} } = options.open;\n    const features = [];\n    for (const [feature, value] of Object.entries(windowFeatures)) {\n      if (value !== void 0) {\n        features.push(`${feature.toLowerCase()}=${value}`);\n      }\n    }\n    open(toPath, target, features.join(\", \"));\n    return Promise.resolve();\n  }\n  const isExternalHost = hasProtocol(toPath, { acceptRelative: true });\n  const isExternal = options?.external || isExternalHost;\n  if (isExternal) {\n    if (!options?.external) {\n      throw new Error(\"Navigating to an external URL is not allowed by default. Use `navigateTo(url, { external: true })`.\");\n    }\n    const { protocol } = new URL(toPath, import.meta.client ? window.location.href : \"http://localhost\");\n    if (protocol && isScriptProtocol(protocol)) {\n      throw new Error(`Cannot navigate to a URL with '${protocol}' protocol.`);\n    }\n  }\n  const inMiddleware = isProcessingMiddleware();\n  if (import.meta.client && !isExternal && inMiddleware) {\n    if (options?.replace) {\n      if (typeof to === \"string\") {\n        const { pathname, search, hash } = parseURL(to);\n        return {\n          path: pathname,\n          ...search && { query: parseQuery(search) },\n          ...hash && { hash },\n          replace: true\n        };\n      }\n      return { ...to, replace: true };\n    }\n    return to;\n  }\n  const router = useRouter();\n  const nuxtApp = useNuxtApp();\n  if (import.meta.server) {\n    if (nuxtApp.ssrContext) {\n      const fullPath = typeof to === \"string\" || isExternal ? toPath : router.resolve(to).fullPath || \"/\";\n      const location2 = isExternal ? toPath : joinURL(useRuntimeConfig().app.baseURL, fullPath);\n      const redirect = async function(response) {\n        await nuxtApp.callHook(\"app:redirected\");\n        const encodedLoc = location2.replace(URL_QUOTE_RE, \"%22\");\n        const encodedHeader = encodeURL(location2, isExternalHost);\n        nuxtApp.ssrContext._renderResponse = {\n          statusCode: sanitizeStatusCode(options?.redirectCode || 302, 302),\n          body: `<!DOCTYPE html><html><head><meta http-equiv=\"refresh\" content=\"0; url=${encodedLoc}\"></head></html>`,\n          headers: { location: encodedHeader }\n        };\n        return response;\n      };\n      if (!isExternal && inMiddleware) {\n        router.afterEach((final) => final.fullPath === fullPath ? redirect(false) : void 0);\n        return to;\n      }\n      return redirect(!inMiddleware ? void 0 : (\n        /* abort route navigation */\n        false\n      ));\n    }\n  }\n  if (isExternal) {\n    nuxtApp._scope.stop();\n    if (options?.replace) {\n      location.replace(toPath);\n    } else {\n      location.href = toPath;\n    }\n    if (inMiddleware) {\n      if (!nuxtApp.isHydrating) {\n        return false;\n      }\n      return new Promise(() => {\n      });\n    }\n    return Promise.resolve();\n  }\n  return options?.replace ? router.replace(to) : router.push(to);\n};\nexport const abortNavigation = (err) => {\n  if (import.meta.dev && !isProcessingMiddleware()) {\n    throw new Error(\"abortNavigation() is only usable inside a route middleware handler.\");\n  }\n  if (!err) {\n    return false;\n  }\n  err = createError(err);\n  if (err.fatal) {\n    useNuxtApp().runWithContext(() => showError(err));\n  }\n  throw err;\n};\nexport const setPageLayout = (layout) => {\n  const nuxtApp = useNuxtApp();\n  if (import.meta.server) {\n    if (import.meta.dev && getCurrentInstance() && nuxtApp.payload.state._layout !== layout) {\n      console.warn(\"[warn] [nuxt] `setPageLayout` should not be called to change the layout on the server within a component as this will cause hydration errors.\");\n    }\n    nuxtApp.payload.state._layout = layout;\n  }\n  if (import.meta.dev && nuxtApp.isHydrating && nuxtApp.payload.serverRendered && nuxtApp.payload.state._layout !== layout) {\n    console.warn(\"[warn] [nuxt] `setPageLayout` should not be called to change the layout during hydration as this will cause hydration errors.\");\n  }\n  const inMiddleware = isProcessingMiddleware();\n  if (inMiddleware || import.meta.server || nuxtApp.isHydrating) {\n    const unsubscribe = useRouter().beforeResolve((to) => {\n      to.meta.layout = layout;\n      unsubscribe();\n    });\n  }\n  if (!inMiddleware) {\n    useRoute().meta.layout = layout;\n  }\n};\nexport function resolveRouteObject(to) {\n  return withQuery(to.path || \"\", to.query || {}) + (to.hash || \"\");\n}\nexport function encodeURL(location2, isExternalHost = false) {\n  const url = new URL(location2, \"http://localhost\");\n  if (!isExternalHost) {\n    return url.pathname + url.search + url.hash;\n  }\n  if (location2.startsWith(\"//\")) {\n    return url.toString().replace(url.protocol, \"\");\n  }\n  return url.toString();\n}\n","import { createError as createH3Error } from \"h3\";\nimport { toRef } from \"vue\";\nimport { useNuxtApp } from \"../nuxt.js\";\nimport { useRouter } from \"./router.js\";\nimport { nuxtDefaultErrorValue } from \"#build/nuxt.config.mjs\";\nexport const NUXT_ERROR_SIGNATURE = \"__nuxt_error\";\nexport const useError = () => toRef(useNuxtApp().payload, \"error\");\nexport const showError = (error) => {\n  const nuxtError = createError(error);\n  try {\n    const nuxtApp = useNuxtApp();\n    const error2 = useError();\n    if (import.meta.client) {\n      nuxtApp.hooks.callHook(\"app:error\", nuxtError);\n    }\n    error2.value ||= nuxtError;\n  } catch {\n    throw nuxtError;\n  }\n  return nuxtError;\n};\nexport const clearError = async (options = {}) => {\n  const nuxtApp = useNuxtApp();\n  const error = useError();\n  nuxtApp.callHook(\"app:error:cleared\", options);\n  if (options.redirect) {\n    await useRouter().replace(options.redirect);\n  }\n  error.value = nuxtDefaultErrorValue;\n};\nexport const isNuxtError = (error) => !!error && typeof error === \"object\" && NUXT_ERROR_SIGNATURE in error;\nexport const createError = (error) => {\n  const nuxtError = createH3Error(error);\n  Object.defineProperty(nuxtError, NUXT_ERROR_SIGNATURE, {\n    value: true,\n    configurable: false,\n    writable: false\n  });\n  return nuxtError;\n};\n","import { createHead as createClientHead, renderDOMHead } from \"@unhead/vue/client\";\nimport { defineNuxtPlugin } from \"#app/nuxt\";\nimport unheadOptions from \"#build/unhead-options.mjs\";\nexport default defineNuxtPlugin({\n  name: \"nuxt:head\",\n  enforce: \"pre\",\n  setup(nuxtApp) {\n    const head = import.meta.server ? nuxtApp.ssrContext.head : createClientHead(unheadOptions);\n    nuxtApp.vueApp.use(head);\n    if (import.meta.client) {\n      let pauseDOMUpdates = true;\n      const syncHead = async () => {\n        pauseDOMUpdates = false;\n        await renderDOMHead(head);\n      };\n      head.hooks.hook(\"dom:beforeRender\", (context) => {\n        context.shouldRender = !pauseDOMUpdates;\n      });\n      nuxtApp.hooks.hook(\"page:start\", () => {\n        pauseDOMUpdates = true;\n      });\n      nuxtApp.hooks.hook(\"page:finish\", () => {\n        if (!nuxtApp.isHydrating) {\n          syncHead();\n        }\n      });\n      nuxtApp.hooks.hook(\"app:error\", syncHead);\n      nuxtApp.hooks.hook(\"app:suspense:resolve\", syncHead);\n    }\n  }\n});\n","import { KeepAlive, h } from \"vue\";\nconst ROUTE_KEY_PARENTHESES_RE = /(:\\w+)\\([^)]+\\)/g;\nconst ROUTE_KEY_SYMBOLS_RE = /(:\\w+)[?+*]/g;\nconst ROUTE_KEY_NORMAL_RE = /:\\w+/g;\nconst interpolatePath = (route, match) => {\n  return match.path.replace(ROUTE_KEY_PARENTHESES_RE, \"$1\").replace(ROUTE_KEY_SYMBOLS_RE, \"$1\").replace(ROUTE_KEY_NORMAL_RE, (r) => route.params[r.slice(1)]?.toString() || \"\");\n};\nexport const generateRouteKey = (routeProps, override) => {\n  const matchedRoute = routeProps.route.matched.find((m) => m.components?.default === routeProps.Component.type);\n  const source = override ?? matchedRoute?.meta.key ?? (matchedRoute && interpolatePath(routeProps.route, matchedRoute));\n  return typeof source === \"function\" ? source(routeProps.route) : source;\n};\nexport const wrapInKeepAlive = (props, children) => {\n  return { default: () => import.meta.client && props ? h(KeepAlive, props === true ? {} : props, children) : children };\n};\nexport function toArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\n","import { createMatcherFromExport, createRouter as createRadixRouter, toRouteMatcher } from \"radix3\";\nimport { defu } from \"defu\";\nimport { useNuxtApp, useRuntimeConfig } from \"../nuxt.js\";\nimport { appManifest as isAppManifestEnabled } from \"#build/nuxt.config.mjs\";\nimport { buildAssetsURL } from \"#internal/nuxt/paths\";\nlet manifest;\nlet matcher;\nfunction fetchManifest() {\n  if (!isAppManifestEnabled) {\n    throw new Error(\"[nuxt] app manifest should be enabled with `experimental.appManifest`\");\n  }\n  if (import.meta.server) {\n    manifest = import(\"#app-manifest\");\n  } else {\n    manifest = $fetch(buildAssetsURL(`builds/meta/${useRuntimeConfig().app.buildId}.json`), {\n      responseType: \"json\"\n    });\n  }\n  manifest.then((m) => {\n    matcher = createMatcherFromExport(m.matcher);\n  }).catch((e) => {\n    console.error(\"[nuxt] Error fetching app manifest.\", e);\n  });\n  return manifest;\n}\nexport function getAppManifest() {\n  if (!isAppManifestEnabled) {\n    throw new Error(\"[nuxt] app manifest should be enabled with `experimental.appManifest`\");\n  }\n  if (import.meta.server) {\n    useNuxtApp().ssrContext._preloadManifest = true;\n  }\n  return manifest || fetchManifest();\n}\nexport async function getRouteRules(arg) {\n  const path = typeof arg === \"string\" ? arg : arg.path;\n  if (import.meta.server) {\n    useNuxtApp().ssrContext._preloadManifest = true;\n    const _routeRulesMatcher = toRouteMatcher(\n      createRadixRouter({ routes: useRuntimeConfig().nitro.routeRules })\n    );\n    return defu({}, ..._routeRulesMatcher.matchAll(path).reverse());\n  }\n  await getAppManifest();\n  if (!matcher) {\n    console.error(\"[nuxt] Error creating app manifest matcher.\", matcher);\n    return {};\n  }\n  try {\n    return defu({}, ...matcher.matchAll(path).reverse());\n  } catch (e) {\n    console.error(\"[nuxt] Error matching route rules.\", e);\n    return {};\n  }\n}\n","\nif (import.meta.hot) {\n  import.meta.hot.accept((mod) => {\n    const router = import.meta.hot.data.router\n    const generateRoutes = import.meta.hot.data.generateRoutes\n    if (!router || !generateRoutes) {\n      import.meta.hot.invalidate('[nuxt] Cannot replace routes because there is no active router. Reloading.')\n      return\n    }\n    router.clearRoutes()\n    const routes = generateRoutes(mod.default || mod)\n    function addRoutes (routes) {\n      for (const route of routes) {\n        router.addRoute(route)\n      }\n      router.replace(router.currentRoute.value.fullPath)\n    }\n    if (routes && 'then' in routes) {\n      routes.then(addRoutes)\n    } else {\n      addRoutes(routes)\n    }\n  })\n}\n\nexport function handleHotUpdate(_router, _generateRoutes) {\n  if (import.meta.hot) {\n    import.meta.hot.data ||= {}\n    import.meta.hot.data.router = _router\n    import.meta.hot.data.generateRoutes = _generateRoutes\n  }\n}\nimport { default as aboutxHkZZAEwmuWBknniLH_45csqoILZvdkfGTzend3mnvsHIMeta } from \"C:/Users/abdul/Downloads/abdullah-developer/pages/about.vue?macro=true\";\nimport { default as indexvuOPrk83wW5ZgOVjblucXvP8w1_45kuM_45cC31POXuGUi0Meta } from \"C:/Users/abdul/Downloads/abdullah-developer/pages/index.vue?macro=true\";\nimport { default as contacttkQpo_I5X9jp3i5mZQJUWnUFFMvkkhglIEYH4ZLEYqQMeta } from \"C:/Users/abdul/Downloads/abdullah-developer/pages/contact.vue?macro=true\";\nimport { default as service_45JrM60WKlt8QD7YCgW7bPxwTYd_CbSEeaXn8_HHqKc0Meta } from \"C:/Users/abdul/Downloads/abdullah-developer/pages/service.vue?macro=true\";\nimport { default as projectsjp3G5Dr8ktQWbAZs7sjVMRSDUapiOI9H9nzfwpBzXpgMeta } from \"C:/Users/abdul/Downloads/abdullah-developer/pages/projects.vue?macro=true\";\nexport default [\n  {\n    name: \"about\",\n    path: \"/about\",\n    meta: aboutxHkZZAEwmuWBknniLH_45csqoILZvdkfGTzend3mnvsHIMeta || {},\n    component: () => import(\"C:/Users/abdul/Downloads/abdullah-developer/pages/about.vue\")\n  },\n  {\n    name: \"index\",\n    path: \"/\",\n    meta: indexvuOPrk83wW5ZgOVjblucXvP8w1_45kuM_45cC31POXuGUi0Meta || {},\n    component: () => import(\"C:/Users/abdul/Downloads/abdullah-developer/pages/index.vue\")\n  },\n  {\n    name: \"contact\",\n    path: \"/contact\",\n    meta: contacttkQpo_I5X9jp3i5mZQJUWnUFFMvkkhglIEYH4ZLEYqQMeta || {},\n    component: () => import(\"C:/Users/abdul/Downloads/abdullah-developer/pages/contact.vue\")\n  },\n  {\n    name: \"service\",\n    path: \"/service\",\n    meta: service_45JrM60WKlt8QD7YCgW7bPxwTYd_CbSEeaXn8_HHqKc0Meta || {},\n    component: () => import(\"C:/Users/abdul/Downloads/abdullah-developer/pages/service.vue\")\n  },\n  {\n    name: \"projects\",\n    path: \"/projects\",\n    meta: projectsjp3G5Dr8ktQWbAZs7sjVMRSDUapiOI9H9nzfwpBzXpgMeta || {},\n    component: () => import(\"C:/Users/abdul/Downloads/abdullah-developer/pages/projects.vue\")\n  }\n]","import { Transition, createStaticVNode, h } from \"vue\";\nimport { isString, isPromise, isArray, isObject } from \"@vue/shared\";\nimport { START_LOCATION } from \"#build/pages\";\nexport const _wrapInTransition = (props, children) => {\n  return { default: () => import.meta.client && props ? h(Transition, props === true ? {} : props, children) : children.default?.() };\n};\nconst ROUTE_KEY_PARENTHESES_RE = /(:\\w+)\\([^)]+\\)/g;\nconst ROUTE_KEY_SYMBOLS_RE = /(:\\w+)[?+*]/g;\nconst ROUTE_KEY_NORMAL_RE = /:\\w+/g;\nfunction generateRouteKey(route) {\n  const source = route?.meta.key ?? route.path.replace(ROUTE_KEY_PARENTHESES_RE, \"$1\").replace(ROUTE_KEY_SYMBOLS_RE, \"$1\").replace(ROUTE_KEY_NORMAL_RE, (r) => route.params[r.slice(1)]?.toString() || \"\");\n  return typeof source === \"function\" ? source(route) : source;\n}\nexport function isChangingPage(to, from) {\n  if (to === from || from === START_LOCATION) {\n    return false;\n  }\n  if (generateRouteKey(to) !== generateRouteKey(from)) {\n    return true;\n  }\n  const areComponentsSame = to.matched.every(\n    (comp, index) => comp.components && comp.components.default === from.matched[index]?.components?.default\n  );\n  if (areComponentsSame) {\n    return false;\n  }\n  return true;\n}\nexport function createBuffer() {\n  let appendable = false;\n  const buffer = [];\n  return {\n    getBuffer() {\n      return buffer;\n    },\n    push(item) {\n      const isStringItem = isString(item);\n      if (appendable && isStringItem) {\n        buffer[buffer.length - 1] += item;\n      } else {\n        buffer.push(item);\n      }\n      appendable = isStringItem;\n      if (isPromise(item) || isArray(item) && item.hasAsync) {\n        buffer.hasAsync = true;\n      }\n    }\n  };\n}\nexport function vforToArray(source) {\n  if (isArray(source)) {\n    return source;\n  } else if (isString(source)) {\n    return source.split(\"\");\n  } else if (typeof source === \"number\") {\n    if (import.meta.dev && !Number.isInteger(source)) {\n      console.warn(`The v-for range expect an integer value but got ${source}.`);\n    }\n    const array = [];\n    for (let i = 0; i < source; i++) {\n      array[i] = i;\n    }\n    return array;\n  } else if (isObject(source)) {\n    if (source[Symbol.iterator]) {\n      return Array.from(\n        source,\n        (item) => item\n      );\n    } else {\n      const keys = Object.keys(source);\n      const array = new Array(keys.length);\n      for (let i = 0, l = keys.length; i < l; i++) {\n        const key = keys[i];\n        array[i] = source[key];\n      }\n      return array;\n    }\n  }\n  return [];\n}\nexport function getFragmentHTML(element, withoutSlots = false) {\n  if (element) {\n    if (element.nodeName === \"#comment\" && element.nodeValue === \"[\") {\n      return getFragmentChildren(element, [], withoutSlots);\n    }\n    if (withoutSlots) {\n      const clone = element.cloneNode(true);\n      clone.querySelectorAll(\"[data-island-slot]\").forEach((n) => {\n        n.innerHTML = \"\";\n      });\n      return [clone.outerHTML];\n    }\n    return [element.outerHTML];\n  }\n}\nfunction getFragmentChildren(element, blocks = [], withoutSlots = false) {\n  if (element && element.nodeName) {\n    if (isEndFragment(element)) {\n      return blocks;\n    } else if (!isStartFragment(element)) {\n      const clone = element.cloneNode(true);\n      if (withoutSlots) {\n        clone.querySelectorAll?.(\"[data-island-slot]\").forEach((n) => {\n          n.innerHTML = \"\";\n        });\n      }\n      blocks.push(clone.outerHTML);\n    }\n    getFragmentChildren(element.nextSibling, blocks, withoutSlots);\n  }\n  return blocks;\n}\nexport function elToStaticVNode(el, staticNodeFallback) {\n  const fragment = el ? getFragmentHTML(el) : staticNodeFallback ? [staticNodeFallback] : void 0;\n  if (fragment) {\n    return createStaticVNode(fragment.join(\"\"), fragment.length);\n  }\n  return h(\"div\");\n}\nexport function isStartFragment(element) {\n  return element.nodeName === \"#comment\" && element.nodeValue === \"[\";\n}\nexport function isEndFragment(element) {\n  return element.nodeName === \"#comment\" && element.nodeValue === \"]\";\n}\n","import { START_LOCATION } from \"vue-router\";\nimport { useNuxtApp } from \"#app/nuxt\";\nimport { isChangingPage } from \"#app/components/utils\";\nimport { useRouter } from \"#app/composables/router\";\nexport default {\n  scrollBehavior(to, from, savedPosition) {\n    const nuxtApp = useNuxtApp();\n    const hashScrollBehaviour = useRouter().options?.scrollBehaviorType ?? \"auto\";\n    if (to.path === from.path) {\n      if (from.hash && !to.hash) {\n        return { left: 0, top: 0 };\n      }\n      if (to.hash) {\n        return { el: to.hash, top: _getHashElementScrollMarginTop(to.hash), behavior: hashScrollBehaviour };\n      }\n      return false;\n    }\n    const routeAllowsScrollToTop = typeof to.meta.scrollToTop === \"function\" ? to.meta.scrollToTop(to, from) : to.meta.scrollToTop;\n    if (routeAllowsScrollToTop === false) {\n      return false;\n    }\n    const hookToWait = nuxtApp._runningTransition ? \"page:transition:finish\" : \"page:loading:end\";\n    return new Promise((resolve) => {\n      if (from === START_LOCATION) {\n        resolve(_calculatePosition(to, from, savedPosition, hashScrollBehaviour));\n        return;\n      }\n      nuxtApp.hooks.hookOnce(hookToWait, () => {\n        requestAnimationFrame(() => resolve(_calculatePosition(to, from, savedPosition, hashScrollBehaviour)));\n      });\n    });\n  }\n};\nfunction _getHashElementScrollMarginTop(selector) {\n  try {\n    const elem = document.querySelector(selector);\n    if (elem) {\n      return (Number.parseFloat(getComputedStyle(elem).scrollMarginTop) || 0) + (Number.parseFloat(getComputedStyle(document.documentElement).scrollPaddingTop) || 0);\n    }\n  } catch {\n  }\n  return 0;\n}\nfunction _calculatePosition(to, from, savedPosition, defaultHashScrollBehaviour) {\n  if (savedPosition) {\n    return savedPosition;\n  }\n  const isPageNavigation = isChangingPage(to, from);\n  if (to.hash) {\n    return {\n      el: to.hash,\n      top: _getHashElementScrollMarginTop(to.hash),\n      behavior: isPageNavigation ? defaultHashScrollBehaviour : \"instant\"\n    };\n  }\n  return {\n    left: 0,\n    top: 0\n  };\n}\n","import routerOptions0 from \"C:/Users/abdul/Downloads/abdullah-developer/node_modules/nuxt/dist/pages/runtime/router.options.js\";\nconst configRouterOptions = {\n  hashMode: false,\n  scrollBehaviorType: \"auto\"\n}\nexport const hashMode = false\nexport default {\n...configRouterOptions,\n...routerOptions0,\n}","import { createError } from \"#app/composables/error\";\nimport { defineNuxtRouteMiddleware } from \"#app/composables/router\";\nexport default defineNuxtRouteMiddleware(async (to, from) => {\n  if (!to.meta?.validate) {\n    return;\n  }\n  const result = await Promise.resolve(to.meta.validate(to));\n  if (result === true) {\n    return;\n  }\n  const error = createError({\n    fatal: import.meta.client,\n    statusCode: result && result.statusCode || 404,\n    statusMessage: result && result.statusMessage || `Page Not Found: ${to.fullPath}`,\n    data: {\n      path: to.fullPath\n    }\n  });\n  if (typeof window !== \"undefined\") {\n    window.history.pushState({}, \"\", from.fullPath);\n  }\n  return error;\n});\n","import { hasProtocol } from \"ufo\";\nimport { defineNuxtRouteMiddleware } from \"../composables/router.js\";\nimport { getRouteRules } from \"../composables/manifest.js\";\nexport default defineNuxtRouteMiddleware(async (to) => {\n  if (import.meta.server || import.meta.test) {\n    return;\n  }\n  const rules = await getRouteRules({ path: to.path });\n  if (rules.redirect) {\n    if (hasProtocol(rules.redirect, { acceptRelative: true })) {\n      window.location.href = rules.redirect;\n      return false;\n    }\n    return rules.redirect;\n  }\n});\n","import validate from \"C:/Users/abdul/Downloads/abdullah-developer/node_modules/nuxt/dist/pages/runtime/validate.js\";\nimport manifest_45route_45rule from \"C:/Users/abdul/Downloads/abdullah-developer/node_modules/nuxt/dist/app/middleware/manifest-route-rule.js\";\nexport const globalMiddleware = [\n  validate,\n  manifest_45route_45rule\n]\nexport const namedMiddleware = {}","import { isReadonly, reactive, shallowReactive, shallowRef } from \"vue\";\nimport { START_LOCATION, createMemoryHistory, createRouter, createWebHashHistory, createWebHistory } from \"vue-router\";\nimport { isSamePath, withoutBase } from \"ufo\";\nimport { toArray } from \"../utils.js\";\nimport { getRouteRules } from \"#app/composables/manifest\";\nimport { defineNuxtPlugin, useRuntimeConfig } from \"#app/nuxt\";\nimport { clearError, createError, isNuxtError, showError, useError } from \"#app/composables/error\";\nimport { navigateTo } from \"#app/composables/router\";\nimport { appManifest as isAppManifestEnabled } from \"#build/nuxt.config.mjs\";\nimport _routes, { handleHotUpdate } from \"#build/routes\";\nimport routerOptions, { hashMode } from \"#build/router.options\";\nimport { globalMiddleware, namedMiddleware } from \"#build/middleware\";\nfunction createCurrentLocation(base, location, renderedPath) {\n  const { pathname, search, hash } = location;\n  const hashPos = base.indexOf(\"#\");\n  if (hashPos > -1) {\n    const slicePos = hash.includes(base.slice(hashPos)) ? base.slice(hashPos).length : 1;\n    let pathFromHash = hash.slice(slicePos);\n    if (pathFromHash[0] !== \"/\") {\n      pathFromHash = \"/\" + pathFromHash;\n    }\n    return withoutBase(pathFromHash, \"\");\n  }\n  const displayedPath = withoutBase(pathname, base);\n  const path = !renderedPath || isSamePath(displayedPath, renderedPath) ? displayedPath : renderedPath;\n  return path + (path.includes(\"?\") ? \"\" : search) + hash;\n}\nconst plugin = defineNuxtPlugin({\n  name: \"nuxt:router\",\n  enforce: \"pre\",\n  async setup(nuxtApp) {\n    let routerBase = useRuntimeConfig().app.baseURL;\n    if (hashMode && !routerBase.includes(\"#\")) {\n      routerBase += \"#\";\n    }\n    const history = routerOptions.history?.(routerBase) ?? (import.meta.client ? hashMode ? createWebHashHistory(routerBase) : createWebHistory(routerBase) : createMemoryHistory(routerBase));\n    const routes = routerOptions.routes ? await routerOptions.routes(_routes) ?? _routes : _routes;\n    let startPosition;\n    const router = createRouter({\n      ...routerOptions,\n      scrollBehavior: (to, from, savedPosition) => {\n        if (from === START_LOCATION) {\n          startPosition = savedPosition;\n          return;\n        }\n        if (routerOptions.scrollBehavior) {\n          router.options.scrollBehavior = routerOptions.scrollBehavior;\n          if (\"scrollRestoration\" in window.history) {\n            const unsub = router.beforeEach(() => {\n              unsub();\n              window.history.scrollRestoration = \"manual\";\n            });\n          }\n          return routerOptions.scrollBehavior(to, START_LOCATION, startPosition || savedPosition);\n        }\n      },\n      history,\n      routes\n    });\n    if (import.meta.hot) {\n      handleHotUpdate(router, routerOptions.routes ? routerOptions.routes : (routes2) => routes2);\n    }\n    if (import.meta.client && \"scrollRestoration\" in window.history) {\n      window.history.scrollRestoration = \"auto\";\n    }\n    nuxtApp.vueApp.use(router);\n    const previousRoute = shallowRef(router.currentRoute.value);\n    router.afterEach((_to, from) => {\n      previousRoute.value = from;\n    });\n    Object.defineProperty(nuxtApp.vueApp.config.globalProperties, \"previousRoute\", {\n      get: () => previousRoute.value\n    });\n    const initialURL = import.meta.server ? nuxtApp.ssrContext.url : createCurrentLocation(routerBase, window.location, nuxtApp.payload.path);\n    const _route = shallowRef(router.currentRoute.value);\n    const syncCurrentRoute = () => {\n      _route.value = router.currentRoute.value;\n    };\n    nuxtApp.hook(\"page:finish\", syncCurrentRoute);\n    router.afterEach((to, from) => {\n      if (to.matched[to.matched.length - 1]?.components?.default === from.matched[from.matched.length - 1]?.components?.default) {\n        syncCurrentRoute();\n      }\n    });\n    const route = {};\n    for (const key in _route.value) {\n      Object.defineProperty(route, key, {\n        get: () => _route.value[key],\n        enumerable: true\n      });\n    }\n    nuxtApp._route = shallowReactive(route);\n    nuxtApp._middleware ||= {\n      global: [],\n      named: {}\n    };\n    const error = useError();\n    if (import.meta.client || !nuxtApp.ssrContext?.islandContext) {\n      router.afterEach(async (to, _from, failure) => {\n        delete nuxtApp._processingMiddleware;\n        if (import.meta.client && !nuxtApp.isHydrating && error.value) {\n          await nuxtApp.runWithContext(clearError);\n        }\n        if (failure) {\n          await nuxtApp.callHook(\"page:loading:end\");\n        }\n        if (import.meta.server && failure?.type === 4) {\n          return;\n        }\n        if (import.meta.server && to.redirectedFrom && to.fullPath !== initialURL) {\n          await nuxtApp.runWithContext(() => navigateTo(to.fullPath || \"/\"));\n        }\n      });\n    }\n    try {\n      if (import.meta.server) {\n        await router.push(initialURL);\n      }\n      await router.isReady();\n    } catch (error2) {\n      await nuxtApp.runWithContext(() => showError(error2));\n    }\n    const resolvedInitialRoute = import.meta.client && initialURL !== router.currentRoute.value.fullPath ? router.resolve(initialURL) : router.currentRoute.value;\n    syncCurrentRoute();\n    if (import.meta.server && nuxtApp.ssrContext?.islandContext) {\n      return { provide: { router } };\n    }\n    const initialLayout = nuxtApp.payload.state._layout;\n    router.beforeEach(async (to, from) => {\n      await nuxtApp.callHook(\"page:loading:start\");\n      to.meta = reactive(to.meta);\n      if (nuxtApp.isHydrating && initialLayout && !isReadonly(to.meta.layout)) {\n        to.meta.layout = initialLayout;\n      }\n      nuxtApp._processingMiddleware = true;\n      if (import.meta.client || !nuxtApp.ssrContext?.islandContext) {\n        const middlewareEntries = /* @__PURE__ */ new Set([...globalMiddleware, ...nuxtApp._middleware.global]);\n        for (const component of to.matched) {\n          const componentMiddleware = component.meta.middleware;\n          if (!componentMiddleware) {\n            continue;\n          }\n          for (const entry of toArray(componentMiddleware)) {\n            middlewareEntries.add(entry);\n          }\n        }\n        if (isAppManifestEnabled) {\n          const routeRules = await nuxtApp.runWithContext(() => getRouteRules({ path: to.path }));\n          if (routeRules.appMiddleware) {\n            for (const key in routeRules.appMiddleware) {\n              if (routeRules.appMiddleware[key]) {\n                middlewareEntries.add(key);\n              } else {\n                middlewareEntries.delete(key);\n              }\n            }\n          }\n        }\n        for (const entry of middlewareEntries) {\n          const middleware = typeof entry === \"string\" ? nuxtApp._middleware.named[entry] || await namedMiddleware[entry]?.().then((r) => r.default || r) : entry;\n          if (!middleware) {\n            if (import.meta.dev) {\n              throw new Error(`Unknown route middleware: '${entry}'. Valid middleware: ${Object.keys(namedMiddleware).map((mw) => `'${mw}'`).join(\", \")}.`);\n            }\n            throw new Error(`Unknown route middleware: '${entry}'.`);\n          }\n          try {\n            if (import.meta.dev) {\n              nuxtApp._processingMiddleware = middleware._path || (typeof entry === \"string\" ? entry : true);\n            }\n            const result = await nuxtApp.runWithContext(() => middleware(to, from));\n            if (import.meta.server || !nuxtApp.payload.serverRendered && nuxtApp.isHydrating) {\n              if (result === false || result instanceof Error) {\n                const error2 = result || createError({\n                  statusCode: 404,\n                  statusMessage: `Page Not Found: ${initialURL}`\n                });\n                await nuxtApp.runWithContext(() => showError(error2));\n                return false;\n              }\n            }\n            if (result === true) {\n              continue;\n            }\n            if (result === false) {\n              return result;\n            }\n            if (result) {\n              if (isNuxtError(result) && result.fatal) {\n                await nuxtApp.runWithContext(() => showError(result));\n              }\n              return result;\n            }\n          } catch (err) {\n            const error2 = createError(err);\n            if (error2.fatal) {\n              await nuxtApp.runWithContext(() => showError(error2));\n            }\n            return error2;\n          }\n        }\n      }\n    });\n    router.onError(async () => {\n      delete nuxtApp._processingMiddleware;\n      await nuxtApp.callHook(\"page:loading:end\");\n    });\n    router.afterEach((to) => {\n      if (to.matched.length === 0) {\n        return nuxtApp.runWithContext(() => showError(createError({\n          statusCode: 404,\n          fatal: false,\n          statusMessage: `Page not found: ${to.fullPath}`,\n          data: {\n            path: to.fullPath\n          }\n        })));\n      }\n    });\n    nuxtApp.hooks.hookOnce(\"app:created\", async () => {\n      try {\n        if (\"name\" in resolvedInitialRoute) {\n          resolvedInitialRoute.name = void 0;\n        }\n        await router.replace({\n          ...resolvedInitialRoute,\n          force: true\n        });\n        router.options.scrollBehavior = routerOptions.scrollBehavior;\n      } catch (error2) {\n        await nuxtApp.runWithContext(() => showError(error2));\n      }\n    });\n    return { provide: { router } };\n  }\n});\nexport default plugin;\n","import { hasInjectionContext, inject } from \"vue\";\nimport {\n  useHead as headCore,\n  useHeadSafe as headSafe,\n  headSymbol,\n  useSeoMeta as seoMeta,\n  useServerHead as serverHead,\n  useServerHeadSafe as serverHeadSafe,\n  useServerSeoMeta as serverSeoMeta\n} from \"@unhead/vue\";\nimport { tryUseNuxtApp } from \"#app/nuxt\";\nexport function injectHead(nuxtApp) {\n  const nuxt = nuxtApp || tryUseNuxtApp();\n  return nuxt?.ssrContext?.head || nuxt?.runWithContext(() => {\n    if (hasInjectionContext()) {\n      return inject(headSymbol);\n    }\n  });\n}\nexport function useHead(input, options = {}) {\n  const head = injectHead(options.nuxt);\n  if (head) {\n    return headCore(input, { head, ...options });\n  }\n}\nexport function useHeadSafe(input, options = {}) {\n  const head = injectHead(options.nuxt);\n  if (head) {\n    return headSafe(input, { head, ...options });\n  }\n}\nexport function useSeoMeta(input, options = {}) {\n  const head = injectHead(options.nuxt);\n  if (head) {\n    return seoMeta(input, { head, ...options });\n  }\n}\nexport function useServerHead(input, options = {}) {\n  const head = injectHead(options.nuxt);\n  if (head) {\n    return serverHead(input, { head, ...options });\n  }\n}\nexport function useServerHeadSafe(input, options = {}) {\n  const head = injectHead(options.nuxt);\n  if (head) {\n    return serverHeadSafe(input, { head, ...options });\n  }\n}\nexport function useServerSeoMeta(input, options = {}) {\n  const head = injectHead(options.nuxt);\n  if (head) {\n    return serverSeoMeta(input, { head, ...options });\n  }\n}\n","import { hasProtocol, joinURL, withoutTrailingSlash } from \"ufo\";\nimport { parse } from \"devalue\";\nimport { getCurrentInstance, onServerPrefetch, reactive } from \"vue\";\nimport { useNuxtApp, useRuntimeConfig } from \"../nuxt.js\";\nimport { useHead } from \"./head.js\";\nimport { useRoute } from \"./router.js\";\nimport { getAppManifest, getRouteRules } from \"./manifest.js\";\nimport { appId, appManifest, multiApp, payloadExtraction, renderJsonPayloads } from \"#build/nuxt.config.mjs\";\nexport async function loadPayload(url, opts = {}) {\n  if (import.meta.server || !payloadExtraction) {\n    return null;\n  }\n  const shouldLoadPayload = await isPrerendered(url);\n  if (!shouldLoadPayload) {\n    return null;\n  }\n  const payloadURL = await _getPayloadURL(url, opts);\n  return await _importPayload(payloadURL) || null;\n}\nlet linkRelType;\nfunction detectLinkRelType() {\n  if (import.meta.server) {\n    return \"preload\";\n  }\n  if (linkRelType) {\n    return linkRelType;\n  }\n  const relList = document.createElement(\"link\").relList;\n  linkRelType = relList && relList.supports && relList.supports(\"prefetch\") ? \"prefetch\" : \"preload\";\n  return linkRelType;\n}\nexport function preloadPayload(url, opts = {}) {\n  const nuxtApp = useNuxtApp();\n  const promise = _getPayloadURL(url, opts).then((payloadURL) => {\n    const link = renderJsonPayloads ? { rel: detectLinkRelType(), as: \"fetch\", crossorigin: \"anonymous\", href: payloadURL } : { rel: \"modulepreload\", crossorigin: \"\", href: payloadURL };\n    if (import.meta.server) {\n      nuxtApp.runWithContext(() => useHead({ link: [link] }));\n    } else {\n      const linkEl = document.createElement(\"link\");\n      for (const key of Object.keys(link)) {\n        linkEl[key === \"crossorigin\" ? \"crossOrigin\" : key] = link[key];\n      }\n      document.head.appendChild(linkEl);\n      return new Promise((resolve, reject) => {\n        linkEl.addEventListener(\"load\", () => resolve());\n        linkEl.addEventListener(\"error\", () => reject());\n      });\n    }\n  });\n  if (import.meta.server) {\n    onServerPrefetch(() => promise);\n  }\n  return promise;\n}\nconst filename = renderJsonPayloads ? \"_payload.json\" : \"_payload.js\";\nasync function _getPayloadURL(url, opts = {}) {\n  const u = new URL(url, \"http://localhost\");\n  if (u.host !== \"localhost\" || hasProtocol(u.pathname, { acceptRelative: true })) {\n    throw new Error(\"Payload URL must not include hostname: \" + url);\n  }\n  const config = useRuntimeConfig();\n  const hash = opts.hash || (opts.fresh ? Date.now() : config.app.buildId);\n  const cdnURL = config.app.cdnURL;\n  const baseOrCdnURL = cdnURL && await isPrerendered(url) ? cdnURL : config.app.baseURL;\n  return joinURL(baseOrCdnURL, u.pathname, filename + (hash ? `?${hash}` : \"\"));\n}\nasync function _importPayload(payloadURL) {\n  if (import.meta.server || !payloadExtraction) {\n    return null;\n  }\n  const payloadPromise = renderJsonPayloads ? fetch(payloadURL, { cache: \"force-cache\" }).then((res) => res.text().then(parsePayload)) : import(\n    /* webpackIgnore: true */\n    /* @vite-ignore */\n    payloadURL\n  ).then((r) => r.default || r);\n  try {\n    return await payloadPromise;\n  } catch (err) {\n    console.warn(\"[nuxt] Cannot load payload \", payloadURL, err);\n  }\n  return null;\n}\nexport async function isPrerendered(url = useRoute().path) {\n  const nuxtApp = useNuxtApp();\n  if (!appManifest) {\n    return !!nuxtApp.payload.prerenderedAt;\n  }\n  url = withoutTrailingSlash(url);\n  const manifest = await getAppManifest();\n  if (manifest.prerendered.includes(url)) {\n    return true;\n  }\n  return nuxtApp.runWithContext(async () => {\n    const rules = await getRouteRules({ path: url });\n    return !!rules.prerender && !rules.redirect;\n  });\n}\nlet payloadCache = null;\nexport async function getNuxtClientPayload() {\n  if (import.meta.server) {\n    return null;\n  }\n  if (payloadCache) {\n    return payloadCache;\n  }\n  const el = multiApp ? document.querySelector(`[data-nuxt-data=\"${appId}\"]`) : document.getElementById(\"__NUXT_DATA__\");\n  if (!el) {\n    return {};\n  }\n  const inlineData = await parsePayload(el.textContent || \"\");\n  const externalData = el.dataset.src ? await _importPayload(el.dataset.src) : void 0;\n  payloadCache = {\n    ...inlineData,\n    ...externalData,\n    ...multiApp ? window.__NUXT__?.[appId] : window.__NUXT__\n  };\n  if (payloadCache.config?.public) {\n    payloadCache.config.public = reactive(payloadCache.config.public);\n  }\n  return payloadCache;\n}\nexport async function parsePayload(payload) {\n  return await parse(payload, useNuxtApp()._payloadRevivers);\n}\nexport function definePayloadReducer(name, reduce) {\n  if (import.meta.server) {\n    useNuxtApp().ssrContext._payloadReducers[name] = reduce;\n  }\n}\nexport function definePayloadReviver(name, revive) {\n  if (import.meta.dev && getCurrentInstance()) {\n    console.warn(\"[nuxt] [definePayloadReviver] This function must be called in a Nuxt plugin that is `unshift`ed to the beginning of the Nuxt plugins array.\");\n  }\n  if (import.meta.client) {\n    useNuxtApp()._payloadRevivers[name] = revive;\n  }\n}\n","import { isReactive, isRef, isShallow, toRaw } from \"vue\";\nimport { definePayloadReducer } from \"../composables/payload.js\";\nimport { isNuxtError } from \"../composables/error.js\";\nimport { defineNuxtPlugin } from \"../nuxt.js\";\nimport { componentIslands } from \"#build/nuxt.config.mjs\";\nimport { isValidIslandKey } from \"./utils.js\";\nconst reducers = [\n  [\"NuxtError\", (data) => isNuxtError(data) && data.toJSON()],\n  [\"EmptyShallowRef\", (data) => isRef(data) && isShallow(data) && !data.value && (typeof data.value === \"bigint\" ? \"0n\" : JSON.stringify(data.value) || \"_\")],\n  [\"EmptyRef\", (data) => isRef(data) && !data.value && (typeof data.value === \"bigint\" ? \"0n\" : JSON.stringify(data.value) || \"_\")],\n  [\"ShallowRef\", (data) => isRef(data) && isShallow(data) && data.value],\n  [\"ShallowReactive\", (data) => isReactive(data) && isShallow(data) && toRaw(data)],\n  [\"Ref\", (data) => isRef(data) && data.value],\n  [\"Reactive\", (data) => isReactive(data) && toRaw(data)]\n];\nif (componentIslands) {\n  reducers.push([\"Island\", (data) => data && data?.__nuxt_island && isValidIslandKey(data.__nuxt_island.key) && data.__nuxt_island]);\n}\nexport default defineNuxtPlugin({\n  name: \"nuxt:revive-payload:server\",\n  setup() {\n    for (const [reducer, fn] of reducers) {\n      definePayloadReducer(reducer, fn);\n    }\n  }\n});\n","<template>\n  <div :class=\"ui.wrapper\">\n    <HDisclosure\n      v-for=\"(item, index) in items\"\n      v-slot=\"{ open, close }\"\n      :key=\"index\"\n      as=\"div\"\n      :class=\"ui.container\"\n      :default-open=\"defaultOpen || item.defaultOpen\"\n    >\n      <HDisclosureButton\n        :ref=\"() => buttonRefs[index] = { open, close }\"\n        as=\"template\"\n        :disabled=\"item.disabled\"\n        @click=\"closeOthers(index, $event)\"\n        @keydown.enter=\"closeOthers(index, $event)\"\n        @keydown.space=\"closeOthers(index, $event)\"\n      >\n        <slot :item=\"item\" :index=\"index\" :open=\"open\" :close=\"close\">\n          <UButton v-bind=\"{ ...omit(ui.default, ['openIcon', 'closeIcon']), ...attrs, ...omit(item, ['slot', 'disabled', 'content', 'defaultOpen']) }\">\n            <template #trailing>\n              <UIcon\n                :name=\"!open ? openIcon : closeIcon ? closeIcon : openIcon\"\n                :class=\"[\n  open && !closeIcon ? '-rotate-180' : '',\n  uiButton.icon.size[item.size || uiButton.default.size],\n  ui.item.icon\n]\"\n              />\n            </template>\n          </UButton>\n        </slot>\n      </HDisclosureButton>\n\n      <Transition\n        v-bind=\"ui.transition\"\n        @enter=\"onEnter\"\n        @after-enter=\"onAfterEnter\"\n        @before-leave=\"onBeforeLeave\"\n        @leave=\"onLeave\"\n      >\n        <HDisclosurePanel\n          v-if=\"unmount\"\n          :class=\"[ui.item.base, ui.item.size, ui.item.color, ui.item.padding]\"\n          unmount\n        >\n          <slot :name=\"item.slot || 'item'\" :item=\"item\" :index=\"index\" :open=\"open\" :close=\"close\">\n            {{ item.content }}\n          </slot>\n        </HDisclosurePanel>\n        <template v-else>\n          <div v-show=\"open\">\n            <HDisclosurePanel\n              :class=\"[ui.item.base, ui.item.size, ui.item.color, ui.item.padding]\"\n              static\n            >\n              <slot :name=\"item.slot || 'item'\" :item=\"item\" :index=\"index\" :open=\"open\" :close=\"close\">\n                {{ item.content }}\n              </slot>\n            </HDisclosurePanel>\n          </div>\n        </template>\n      </Transition>\n    </HDisclosure>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, toRef, defineComponent, watch } from \"vue\";\nimport { Disclosure as HDisclosure, DisclosureButton as HDisclosureButton, DisclosurePanel as HDisclosurePanel, provideUseId } from \"@headlessui/vue\";\nimport UIcon from \"../elements/Icon.vue\";\nimport UButton from \"../elements/Button.vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { mergeConfig, omit } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { accordion, button } from \"#ui/ui.config\";\nimport { useId } from \"#imports\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.accordion, accordion);\nconst configButton = mergeConfig(appConfig.ui.strategy, appConfig.ui.button, button);\nexport default defineComponent({\n  components: {\n    HDisclosure,\n    HDisclosureButton,\n    HDisclosurePanel,\n    UIcon,\n    UButton\n  },\n  inheritAttrs: false,\n  props: {\n    items: {\n      type: Array,\n      default: () => []\n    },\n    defaultOpen: {\n      type: Boolean,\n      default: false\n    },\n    openIcon: {\n      type: String,\n      default: () => config.default.openIcon\n    },\n    unmount: {\n      type: Boolean,\n      default: false\n    },\n    closeIcon: {\n      type: String,\n      default: () => config.default.closeIcon\n    },\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: [\"open\", \"close\"],\n  setup(props, { emit }) {\n    const { ui, attrs } = useUI(\"accordion\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const uiButton = computed(() => configButton);\n    const buttonRefs = ref([]);\n    const openedStates = computed(() => buttonRefs.value.map(({ open }) => open));\n    watch(openedStates, (newValue, oldValue) => {\n      for (const index in newValue) {\n        const isOpenBefore = oldValue[index];\n        const isOpenAfter = newValue[index];\n        if (!isOpenBefore && isOpenAfter) {\n          emit(\"open\", index);\n        } else if (isOpenBefore && !isOpenAfter) {\n          emit(\"close\", index);\n        }\n      }\n    }, { immediate: true });\n    function closeOthers(currentIndex, e) {\n      if (!props.items[currentIndex].closeOthers && props.multiple) {\n        return;\n      }\n      buttonRefs.value.forEach((button2) => {\n        if (button2.open) {\n          button2.close(e.target);\n        }\n      });\n    }\n    function onEnter(_el, done) {\n      const el = _el;\n      el.style.height = \"0\";\n      el.offsetHeight;\n      el.style.height = el.scrollHeight + \"px\";\n      el.addEventListener(\"transitionend\", done, { once: true });\n    }\n    function onBeforeLeave(_el) {\n      const el = _el;\n      el.style.height = el.scrollHeight + \"px\";\n      el.offsetHeight;\n    }\n    function onAfterEnter(_el) {\n      const el = _el;\n      el.style.height = \"auto\";\n    }\n    function onLeave(_el, done) {\n      const el = _el;\n      el.style.height = \"0\";\n      el.addEventListener(\"transitionend\", done, { once: true });\n    }\n    provideUseId(() => useId());\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      uiButton,\n      attrs,\n      buttonRefs,\n      closeOthers,\n      omit,\n      onEnter,\n      onBeforeLeave,\n      onAfterEnter,\n      onLeave\n    };\n  }\n});\n</script>\n","<template>\n  <div :class=\"alertClass\" v-bind=\"attrs\">\n    <div class=\"flex\" :class=\"[ui.gap, { 'items-start': description || $slots.description, 'items-center': !description && !$slots.description }]\">\n      <slot name=\"icon\" :icon=\"icon\">\n        <UIcon v-if=\"icon\" :name=\"icon\" :class=\"ui.icon.base\" />\n      </slot>\n      <slot name=\"avatar\" :avatar=\"avatar\">\n        <UAvatar v-if=\"avatar\" v-bind=\"{ size: ui.avatar.size, ...avatar }\" :class=\"ui.avatar.base\" />\n      </slot>\n\n      <div :class=\"ui.inner\">\n        <p v-if=\"title || $slots.title\" :class=\"ui.title\">\n          <slot name=\"title\" :title=\"title\">\n            {{ title }}\n          </slot>\n        </p>\n        <div v-if=\"description || $slots.description\" :class=\"twMerge(ui.description, !title && !$slots.title && ui.descriptionOnly)\">\n          <slot name=\"description\" :description=\"description\">\n            {{ description }}\n          </slot>\n        </div>\n\n        <div v-if=\"(description || $slots.description) && (actions.length || $slots.actions)\" :class=\"ui.actions\">\n          <slot name=\"actions\">\n            <UButton v-for=\"(action, index) of actions\" :key=\"index\" v-bind=\"{ ...ui.default.actionButton || {}, ...action }\" @click.stop=\"onAction(action)\" />\n          </slot>\n        </div>\n      </div>\n      <div v-if=\"closeButton || !description && !$slots.description && actions.length\" :class=\"twMerge(ui.actions, 'mt-0')\">\n        <template v-if=\"!description && !$slots.description && (actions.length || $slots.actions)\">\n          <slot name=\"actions\">\n            <UButton v-for=\"(action, index) of actions\" :key=\"index\" v-bind=\"{ ...ui.default.actionButton || {}, ...action }\" @click.stop=\"onAction(action)\" />\n          </slot>\n        </template>\n\n        <UButton v-if=\"closeButton\" aria-label=\"Close\" v-bind=\"{ ...ui.default.closeButton || {}, ...closeButton }\" @click.stop=\"$emit('close')\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { computed, toRef, defineComponent } from \"vue\";\nimport { twJoin } from \"tailwind-merge\";\nimport UIcon from \"../elements/Icon.vue\";\nimport UAvatar from \"../elements/Avatar.vue\";\nimport UButton from \"../elements/Button.vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { mergeConfig, twMerge } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { alert } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.alert, alert);\nexport default defineComponent({\n  components: {\n    UIcon,\n    UAvatar,\n    UButton\n  },\n  inheritAttrs: false,\n  props: {\n    title: {\n      type: String,\n      default: null\n    },\n    description: {\n      type: String,\n      default: null\n    },\n    icon: {\n      type: String,\n      default: () => config.default.icon\n    },\n    avatar: {\n      type: Object,\n      default: null\n    },\n    closeButton: {\n      type: Object,\n      default: () => config.default.closeButton\n    },\n    actions: {\n      type: Array,\n      default: () => []\n    },\n    color: {\n      type: String,\n      default: () => config.default.color,\n      validator(value) {\n        return [...appConfig.ui.colors, ...Object.keys(config.color)].includes(value);\n      }\n    },\n    variant: {\n      type: String,\n      default: () => config.default.variant,\n      validator(value) {\n        return [\n          ...Object.keys(config.variant),\n          ...Object.values(config.color).flatMap((value2) => Object.keys(value2))\n        ].includes(value);\n      }\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: [\"close\"],\n  setup(props) {\n    const { ui, attrs } = useUI(\"alert\", toRef(props, \"ui\"), config);\n    const alertClass = computed(() => {\n      const variant = ui.value.color?.[props.color]?.[props.variant] || ui.value.variant[props.variant];\n      return twMerge(twJoin(\n        ui.value.wrapper,\n        ui.value.rounded,\n        ui.value.shadow,\n        ui.value.padding,\n        variant?.replaceAll(\"{color}\", props.color)\n      ), props.class);\n    });\n    function onAction(action) {\n      if (action.click) {\n        action.click();\n      }\n    }\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      alertClass,\n      onAction,\n      twMerge\n    };\n  }\n});\n</script>\n","<template>\n  <span :class=\"wrapperClass\">\n    <component\n      :is=\"as\"\n      v-if=\"url && !error\"\n      :class=\"imgClass\"\n      :alt=\"alt\"\n      :src=\"url\"\n      v-bind=\"attrs\"\n      @error=\"onError\"\n    />\n    <span v-else-if=\"text\" :class=\"ui.text\">{{ text }}</span>\n    <UIcon v-else-if=\"icon\" :name=\"icon\" :class=\"iconClass\" />\n    <span v-else-if=\"placeholder\" :class=\"ui.placeholder\">{{ placeholder }}</span>\n\n    <span v-if=\"chipColor\" :class=\"chipClass\">\n      {{ chipText }}\n    </span>\n    <slot />\n  </span>\n</template>\n\n<script>\nimport { defineComponent, ref, computed, toRef, watch } from \"vue\";\nimport { twJoin } from \"tailwind-merge\";\nimport UIcon from \"../elements/Icon.vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { mergeConfig, twMerge } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { avatar } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.avatar, avatar);\nexport default defineComponent({\n  components: {\n    UIcon\n  },\n  inheritAttrs: false,\n  props: {\n    as: {\n      type: [String, Object],\n      default: \"img\"\n    },\n    src: {\n      type: [String, Boolean],\n      default: null\n    },\n    alt: {\n      type: String,\n      default: null\n    },\n    text: {\n      type: String,\n      default: null\n    },\n    icon: {\n      type: String,\n      default: () => config.default.icon\n    },\n    size: {\n      type: String,\n      default: () => config.default.size,\n      validator(value) {\n        return Object.keys(config.size).includes(value);\n      }\n    },\n    chipColor: {\n      type: String,\n      default: () => config.default.chipColor,\n      validator(value) {\n        return [\"gray\", ...appConfig.ui.colors].includes(value);\n      }\n    },\n    chipPosition: {\n      type: String,\n      default: () => config.default.chipPosition,\n      validator(value) {\n        return Object.keys(config.chip.position).includes(value);\n      }\n    },\n    chipText: {\n      type: [String, Number],\n      default: null\n    },\n    imgClass: {\n      type: String,\n      default: \"\"\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props) {\n    const { ui, attrs } = useUI(\"avatar\", toRef(props, \"ui\"), config);\n    const url = computed(() => {\n      if (typeof props.src === \"boolean\") {\n        return null;\n      }\n      return props.src;\n    });\n    const placeholder = computed(() => {\n      return (props.alt || \"\").split(\" \").map((word) => word.charAt(0)).join(\"\").substring(0, 2);\n    });\n    const wrapperClass = computed(() => {\n      return twMerge(twJoin(\n        ui.value.wrapper,\n        (error.value || !url.value) && ui.value.background,\n        ui.value.rounded,\n        ui.value.size[props.size]\n      ), props.class);\n    });\n    const imgClass = computed(() => {\n      return twMerge(twJoin(\n        ui.value.rounded,\n        ui.value.size[props.size]\n      ), props.imgClass);\n    });\n    const iconClass = computed(() => {\n      return twJoin(\n        ui.value.icon.base,\n        ui.value.icon.size[props.size]\n      );\n    });\n    const chipClass = computed(() => {\n      return twJoin(\n        ui.value.chip.base,\n        ui.value.chip.size[props.size],\n        ui.value.chip.position[props.chipPosition],\n        ui.value.chip.background.replaceAll(\"{color}\", props.chipColor)\n      );\n    });\n    const error = ref(false);\n    watch(() => props.src, () => {\n      if (error.value) {\n        error.value = false;\n      }\n    });\n    function onError() {\n      error.value = true;\n    }\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      wrapperClass,\n      // eslint-disable-next-line vue/no-dupe-keys\n      imgClass,\n      iconClass,\n      chipClass,\n      url,\n      placeholder,\n      error,\n      onError\n    };\n  }\n});\n</script>\n","import { h, cloneVNode, computed, toRef, defineComponent } from \"vue\";\nimport { twJoin } from \"tailwind-merge\";\nimport { useUI } from \"../../composables/useUI.js\";\nimport { getSlotsChildren, mergeConfig, twMerge } from \"../../utils/index.js\";\nimport UAvatar from \"./Avatar.vue\";\nimport appConfig from \"#build/app.config\";\nimport { avatar, avatarGroup } from \"#ui/ui.config\";\nconst avatarConfig = mergeConfig(appConfig.ui.strategy, appConfig.ui.avatar, avatar);\nconst avatarGroupConfig = mergeConfig(appConfig.ui.strategy, appConfig.ui.avatarGroup, avatarGroup);\nexport default defineComponent({\n  inheritAttrs: false,\n  props: {\n    size: {\n      type: String,\n      default: null,\n      validator(value) {\n        return Object.keys(avatarConfig.size).includes(value);\n      }\n    },\n    max: {\n      type: Number,\n      default: null\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props, { slots }) {\n    const { ui, attrs } = useUI(\"avatarGroup\", toRef(props, \"ui\"), avatarGroupConfig, toRef(props, \"class\"));\n    const children = computed(() => getSlotsChildren(slots));\n    const max = computed(() => typeof props.max === \"string\" ? Number.parseInt(props.max, 10) : props.max);\n    const clones = computed(() => children.value.map((node, index) => {\n      const vProps = {};\n      if (!props.max || max.value && index < max.value) {\n        if (props.size) {\n          vProps.size = props.size;\n        }\n        vProps.class = node.props.class || \"\";\n        vProps.class = twMerge(twJoin(vProps.class, ui.value.ring, ui.value.margin), vProps.class);\n        return cloneVNode(node, vProps);\n      }\n      if (max.value !== void 0 && index === max.value) {\n        return h(UAvatar, {\n          size: props.size || avatarConfig.default.size,\n          text: `+${children.value.length - max.value}`,\n          class: twJoin(ui.value.ring, ui.value.margin)\n        });\n      }\n      return null;\n    }).filter(Boolean).reverse());\n    return () => h(\"div\", { class: ui.value.wrapper, ...attrs.value }, clones.value);\n  }\n});\n","<template>\n  <span :class=\"badgeClass\" v-bind=\"attrs\">\n    <slot name=\"leading\">\n      <UIcon v-if=\"isLeading && leadingIconName\" :name=\"leadingIconName\" :class=\"leadingIconClass\" aria-hidden=\"true\" />\n    </slot>\n\n    <slot>\n      <span v-if=\"label !== void 0 && label !== null\">\n        {{ label }}\n      </span>\n    </slot>\n\n    <slot name=\"trailing\">\n      <UIcon v-if=\"isTrailing && trailingIconName\" :name=\"trailingIconName\" :class=\"trailingIconClass\" aria-hidden=\"true\" />\n    </slot>\n  </span>\n</template>\n\n<script>\nimport { computed, toRef, defineComponent } from \"vue\";\nimport { twJoin } from \"tailwind-merge\";\nimport UIcon from \"../elements/Icon.vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { mergeConfig, twMerge } from \"../../utils\";\nimport { useInjectButtonGroup } from \"../../composables/useButtonGroup\";\nimport appConfig from \"#build/app.config\";\nimport { badge } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.badge, badge);\nexport default defineComponent({\n  components: {\n    UIcon\n  },\n  inheritAttrs: false,\n  props: {\n    size: {\n      type: String,\n      default: () => config.default.size,\n      validator(value) {\n        return Object.keys(config.size).includes(value);\n      }\n    },\n    color: {\n      type: String,\n      default: () => config.default.color,\n      validator(value) {\n        return [...appConfig.ui.colors, ...Object.keys(config.color)].includes(value);\n      }\n    },\n    variant: {\n      type: String,\n      default: () => config.default.variant,\n      validator(value) {\n        return [\n          ...Object.keys(config.variant),\n          ...Object.values(config.color).flatMap((value2) => Object.keys(value2))\n        ].includes(value);\n      }\n    },\n    label: {\n      type: [String, Number],\n      default: null\n    },\n    icon: {\n      type: String,\n      default: null\n    },\n    leadingIcon: {\n      type: String,\n      default: null\n    },\n    trailingIcon: {\n      type: String,\n      default: null\n    },\n    trailing: {\n      type: Boolean,\n      default: false\n    },\n    leading: {\n      type: Boolean,\n      default: false\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props) {\n    const { ui, attrs } = useUI(\"badge\", toRef(props, \"ui\"), config);\n    const { size, rounded } = useInjectButtonGroup({ ui, props });\n    const isLeading = computed(() => {\n      return props.icon && props.leading || props.icon && !props.trailing || !props.trailing || props.leadingIcon;\n    });\n    const isTrailing = computed(() => {\n      return props.icon && props.trailing || props.trailing || props.trailingIcon;\n    });\n    const badgeClass = computed(() => {\n      const variant = ui.value.color?.[props.color]?.[props.variant] || ui.value.variant[props.variant];\n      return twMerge(twJoin(\n        ui.value.base,\n        ui.value.font,\n        rounded.value,\n        ui.value.size[size.value],\n        ui.value.gap[size.value],\n        variant?.replaceAll(\"{color}\", props.color)\n      ), props.class);\n    });\n    const leadingIconName = computed(() => {\n      return props.leadingIcon || props.icon;\n    });\n    const trailingIconName = computed(() => {\n      return props.trailingIcon || props.icon;\n    });\n    const leadingIconClass = computed(() => {\n      return twJoin(\n        ui.value.icon.base,\n        ui.value.icon.size[size.value]\n      );\n    });\n    const trailingIconClass = computed(() => {\n      return twJoin(\n        ui.value.icon.base,\n        ui.value.icon.size[size.value]\n      );\n    });\n    return {\n      attrs,\n      isLeading,\n      isTrailing,\n      badgeClass,\n      leadingIconName,\n      trailingIconName,\n      leadingIconClass,\n      trailingIconClass\n    };\n  }\n});\n</script>\n","<template>\n  <ULink :type=\"type\" :disabled=\"disabled || loading\" :class=\"buttonClass\" v-bind=\"{ ...linkProps, ...attrs }\">\n    <slot name=\"leading\" :disabled=\"disabled\" :loading=\"loading\">\n      <UIcon v-if=\"isLeading && leadingIconName\" :name=\"leadingIconName\" :class=\"leadingIconClass\" aria-hidden=\"true\" />\n    </slot>\n\n    <slot>\n      <span v-if=\"label !== void 0 && label !== null\" :class=\"[truncate ? ui.truncate : '']\">\n        {{ label }}\n      </span>\n    </slot>\n\n    <slot name=\"trailing\" :disabled=\"disabled\" :loading=\"loading\">\n      <UIcon v-if=\"isTrailing && trailingIconName\" :name=\"trailingIconName\" :class=\"trailingIconClass\" aria-hidden=\"true\" />\n    </slot>\n  </ULink>\n</template>\n\n<script>\nimport { computed, defineComponent, toRef } from \"vue\";\nimport { twJoin } from \"tailwind-merge\";\nimport UIcon from \"../elements/Icon.vue\";\nimport ULink from \"../elements/Link.vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { getNuxtLinkProps, mergeConfig, nuxtLinkProps, twMerge } from \"../../utils\";\nimport { useInjectButtonGroup } from \"../../composables/useButtonGroup\";\nimport appConfig from \"#build/app.config\";\nimport { button } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.button, button);\nexport default defineComponent({\n  components: {\n    UIcon,\n    ULink\n  },\n  inheritAttrs: false,\n  props: {\n    ...nuxtLinkProps,\n    type: {\n      type: String,\n      default: \"button\"\n    },\n    block: {\n      type: Boolean,\n      default: false\n    },\n    label: {\n      type: String,\n      default: null\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    padded: {\n      type: Boolean,\n      default: true\n    },\n    size: {\n      type: String,\n      default: () => config.default.size,\n      validator(value) {\n        return Object.keys(config.size).includes(value);\n      }\n    },\n    color: {\n      type: String,\n      default: () => config.default.color,\n      validator(value) {\n        return [...appConfig.ui.colors, ...Object.keys(config.color)].includes(value);\n      }\n    },\n    variant: {\n      type: String,\n      default: () => config.default.variant,\n      validator(value) {\n        return [\n          ...Object.keys(config.variant),\n          ...Object.values(config.color).flatMap((value2) => Object.keys(value2))\n        ].includes(value);\n      }\n    },\n    icon: {\n      type: String,\n      default: null\n    },\n    loadingIcon: {\n      type: String,\n      default: () => config.default.loadingIcon\n    },\n    leadingIcon: {\n      type: String,\n      default: null\n    },\n    trailingIcon: {\n      type: String,\n      default: null\n    },\n    trailing: {\n      type: Boolean,\n      default: false\n    },\n    leading: {\n      type: Boolean,\n      default: false\n    },\n    square: {\n      type: Boolean,\n      default: false\n    },\n    truncate: {\n      type: Boolean,\n      default: false\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props, { slots }) {\n    const { ui, attrs } = useUI(\"button\", toRef(props, \"ui\"), config);\n    const { size, rounded } = useInjectButtonGroup({ ui, props });\n    const isLeading = computed(() => {\n      return props.icon && props.leading || props.icon && !props.trailing || props.loading && !props.trailing || props.leadingIcon;\n    });\n    const isTrailing = computed(() => {\n      return props.icon && props.trailing || props.loading && props.trailing || props.trailingIcon;\n    });\n    const isSquare = computed(() => props.square || !slots.default && !props.label);\n    const buttonClass = computed(() => {\n      const variant = ui.value.color?.[props.color]?.[props.variant] || ui.value.variant[props.variant];\n      return twMerge(twJoin(\n        ui.value.base,\n        ui.value.font,\n        rounded.value,\n        ui.value.size[size.value],\n        ui.value.gap[size.value],\n        props.padded && ui.value[isSquare.value ? \"square\" : \"padding\"][size.value],\n        variant?.replaceAll(\"{color}\", props.color),\n        props.block ? ui.value.block : ui.value.inline\n      ), props.class);\n    });\n    const leadingIconName = computed(() => {\n      if (props.loading) {\n        return props.loadingIcon;\n      }\n      return props.leadingIcon || props.icon;\n    });\n    const trailingIconName = computed(() => {\n      if (props.loading && !isLeading.value) {\n        return props.loadingIcon;\n      }\n      return props.trailingIcon || props.icon;\n    });\n    const leadingIconClass = computed(() => {\n      return twJoin(\n        ui.value.icon.base,\n        ui.value.icon.size[size.value],\n        props.loading && ui.value.icon.loading\n      );\n    });\n    const trailingIconClass = computed(() => {\n      return twJoin(\n        ui.value.icon.base,\n        ui.value.icon.size[size.value],\n        props.loading && !isLeading.value && ui.value.icon.loading\n      );\n    });\n    const linkProps = computed(() => getNuxtLinkProps(props));\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      isLeading,\n      isTrailing,\n      isSquare,\n      buttonClass,\n      leadingIconName,\n      trailingIconName,\n      leadingIconClass,\n      trailingIconClass,\n      linkProps\n    };\n  }\n});\n</script>\n","import { h, computed, toRef, defineComponent } from \"vue\";\nimport { twJoin } from \"tailwind-merge\";\nimport { useUI } from \"../../composables/useUI.js\";\nimport { getSlotsChildren, mergeConfig, twMerge } from \"../../utils/index.js\";\nimport { useProvideButtonGroup } from \"../../composables/useButtonGroup.js\";\nimport appConfig from \"#build/app.config\";\nimport { button, buttonGroup } from \"#ui/ui.config\";\nconst buttonConfig = mergeConfig(appConfig.ui.strategy, appConfig.ui.button, button);\nconst buttonGroupConfig = mergeConfig(appConfig.ui.strategy, appConfig.ui.buttonGroup, buttonGroup);\nexport default defineComponent({\n  name: \"ButtonGroup\",\n  inheritAttrs: false,\n  props: {\n    size: {\n      type: String,\n      default: null,\n      validator(value) {\n        return Object.keys(buttonConfig.size).includes(value);\n      }\n    },\n    orientation: {\n      type: String,\n      default: \"horizontal\",\n      validator(value) {\n        return [\"horizontal\", \"vertical\"].includes(value);\n      }\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props, { slots }) {\n    const { ui, attrs } = useUI(\"buttonGroup\", toRef(props, \"ui\"), buttonGroupConfig);\n    const children = computed(() => getSlotsChildren(slots));\n    const wrapperClass = computed(() => {\n      return twMerge(twJoin(\n        ui.value.wrapper[props.orientation],\n        ui.value.rounded,\n        ui.value.shadow\n      ), props.class);\n    });\n    const rounded = computed(() => ui.value.orientation[ui.value.rounded][props.orientation]);\n    useProvideButtonGroup({ orientation: toRef(props, \"orientation\"), size: toRef(props, \"size\"), ui, rounded });\n    return () => h(\"div\", { class: wrapperClass.value, ...attrs.value }, children.value);\n  }\n});\n","<template>\n  <div :class=\"ui.wrapper\" v-bind=\"attrs\" :dir=\"dir\">\n    <div ref=\"carouselRef\" :class=\"ui.container\" class=\"no-scrollbar\">\n      <div\n        v-for=\"(item, index) in items\"\n        :key=\"index\"\n        :class=\"ui.item\"\n        :role=\"indicators ? 'tabpanel' : null\"\n      >\n        <slot :item=\"item\" :index=\"index\" />\n      </div>\n    </div>\n\n    <div v-if=\"arrows\" :class=\"ui.arrows.wrapper\">\n      <slot name=\"prev\" :on-click=\"onClickPrev\" :disabled=\"isFirst\">\n        <UButton\n          v-if=\"prevButton\"\n          :disabled=\"isFirst\"\n          v-bind=\"{ ...ui.default.prevButton, ...prevButton }\"\n          :class=\"twMerge(ui.default.prevButton.class, prevButton?.class)\"\n          aria-label=\"Prev\"\n          @click=\"onClickPrev\"\n        />\n      </slot>\n\n      <slot name=\"next\" :on-click=\"onClickNext\" :disabled=\"isLast\">\n        <UButton\n          v-if=\"nextButton\"\n          :disabled=\"isLast\"\n          v-bind=\"{ ...ui.default.nextButton, ...nextButton }\"\n          :class=\"twMerge(ui.default.nextButton.class, nextButton?.class)\"\n          aria-label=\"Next\"\n          @click=\"onClickNext\"\n        />\n      </slot>\n    </div>\n\n    <div v-if=\"indicators\" role=\"tablist\" :class=\"ui.indicators.wrapper\">\n      <template v-for=\"page in pages\" :key=\"page\">\n        <slot name=\"indicator\" :on-click=\"onClick\" :active=\"page === currentPage\" :page=\"page\">\n          <button\n            type=\"button\"\n            role=\"tab\"\n            :aria-selected=\"page === currentPage\"\n            :class=\"[\n  ui.indicators.base,\n  page === currentPage ? ui.indicators.active : ui.indicators.inactive\n]\"\n            :aria-label=\"`set slide ${page}`\"\n            @click=\"onClick(page)\"\n          />\n        </slot>\n      </template>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, toRef, computed, defineComponent } from \"vue\";\nimport { useScroll, useResizeObserver, useElementSize } from \"@vueuse/core\";\nimport { mergeConfig, twMerge } from \"../../utils\";\nimport UButton from \"../elements/Button.vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { useCarouselScroll } from \"../../composables/useCarouselScroll\";\nimport appConfig from \"#build/app.config\";\nimport { carousel } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.carousel, carousel);\nexport default defineComponent({\n  components: {\n    UButton\n  },\n  inheritAttrs: false,\n  props: {\n    items: {\n      type: Array,\n      default: () => []\n    },\n    arrows: {\n      type: Boolean,\n      default: false\n    },\n    indicators: {\n      type: Boolean,\n      default: false\n    },\n    dir: {\n      type: String,\n      default: \"ltr\"\n    },\n    prevButton: {\n      type: Object,\n      default: () => config.default.prevButton\n    },\n    nextButton: {\n      type: Object,\n      default: () => config.default.nextButton\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: void 0\n    }\n  },\n  setup(props, { expose }) {\n    const { ui, attrs } = useUI(\"carousel\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const carouselRef = ref();\n    const itemWidth = ref(0);\n    const { x } = useScroll(carouselRef, { behavior: \"smooth\" });\n    const { width: carouselWidth } = useElementSize(carouselRef);\n    useCarouselScroll(carouselRef);\n    useResizeObserver(carouselRef, (entries) => {\n      const [entry] = entries;\n      itemWidth.value = entry?.target?.firstElementChild?.clientWidth || 0;\n    });\n    const isRtl = computed(() => props.dir === \"rtl\");\n    const currentPage = computed(() => {\n      if (!itemWidth.value) {\n        return 0;\n      }\n      return isRtl.value ? Math.round(-x.value / itemWidth.value) + 1 : Math.round(x.value / itemWidth.value) + 1;\n    });\n    const pages = computed(() => {\n      if (!itemWidth.value) {\n        return 0;\n      }\n      const itemDivisions = Math.round(carouselWidth.value / itemWidth.value);\n      if (props.items.length <= itemDivisions) {\n        return 0;\n      }\n      return props.items.length - itemDivisions + 1;\n    });\n    const isFirst = computed(() => currentPage.value <= 1);\n    const isLast = computed(() => currentPage.value === pages.value);\n    function onClickNext() {\n      x.value += isRtl.value ? -itemWidth.value : itemWidth.value;\n    }\n    function onClickPrev() {\n      x.value -= isRtl.value ? -itemWidth.value : itemWidth.value;\n    }\n    function onClick(page) {\n      x.value = (page - 1) * itemWidth.value * (isRtl.value ? -1 : 1);\n    }\n    expose({\n      pages,\n      page: currentPage,\n      prev: onClickPrev,\n      next: onClickNext,\n      select: onClick\n    });\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      isFirst,\n      isLast,\n      carouselRef,\n      pages,\n      currentPage,\n      onClickNext,\n      onClickPrev,\n      onClick,\n      twMerge\n    };\n  }\n});\n</script>\n\n<style scoped>\n.no-scrollbar::-webkit-scrollbar{display:none}.no-scrollbar{-ms-overflow-style:none;scrollbar-width:none}\n</style>\n","<template>\n  <div :class=\"ui.wrapper\" v-bind=\"attrs\">\n    <slot />\n\n    <span v-if=\"show\" :class=\"chipClass\">\n      <slot name=\"content\">\n        {{ text }}\n      </slot>\n    </span>\n  </div>\n</template>\n\n<script>\nimport { defineComponent, computed, toRef } from \"vue\";\nimport { twJoin } from \"tailwind-merge\";\nimport { useUI } from \"../../composables/useUI\";\nimport { mergeConfig } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { chip } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.chip, chip);\nexport default defineComponent({\n  inheritAttrs: false,\n  props: {\n    size: {\n      type: String,\n      default: () => config.default.size,\n      validator(value) {\n        return Object.keys(config.size).includes(value);\n      }\n    },\n    color: {\n      type: String,\n      default: () => config.default.color,\n      validator(value) {\n        return [\"gray\", ...appConfig.ui.colors].includes(value);\n      }\n    },\n    position: {\n      type: String,\n      default: () => config.default.position,\n      validator(value) {\n        return Object.keys(config.position).includes(value);\n      }\n    },\n    text: {\n      type: [String, Number],\n      default: null\n    },\n    inset: {\n      type: Boolean,\n      default: () => config.default.inset\n    },\n    show: {\n      type: Boolean,\n      default: true\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props) {\n    const { ui, attrs } = useUI(\"chip\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const chipClass = computed(() => {\n      return twJoin(\n        ui.value.base,\n        ui.value.size[props.size],\n        ui.value.position[props.position],\n        props.inset ? null : ui.value.translate[props.position],\n        ui.value.background.replaceAll(\"{color}\", props.color)\n      );\n    });\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      chipClass\n    };\n  }\n});\n</script>\n","<template>\n  <!-- eslint-disable-next-line vue/no-template-shadow -->\n  <HMenu v-slot=\"{ open }\" as=\"div\" :class=\"ui.wrapper\" v-bind=\"attrs\" @mouseleave=\"onMouseLeave\">\n    <HMenuButton\n      ref=\"trigger\"\n      as=\"div\"\n      :disabled=\"disabled\"\n      :class=\"ui.trigger\"\n      role=\"button\"\n      @mouseenter=\"onMouseEnter\"\n      @touchstart.passive=\"onTouchStart\"\n    >\n      <slot :open=\"open\" :disabled=\"disabled\">\n        <button :disabled=\"disabled\">\n          Open\n        </button>\n      </slot>\n    </HMenuButton>\n\n    <div v-if=\"open && items.length\" ref=\"container\" :class=\"[ui.container, ui.width]\" :style=\"containerStyle\" @mouseenter=\"onMouseEnter\">\n      <Transition appear v-bind=\"ui.transition\">\n        <div>\n          <div v-if=\"popper.arrow\" data-popper-arrow :class=\"Object.values(ui.arrow)\" />\n\n          <HMenuItems :class=\"[ui.base, ui.divide, ui.ring, ui.rounded, ui.shadow, ui.background, ui.height]\" static>\n            <div v-for=\"(subItems, index) of items\" :key=\"index\" :class=\"ui.padding\">\n              <NuxtLink v-for=\"(item, subIndex) of subItems\" :key=\"subIndex\" v-slot=\"{ href, target, rel, navigate, isExternal, isActive }\" v-bind=\"getNuxtLinkProps(item)\" custom>\n                <HMenuItem v-slot=\"{ active, disabled: itemDisabled, close }\" :disabled=\"item.disabled\">\n                  <component\n                    :is=\"!!href ? 'a' : 'button'\"\n                    :href=\"!itemDisabled ? href : void 0\"\n                    :rel=\"rel\"\n                    :target=\"target\"\n                    :class=\"twMerge(twJoin(ui.item.base, ui.item.padding, ui.item.size, ui.item.rounded, active || isActive ? ui.item.active : ui.item.inactive, itemDisabled && ui.item.disabled), item.class)\"\n                    @click=\"onClick($event, item, { href, navigate, close, isExternal })\"\n                  >\n                    <slot :name=\"item.slot || 'item'\" :item=\"item\">\n                      <UIcon v-if=\"item.icon\" :name=\"item.icon\" :class=\"twMerge(twJoin(ui.item.icon.base, active || isActive ? ui.item.icon.active : ui.item.icon.inactive), item.iconClass)\" />\n                      <UAvatar v-else-if=\"item.avatar\" v-bind=\"{ size: ui.item.avatar.size, ...item.avatar }\" :class=\"ui.item.avatar.base\" />\n\n                      <span :class=\"twMerge(ui.item.label, item.labelClass)\">{{ item.label }}</span>\n\n                      <span v-if=\"item.shortcuts?.length\" :class=\"ui.item.shortcuts\">\n                        <UKbd v-for=\"shortcut of item.shortcuts\" :key=\"shortcut\">{{ shortcut }}</UKbd>\n                      </span>\n                    </slot>\n                  </component>\n                </HMenuItem>\n              </NuxtLink>\n            </div>\n          </HMenuItems>\n        </div>\n      </Transition>\n    </div>\n  </HMenu>\n</template>\n\n<script>\nimport { defineComponent, ref, computed, watch, toRef, onMounted, resolveComponent } from \"vue\";\nimport { Menu as HMenu, MenuButton as HMenuButton, MenuItems as HMenuItems, MenuItem as HMenuItem, provideUseId } from \"@headlessui/vue\";\nimport { defu } from \"defu\";\nimport { twJoin } from \"tailwind-merge\";\nimport UIcon from \"../elements/Icon.vue\";\nimport UAvatar from \"../elements/Avatar.vue\";\nimport UKbd from \"../elements/Kbd.vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { usePopper } from \"../../composables/usePopper\";\nimport { getNuxtLinkProps, mergeConfig, twMerge } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { dropdown } from \"#ui/ui.config\";\nimport { useId } from \"#imports\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.dropdown, dropdown);\nexport default defineComponent({\n  components: {\n    HMenu,\n    HMenuButton,\n    HMenuItems,\n    HMenuItem,\n    UIcon,\n    UAvatar,\n    UKbd\n  },\n  inheritAttrs: false,\n  props: {\n    items: {\n      type: Array,\n      default: () => []\n    },\n    mode: {\n      type: String,\n      default: \"click\",\n      validator: (value) => [\"click\", \"hover\"].includes(value)\n    },\n    open: {\n      type: Boolean,\n      default: void 0\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    popper: {\n      type: Object,\n      default: () => ({})\n    },\n    openDelay: {\n      type: Number,\n      default: () => config.default.openDelay\n    },\n    closeDelay: {\n      type: Number,\n      default: () => config.default.closeDelay\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: [\"update:open\"],\n  setup(props, { emit }) {\n    const { ui, attrs } = useUI(\"dropdown\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const popper = computed(() => defu(props.mode === \"hover\" ? { offsetDistance: 0 } : {}, props.popper, ui.value.popper));\n    const [trigger, container] = usePopper(popper.value);\n    const menuApi = ref(null);\n    let openTimeout = null;\n    let closeTimeout = null;\n    onMounted(() => {\n      const menuProvides = trigger.value?.$.provides;\n      if (!menuProvides) {\n        return;\n      }\n      const menuProvidesSymbols = Object.getOwnPropertySymbols(menuProvides);\n      menuApi.value = menuProvidesSymbols.length && menuProvides[menuProvidesSymbols[0]];\n      if (props.open) {\n        menuApi.value?.openMenu();\n      }\n    });\n    const containerStyle = computed(() => {\n      if (props.mode !== \"hover\") {\n        return {};\n      }\n      const offsetDistance = props.popper?.offsetDistance || ui.value.popper?.offsetDistance || 8;\n      const placement = popper.value.placement?.split(\"-\")[0];\n      const padding = `${offsetDistance}px`;\n      if (placement === \"top\" || placement === \"bottom\") {\n        return {\n          paddingTop: padding,\n          paddingBottom: padding\n        };\n      } else if (placement === \"left\" || placement === \"right\") {\n        return {\n          paddingLeft: padding,\n          paddingRight: padding\n        };\n      } else {\n        return {\n          paddingTop: padding,\n          paddingBottom: padding,\n          paddingLeft: padding,\n          paddingRight: padding\n        };\n      }\n    });\n    function onTouchStart(event) {\n      if (!event.cancelable || !menuApi.value || props.mode === \"click\") {\n        return;\n      }\n      if (menuApi.value.menuState === 0) {\n        menuApi.value.closeMenu();\n      } else {\n        menuApi.value.openMenu();\n      }\n    }\n    function onMouseEnter() {\n      if (props.mode !== \"hover\" || !menuApi.value) {\n        return;\n      }\n      if (closeTimeout) {\n        clearTimeout(closeTimeout);\n        closeTimeout = null;\n      }\n      if (menuApi.value.menuState === 0) {\n        return;\n      }\n      openTimeout = openTimeout || setTimeout(() => {\n        if (menuApi.value.openMenu) {\n          menuApi.value.openMenu();\n        }\n        openTimeout = null;\n      }, props.openDelay);\n    }\n    function onMouseLeave() {\n      if (props.mode !== \"hover\" || !menuApi.value) {\n        return;\n      }\n      if (openTimeout) {\n        clearTimeout(openTimeout);\n        openTimeout = null;\n      }\n      if (menuApi.value.menuState === 1) {\n        return;\n      }\n      closeTimeout = closeTimeout || setTimeout(() => {\n        if (menuApi.value.closeMenu) {\n          menuApi.value.closeMenu();\n        }\n        closeTimeout = null;\n      }, props.closeDelay);\n    }\n    function onClick(e, item, { href, navigate, close, isExternal }) {\n      if (item.click) {\n        item.click(e);\n      }\n      if (href && !isExternal) {\n        navigate(e);\n        close();\n      }\n    }\n    watch(() => props.open, (newValue, oldValue) => {\n      if (!menuApi.value) return;\n      if (oldValue === void 0 || newValue === oldValue) return;\n      if (newValue) {\n        menuApi.value.openMenu();\n      } else {\n        menuApi.value.closeMenu();\n      }\n    });\n    watch(() => menuApi.value?.menuState, (newValue, oldValue) => {\n      if (oldValue === void 0 || newValue === oldValue) return;\n      emit(\"update:open\", newValue === 0);\n    });\n    const NuxtLink = resolveComponent(\"NuxtLink\");\n    provideUseId(() => useId());\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      // eslint-disable-next-line vue/no-dupe-keys\n      popper,\n      trigger,\n      container,\n      containerStyle,\n      onTouchStart,\n      onMouseEnter,\n      onMouseLeave,\n      onClick,\n      getNuxtLinkProps,\n      twMerge,\n      twJoin,\n      NuxtLink\n    };\n  }\n});\n</script>\n","<template>\n  <Icon v-bind=\"$props\" />\n</template>\n\n<script>\nimport { defineComponent } from \"vue\";\nexport default defineComponent({\n  props: {\n    name: {\n      type: String,\n      required: true\n    },\n    mode: {\n      type: String,\n      required: false,\n      default: null\n    },\n    size: {\n      type: [Number, String],\n      required: false,\n      default: null\n    },\n    customize: {\n      type: Function,\n      required: false,\n      default: null\n    }\n  }\n});\n</script>\n","<template>\n  <kbd :class=\"kbdClass\" v-bind=\"attrs\">\n    <slot>{{ value }}</slot>\n  </kbd>\n</template>\n\n<script>\nimport { toRef, defineComponent, computed } from \"vue\";\nimport { twJoin } from \"tailwind-merge\";\nimport { useUI } from \"../../composables/useUI\";\nimport { mergeConfig, twMerge } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { kbd } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.kbd, kbd);\nexport default defineComponent({\n  inheritAttrs: false,\n  props: {\n    value: {\n      type: String,\n      default: null\n    },\n    size: {\n      type: String,\n      default: () => config.default.size,\n      validator(value) {\n        return Object.keys(config.size).includes(value);\n      }\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props) {\n    const { ui, attrs } = useUI(\"kbd\", toRef(props, \"ui\"), config);\n    const kbdClass = computed(() => {\n      return twMerge(twJoin(\n        ui.value.base,\n        ui.value.size[props.size],\n        ui.value.padding,\n        ui.value.rounded,\n        ui.value.font,\n        ui.value.background,\n        ui.value.ring\n      ), props.class);\n    });\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      kbdClass\n    };\n  }\n});\n</script>\n","<template>\n  <component\n    :is=\"as\"\n    v-if=\"!to\"\n    :type=\"type\"\n    :disabled=\"disabled\"\n    v-bind=\"$attrs\"\n    :class=\"active ? activeClass : inactiveClass\"\n  >\n    <slot v-bind=\"{ isActive: active }\" />\n  </component>\n  <NuxtLink\n    v-else\n    v-slot=\"{ route, href, target, rel, navigate, isActive, isExactActive, isExternal }\"\n    v-bind=\"$props\"\n    custom\n  >\n    <a\n      v-bind=\"$attrs\"\n      :href=\"!disabled ? href : void 0\"\n      :aria-disabled=\"disabled ? 'true' : void 0\"\n      :role=\"disabled ? 'link' : void 0\"\n      :rel=\"rel\"\n      :target=\"target\"\n      :class=\"active !== void 0 ? active ? activeClass : inactiveClass : resolveLinkClass(route, $route, { isActive, isExactActive })\"\n      :tabindex=\"disabled ? -1 : void 0\"\n      @click=\"(e) => !isExternal && !disabled && navigate(e)\"\n    >\n      <slot v-bind=\"{ isActive: active !== void 0 ? active : exact ? isExactActive : isActive }\" />\n    </a>\n  </NuxtLink>\n</template>\n\n<script>\nimport { isEqual, diff } from \"ohash/utils\";\nimport { defineComponent } from \"vue\";\nimport { nuxtLinkProps } from \"../../utils\";\nexport default defineComponent({\n  inheritAttrs: false,\n  props: {\n    ...nuxtLinkProps,\n    as: {\n      type: String,\n      default: \"button\"\n    },\n    type: {\n      type: String,\n      default: \"button\"\n    },\n    disabled: {\n      type: Boolean,\n      default: null\n    },\n    active: {\n      type: Boolean,\n      default: void 0\n    },\n    exact: {\n      type: Boolean,\n      default: false\n    },\n    exactQuery: {\n      type: [Boolean, String],\n      default: false\n    },\n    exactHash: {\n      type: Boolean,\n      default: false\n    },\n    inactiveClass: {\n      type: String,\n      default: void 0\n    }\n  },\n  setup(props) {\n    function isPartiallyEqual(item1, item2) {\n      const diffedKeys = diff(item1, item2).reduce((filtered, q) => {\n        if (q.type === \"added\") {\n          filtered.add(q.key);\n        }\n        return filtered;\n      }, /* @__PURE__ */ new Set());\n      const item1Filtered = Object.fromEntries(Object.entries(item1).filter(([key]) => !diffedKeys.has(key)));\n      const item2Filtered = Object.fromEntries(Object.entries(item2).filter(([key]) => !diffedKeys.has(key)));\n      return isEqual(item1Filtered, item2Filtered);\n    }\n    function resolveLinkClass(route, $route, { isActive, isExactActive }) {\n      if (props.exactQuery === \"partial\") {\n        if (!isPartiallyEqual(route.query, $route.query)) return props.inactiveClass;\n      } else if (props.exactQuery === true) {\n        if (!isEqual(route.query, $route.query)) return props.inactiveClass;\n      }\n      if (props.exactHash && route.hash !== $route.hash) {\n        return props.inactiveClass;\n      }\n      if (props.exact && isExactActive) {\n        return props.activeClass;\n      }\n      if (!props.exact && isActive) {\n        return props.activeClass;\n      }\n      return props.inactiveClass;\n    }\n    return {\n      resolveLinkClass\n    };\n  }\n});\n</script>\n","<template>\n  <div :class=\"ui.wrapper\" v-bind=\"attrs\">\n    <template v-if=\"indicator || $slots.indicator\">\n      <slot name=\"indicator\" v-bind=\"{ percent, value }\">\n        <div :class=\"indicatorContainerClass\" :style=\"{ width: `${percent}%` }\">\n          <div :class=\"indicatorClass\">\n            {{ Math.round(percent) }}%\n          </div>\n        </div>\n      </slot>\n    </template>\n\n    <meter\n      :value=\"value\"\n      :min=\"normalizedMin\"\n      :max=\"normalizedMax\"\n      :class=\"[meterClass, meterAppearanceClass, meterBarClass]\"\n    />\n\n    <template v-if=\"label || $slots.label\">\n      <slot name=\"label\" v-bind=\"{ percent, value }\">\n        <div :class=\"labelClass\">\n          <UIcon v-if=\"icon\" :name=\"icon\" /> {{ label }}\n        </div>\n      </slot>\n    </template>\n  </div>\n</template>\n\n<script>\nimport { computed, defineComponent, toRef } from \"vue\";\nimport { twJoin } from \"tailwind-merge\";\nimport UIcon from \"../elements/Icon.vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { mergeConfig } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { meter } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.meter, meter);\nexport default defineComponent({\n  components: {\n    UIcon\n  },\n  inheritAttrs: false,\n  props: {\n    value: {\n      type: Number,\n      default: 0\n    },\n    min: {\n      type: Number,\n      default: 0\n    },\n    max: {\n      type: Number,\n      default: 100\n    },\n    indicator: {\n      type: Boolean,\n      default: false\n    },\n    label: {\n      type: String,\n      default: null\n    },\n    size: {\n      type: String,\n      default: () => config.default.size,\n      validator(value) {\n        return Object.keys(config.meter.size).includes(value);\n      }\n    },\n    color: {\n      type: String,\n      default: () => config.default.color,\n      validator(value) {\n        return [...appConfig.ui.colors, ...Object.keys(config.color)].includes(value);\n      }\n    },\n    icon: {\n      type: String,\n      default: null\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  slots: Object,\n  setup(props) {\n    const { ui, attrs } = useUI(\"meter\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    function clampPercent(value, min, max) {\n      if (min == max) {\n        return value < min ? 0 : 100;\n      }\n      if (min > max) {\n        max = [min, min = max][0];\n      }\n      const percent2 = (value - min) / (max - min) * 100;\n      return Math.max(0, Math.min(100, percent2));\n    }\n    const indicatorContainerClass = computed(() => {\n      return twJoin(\n        ui.value.indicator.container\n      );\n    });\n    const indicatorClass = computed(() => {\n      return twJoin(\n        ui.value.indicator.text,\n        ui.value.indicator.size[props.size]\n      );\n    });\n    const meterClass = computed(() => {\n      return twJoin(\n        ui.value.meter.base,\n        ui.value.meter.background,\n        ui.value.meter.ring,\n        ui.value.meter.rounded,\n        ui.value.meter.shadow,\n        ui.value.color[props.color] ?? ui.value.meter.color.replaceAll(\"{color}\", props.color),\n        ui.value.meter.size[props.size]\n      );\n    });\n    const meterAppearanceClass = computed(() => {\n      return twJoin(\n        ui.value.meter.appearance.inner,\n        ui.value.meter.appearance.meter,\n        ui.value.meter.appearance.bar,\n        ui.value.meter.appearance.value\n      );\n    });\n    const meterBarClass = computed(() => {\n      return twJoin(\n        ui.value.meter.bar.transition,\n        ui.value.meter.bar.ring,\n        ui.value.meter.bar.rounded,\n        ui.value.meter.bar.size[props.size]\n      );\n    });\n    const labelClass = computed(() => {\n      return twJoin(\n        ui.value.label.base,\n        ui.value.label.text,\n        ui.value.color[props.color] ?? ui.value.label.color.replaceAll(\"{color}\", props.color),\n        ui.value.label.size[props.size]\n      );\n    });\n    const normalizedMin = computed(() => props.min > props.max ? props.max : props.min);\n    const normalizedMax = computed(() => props.max < props.min ? props.min : props.max);\n    const percent = computed(() => clampPercent(Number(props.value), normalizedMin.value, normalizedMax.value));\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      indicatorContainerClass,\n      indicatorClass,\n      meterClass,\n      meterAppearanceClass,\n      meterBarClass,\n      labelClass,\n      normalizedMin,\n      normalizedMax,\n      percent\n    };\n  }\n});\n</script>\n","import { h, cloneVNode, computed, toRef, defineComponent } from \"vue\";\nimport { twJoin } from \"tailwind-merge\";\nimport UIcon from \"../elements/Icon.vue\";\nimport { useUI } from \"../../composables/useUI.js\";\nimport { getSlotsChildren, mergeConfig } from \"../../utils/index.js\";\nimport appConfig from \"#build/app.config\";\nimport { meter, meterGroup } from \"#ui/ui.config\";\nconst meterConfig = mergeConfig(appConfig.ui.strategy, appConfig.ui.meter, meter);\nconst meterGroupConfig = mergeConfig(appConfig.ui.strategy, appConfig.ui.meterGroup, meterGroup);\nexport default defineComponent({\n  components: {\n    UIcon\n  },\n  inheritAttrs: false,\n  slots: Object,\n  props: {\n    min: {\n      type: Number,\n      default: 0\n    },\n    max: {\n      type: Number,\n      default: 100\n    },\n    size: {\n      type: String,\n      default: () => meterConfig.default.size,\n      validator(value) {\n        return Object.keys(meterConfig.meter.bar.size).includes(value);\n      }\n    },\n    indicator: {\n      type: Boolean,\n      default: false\n    },\n    icon: {\n      type: String,\n      default: () => meterGroupConfig.default.icon\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props, { slots }) {\n    const { ui, attrs } = useUI(\"meterGroup\", toRef(props, \"ui\"), meterGroupConfig);\n    const { ui: uiMeter } = useUI(\"meter\", void 0, meterConfig);\n    if (!slots.default) {\n      throw new Error(\"Meter Group has no Meter children.\");\n    }\n    const normalizedMin = computed(() => props.min > props.max ? props.max : props.min);\n    const normalizedMax = computed(() => props.max < props.min ? props.min : props.max);\n    const children = computed(() => getSlotsChildren(slots));\n    const rounded = computed(() => ui.value.orientation[ui.value.rounded]);\n    function clampPercent(value, min, max) {\n      if (min == max) {\n        return value < min ? 0 : 100;\n      }\n      if (min > max) {\n        max = [min, min = max][0];\n      }\n      const percent2 = (value - min) / (max - min) * 100;\n      return Math.max(0, Math.min(100, percent2));\n    }\n    const labels = computed(() => {\n      return children.value.map((node) => node.props.label);\n    });\n    const percents = computed(() => {\n      return children.value.map((node) => clampPercent(node.props.value, props.min, props.max));\n    });\n    const percent = computed(() => {\n      return Math.max(0, Math.max(percents.value.reduce((prev, percent2) => prev + percent2, 0)));\n    });\n    const clones = computed(() => children.value.map((node, index) => {\n      const vProps = {};\n      vProps.style = { width: `${percents.value[index]}%` };\n      vProps.size = props.size;\n      vProps.min = normalizedMin.value;\n      vProps.max = normalizedMax.value;\n      vProps.ui = node.props?.ui || {};\n      vProps.ui.wrapper = node.props?.ui?.wrapper || \"\";\n      vProps.ui.wrapper += [\n        node.props?.ui?.wrapper,\n        ui.value.background,\n        ui.value.transition\n      ].filter(Boolean).join(\" \");\n      vProps.ui.meter = node.props?.ui?.meter || {};\n      vProps.ui.meter.background = `bg-${node.props.color}-500 dark:bg-${node.props.color}-400`;\n      vProps.ui.meter.rounded = \"rounded-none\";\n      vProps.ui.meter.bar = node.props?.ui?.meter?.bar || {};\n      if (index === 0) {\n        vProps.ui.meter.rounded = `${rounded.value.left} rounded-e-none`;\n      }\n      if (index === children.value.length - 1) {\n        vProps.ui.meter.rounded = `${rounded.value.right} rounded-s-none`;\n      }\n      labels.value[index] = node.props.label;\n      const clone = cloneVNode(node, vProps);\n      delete clone.children?.label;\n      delete clone.props?.indicator;\n      delete clone.props?.label;\n      return clone;\n    }));\n    const baseClass = computed(() => {\n      return twJoin(\n        ui.value.base,\n        ui.value.background,\n        ui.value.rounded,\n        ui.value.shadow,\n        uiMeter.value.meter.size[props.size]\n      );\n    });\n    const indicatorContainerClass = computed(() => {\n      return twJoin(\n        uiMeter.value.indicator.container\n      );\n    });\n    const indicatorClass = computed(() => {\n      return twJoin(\n        uiMeter.value.indicator.text,\n        uiMeter.value.indicator.size[props.size]\n      );\n    });\n    const vNodeChildren = computed(() => {\n      const vNodeSlots = [\n        void 0,\n        h(\"div\", { class: baseClass.value }, clones.value),\n        void 0\n      ];\n      if (props.indicator) {\n        vNodeSlots[0] = h(\"div\", { class: indicatorContainerClass.value }, [\n          h(\"div\", { class: indicatorClass.value, style: { width: `${percent.value}%` } }, Math.round(percent.value) + \"%\")\n        ]);\n      } else if (slots.indicator) {\n        vNodeSlots[0] = slots.indicator({ percent: percent.value });\n      }\n      vNodeSlots[2] = h(\"ol\", { class: ui.value.list }, labels.value.map((label, key) => {\n        const labelClass = computed(() => {\n          return twJoin(\n            uiMeter.value.label.base,\n            uiMeter.value.label.text,\n            uiMeter.value.color[clones.value[key]?.props.color] ?? uiMeter.value.label.color.replaceAll(\"{color}\", clones.value[key]?.props.color ?? uiMeter.value.default.color),\n            uiMeter.value.label.size[props.size]\n          );\n        });\n        return h(\"li\", { class: labelClass.value }, [\n          h(UIcon, { name: clones.value[key]?.props.icon ?? props.icon }),\n          `${label} (${Math.round(percents.value[key])}%)`\n        ]);\n      }));\n      return vNodeSlots;\n    });\n    return () => h(\"div\", { class: ui.value.wrapper, ...attrs.value }, vNodeChildren.value);\n  }\n});\n","<template>\n  <div :class=\"ui.wrapper\" role=\"progressbar\">\n    <slot v-if=\"indicator || $slots.indicator\" name=\"indicator\" v-bind=\"{ percent }\">\n      <div v-if=\"!isSteps\" :class=\"indicatorContainerClass\" :style=\"{ width: `${percent}%` }\">\n        <div :class=\"indicatorClass\">\n          {{ Math.round(percent) }}%\n        </div>\n      </div>\n    </slot>\n\n    <progress\n      :aria-valuemax=\"realMax\"\n      :aria-valuenow=\"value\"\n      :class=\"progressClass\"\n      v-bind=\"{ value, max: realMax, ...attrs }\"\n    >\n      {{ percent !== void 0 ? `${Math.round(percent)}%` : void 0 }}\n    </progress>\n\n    <div v-if=\"isSteps\" :class=\"stepsClass\">\n      <div v-for=\"(step, index) in max\" :key=\"index\" :class=\"stepClasses(index)\">\n        <slot :name=\"`step-${index}`\" v-bind=\"{ step }\">\n          {{ step }}\n        </slot>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { computed, defineComponent, toRef } from \"vue\";\nimport { twJoin } from \"tailwind-merge\";\nimport { useUI } from \"../../composables/useUI\";\nimport { mergeConfig } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { progress } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.progress, progress);\nexport default defineComponent({\n  inheritAttrs: false,\n  props: {\n    value: {\n      type: Number,\n      default: null\n    },\n    max: {\n      type: [Number, Array],\n      default: 100\n    },\n    indicator: {\n      type: Boolean,\n      default: false\n    },\n    animation: {\n      type: String,\n      default: () => config.default.animation,\n      validator(value) {\n        return Object.keys(config.animation).includes(value);\n      }\n    },\n    size: {\n      type: String,\n      default: () => config.default.size,\n      validator(value) {\n        return Object.keys(config.progress.size).includes(value);\n      }\n    },\n    color: {\n      type: String,\n      default: () => config.default.color,\n      validator(value) {\n        return appConfig.ui.colors.includes(value);\n      }\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props) {\n    const { ui, attrs } = useUI(\"progress\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const indicatorContainerClass = computed(() => {\n      return twJoin(\n        ui.value.indicator.container.base,\n        ui.value.indicator.container.width,\n        ui.value.indicator.container.transition\n      );\n    });\n    const indicatorClass = computed(() => {\n      return twJoin(\n        ui.value.indicator.align,\n        ui.value.indicator.width,\n        ui.value.indicator.color,\n        ui.value.indicator.size[props.size]\n      );\n    });\n    const progressClass = computed(() => {\n      const classes = [\n        ui.value.progress.base,\n        ui.value.progress.width,\n        ui.value.progress.size[props.size],\n        ui.value.progress.rounded,\n        ui.value.progress.track,\n        ui.value.progress.bar,\n        // Intermediate class to allow thumb ring or background color (set to `current`) as it's impossible to safelist with arbitrary values\n        ui.value.progress.color?.replaceAll(\"{color}\", props.color),\n        ui.value.progress.background,\n        ui.value.progress.indeterminate.base,\n        ui.value.progress.indeterminate.rounded\n      ];\n      if (isIndeterminate.value) {\n        classes.push(ui.value.animation[props.animation]);\n      }\n      return twJoin(...classes);\n    });\n    const stepsClass = computed(() => {\n      return twJoin(\n        ui.value.steps.base,\n        ui.value.steps.color?.replaceAll(\"{color}\", props.color),\n        ui.value.steps.size[props.size]\n      );\n    });\n    const stepClass = computed(() => {\n      return twJoin(\n        ui.value.step.base,\n        ui.value.step.align\n      );\n    });\n    const stepActiveClass = computed(() => {\n      return twJoin(\n        ui.value.step.active\n      );\n    });\n    const stepFirstClass = computed(() => {\n      return twJoin(\n        ui.value.step.first\n      );\n    });\n    function isActive(index) {\n      return index === Number(props.value);\n    }\n    function isFirst(index) {\n      return index === 0;\n    }\n    function stepClasses(index) {\n      index = Number(index);\n      const classes = [stepClass.value];\n      if (isFirst(index)) {\n        classes.push(stepFirstClass.value);\n      }\n      if (isActive(index)) {\n        classes.push(stepActiveClass.value);\n      }\n      return classes.join(\" \");\n    }\n    const isIndeterminate = computed(() => props.value === void 0 || props.value === null);\n    const isSteps = computed(() => Array.isArray(props.max));\n    const realMax = computed(() => {\n      if (isIndeterminate.value) {\n        return null;\n      }\n      if (Array.isArray(props.max)) {\n        return props.max.length - 1;\n      }\n      return Number(props.max);\n    });\n    const percent = computed(() => {\n      if (isIndeterminate.value) {\n        return void 0;\n      }\n      switch (true) {\n        case props.value < 0:\n          return 0;\n        case props.value > realMax.value:\n          return 100;\n        default:\n          return props.value / realMax.value * 100;\n      }\n    });\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      indicatorContainerClass,\n      indicatorClass,\n      progressClass,\n      stepsClass,\n      stepClasses,\n      isIndeterminate,\n      isSteps,\n      realMax,\n      percent\n    };\n  }\n});\n</script>\n\n<style scoped>\nprogress:indeterminate{@apply relative}progress:indeterminate:after{@apply content-[\"\"];@apply absolute inset-0;@apply bg-current}progress:indeterminate::-webkit-progress-value{@apply bg-current}progress:indeterminate::-moz-progress-bar{@apply bg-current}progress:indeterminate.bar-animation-carousel:after{animation:carousel 2s ease-in-out infinite}progress:indeterminate.bar-animation-carousel::-webkit-progress-value{animation:carousel 2s ease-in-out infinite}progress:indeterminate.bar-animation-carousel::-moz-progress-bar{animation:carousel 2s ease-in-out infinite}[dir=rtl] progress:indeterminate.bar-animation-carousel:after{animation:carousel-rtl 2s ease-in-out infinite}[dir=rtl] progress:indeterminate.bar-animation-carousel::-webkit-progress-value{animation:carousel-rtl 2s ease-in-out infinite}[dir=rtl] progress:indeterminate.bar-animation-carousel::-moz-progress-bar{animation:carousel-rtl 2s ease-in-out infinite}progress:indeterminate.bar-animation-carousel-inverse:after{animation:carousel-inverse 2s ease-in-out infinite}progress:indeterminate.bar-animation-carousel-inverse::-webkit-progress-value{animation:carousel-inverse 2s ease-in-out infinite}progress:indeterminate.bar-animation-carousel-inverse::-moz-progress-bar{animation:carousel-inverse 2s ease-in-out infinite}[dir=rtl] progress:indeterminate.bar-animation-carousel-inverse:after{animation:carousel-inverse-rtl 2s ease-in-out infinite}[dir=rtl] progress:indeterminate.bar-animation-carousel-inverse::-webkit-progress-value{animation:carousel-inverse-rtl 2s ease-in-out infinite}[dir=rtl] progress:indeterminate.bar-animation-carousel-inverse::-moz-progress-bar{animation:carousel-inverse-rtl 2s ease-in-out infinite}progress:indeterminate.bar-animation-swing:after{animation:swing 3s ease-in-out infinite}progress:indeterminate.bar-animation-swing::-webkit-progress-value{animation:swing 3s ease-in-out infinite}progress:indeterminate.bar-animation-swing::-moz-progress-bar{animation:swing 3s ease-in-out infinite}progress:indeterminate.bar-animation-elastic:after{animation:elastic 3s ease-in-out infinite}progress:indeterminate.bar-animation-elastic::-webkit-progress-value{animation:elastic 3s ease-in-out infinite}progress:indeterminate.bar-animation-elastic::-moz-progress-bar{animation:elastic 3s ease-in-out infinite}@keyframes carousel{0%,to{width:50%}0%{transform:translateX(-100%)}to{transform:translateX(200%)}}@keyframes carousel-rtl{0%,to{width:50%}0%{transform:translateX(100%)}to{transform:translateX(-200%)}}@keyframes carousel-inverse{0%,to{width:50%}0%{transform:translateX(200%)}to{transform:translateX(-100%)}}@keyframes carousel-inverse-rtl{0%,to{width:50%}0%{transform:translateX(-200%)}to{transform:translateX(100%)}}@keyframes swing{0%,to{width:50%}0%,to{transform:translateX(-25%)}50%{transform:translateX(125%)}}@keyframes elastic{0%,to{margin-left:25%;width:50%}50%{margin-left:5%;width:90%}}\n</style>\n","<template>\n  <div :class=\"ui.wrapper\" :data-n-ids=\"attrs['data-n-ids']\">\n    <div :class=\"ui.container\">\n      <input\n        :id=\"inputId\"\n        v-model=\"toggle\"\n        :name=\"name\"\n        :required=\"required\"\n        :value=\"value\"\n        :disabled=\"disabled\"\n        :indeterminate=\"indeterminate\"\n        type=\"checkbox\"\n        :class=\"inputClass\"\n        v-bind=\"attrs\"\n        @change=\"onChange\"\n      >\n    </div>\n    <div v-if=\"label || $slots.label\" :class=\"ui.inner\">\n      <label :for=\"inputId\" :class=\"ui.label\">\n        <slot name=\"label\" :label=\"label\">{{ label }}</slot>\n        <span v-if=\"required\" :class=\"ui.required\">*</span>\n      </label>\n      <p v-if=\"help || $slots.help\" :class=\"ui.help\">\n        <slot name=\"help\" :help=\"help\">\n          {{ help }}\n        </slot>\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { computed, toRef, defineComponent } from \"vue\";\nimport { twJoin } from \"tailwind-merge\";\nimport { useUI } from \"../../composables/useUI\";\nimport { useFormGroup } from \"../../composables/useFormGroup\";\nimport { mergeConfig, twMerge } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { checkbox } from \"#ui/ui.config\";\nimport { useId } from \"#app\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.checkbox, checkbox);\nexport default defineComponent({\n  inheritAttrs: false,\n  props: {\n    id: {\n      type: String,\n      default: () => null\n    },\n    value: {\n      type: [String, Number, Boolean, Object],\n      default: null\n    },\n    modelValue: {\n      type: [Boolean, Array],\n      default: null\n    },\n    name: {\n      type: String,\n      default: null\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    indeterminate: {\n      type: Boolean,\n      default: void 0\n    },\n    help: {\n      type: String,\n      default: null\n    },\n    label: {\n      type: String,\n      default: null\n    },\n    required: {\n      type: Boolean,\n      default: false\n    },\n    color: {\n      type: String,\n      default: () => config.default.color,\n      validator(value) {\n        return appConfig.ui.colors.includes(value);\n      }\n    },\n    inputClass: {\n      type: String,\n      default: \"\"\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: [\"update:modelValue\", \"change\"],\n  setup(props, { emit }) {\n    const { ui, attrs } = useUI(\"checkbox\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const { emitFormChange, color, name, inputId: _inputId } = useFormGroup(props);\n    const inputId = _inputId.value ?? useId();\n    const toggle = computed({\n      get() {\n        return props.modelValue;\n      },\n      set(value) {\n        emit(\"update:modelValue\", value);\n      }\n    });\n    const onChange = (event) => {\n      emit(\"change\", event.target.checked);\n      emitFormChange();\n    };\n    const inputClass = computed(() => {\n      return twMerge(twJoin(\n        ui.value.base,\n        ui.value.form,\n        ui.value.rounded,\n        ui.value.background,\n        ui.value.border,\n        color.value && ui.value.ring.replaceAll(\"{color}\", color.value),\n        color.value && ui.value.color.replaceAll(\"{color}\", color.value)\n      ), props.inputClass);\n    });\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      toggle,\n      inputId,\n      // eslint-disable-next-line vue/no-dupe-keys\n      name,\n      // eslint-disable-next-line vue/no-dupe-keys\n      inputClass,\n      onChange\n    };\n  }\n});\n</script>\n","<template>\n  <form @submit.prevent=\"onSubmit\">\n    <slot v-bind=\"{ errors }\" />\n  </form>\n</template>\n\n<script>\nimport { provide, ref, defineComponent, onUnmounted, onMounted, readonly } from \"vue\";\nimport { useEventBus } from \"@vueuse/core\";\nimport { useId } from \"#imports\";\nclass FormException extends Error {\n  constructor(message) {\n    super(message);\n    this.message = message;\n    Object.setPrototypeOf(this, FormException.prototype);\n  }\n}\nexport default defineComponent({\n  props: {\n    schema: {\n      type: [Object, Function],\n      default: void 0\n    },\n    state: {\n      type: Object,\n      required: true\n    },\n    validate: {\n      type: Function,\n      default: () => []\n    },\n    validateOn: {\n      type: Array,\n      default: () => [\"blur\", \"input\", \"change\", \"submit\"]\n    }\n  },\n  emits: [\"submit\", \"error\"],\n  setup(props, { expose, emit }) {\n    const formId = useId();\n    const bus = useEventBus(`form-${formId}`);\n    const parsedValue = ref(null);\n    onMounted(() => {\n      bus.on(async (event) => {\n        if (event.type !== \"submit\" && props.validateOn?.includes(event.type)) {\n          await validate(event.path, { silent: true });\n        }\n      });\n    });\n    onUnmounted(() => {\n      bus.reset();\n    });\n    const errors = ref([]);\n    provide(\"form-errors\", errors);\n    provide(\"form-events\", bus);\n    const inputs = ref({});\n    provide(\"form-inputs\", inputs);\n    async function getErrors() {\n      let errs = await props.validate(props.state);\n      if (props.schema) {\n        const { errors: errors2, result } = await parseSchema(props.state, props.schema);\n        if (errors2) {\n          errs = errs.concat(errors2);\n        } else {\n          parsedValue.value = result;\n        }\n      }\n      return errs;\n    }\n    async function validate(path, opts = { silent: false }) {\n      let paths = path;\n      if (path && !Array.isArray(path)) {\n        paths = [path];\n      }\n      if (paths) {\n        const otherErrors = errors.value.filter(\n          (error) => !paths.includes(error.path)\n        );\n        const pathErrors = (await getErrors()).filter(\n          (error) => paths.includes(error.path)\n        );\n        errors.value = otherErrors.concat(pathErrors);\n      } else {\n        errors.value = await getErrors();\n      }\n      if (errors.value.length > 0) {\n        if (opts.silent) return false;\n        throw new FormException(\n          `Form validation failed: ${JSON.stringify(errors.value, null, 2)}`\n        );\n      }\n      return props.state;\n    }\n    async function onSubmit(payload) {\n      const event = payload;\n      try {\n        if (props.validateOn?.includes(\"submit\")) {\n          await validate();\n        }\n        event.data = props.schema ? parsedValue.value : props.state;\n        emit(\"submit\", event);\n      } catch (error) {\n        if (!(error instanceof FormException)) {\n          throw error;\n        }\n        const errorEvent = {\n          ...event,\n          errors: errors.value.map((err) => ({\n            ...err,\n            id: inputs.value[err.path]\n          }))\n        };\n        emit(\"error\", errorEvent);\n      }\n    }\n    expose({\n      validate,\n      errors,\n      setErrors(errs, path) {\n        if (path) {\n          errors.value = errors.value.filter(\n            (error) => error.path !== path\n          ).concat(errs);\n        } else {\n          errors.value = errs;\n        }\n      },\n      async submit() {\n        await onSubmit(new Event(\"submit\"));\n      },\n      getErrors(path) {\n        if (path) {\n          return errors.value.filter((err) => err.path === path);\n        }\n        return errors.value;\n      },\n      clear(path) {\n        if (path) {\n          errors.value = errors.value.filter((err) => err.path !== path);\n        } else {\n          errors.value = [];\n        }\n      }\n    });\n    return {\n      onSubmit,\n      errors: readonly(errors)\n    };\n  }\n});\nfunction isYupSchema(schema) {\n  return schema.validate && schema.__isYupSchema__;\n}\nfunction isYupError(error) {\n  return error.inner !== void 0;\n}\nfunction isSuperStructSchema(schema) {\n  return \"schema\" in schema && typeof schema.coercer === \"function\" && typeof schema.validator === \"function\" && typeof schema.refiner === \"function\";\n}\nfunction isJoiSchema(schema) {\n  return schema.validateAsync !== void 0 && schema.id !== void 0;\n}\nfunction isJoiError(error) {\n  return error.isJoi === true;\n}\nexport function isStandardSchema(schema) {\n  return \"~standard\" in schema;\n}\nexport async function validateStandardSchema(state, schema) {\n  const result = await schema[\"~standard\"].validate(state);\n  if (!result.issues || result.issues.length === 0) {\n    const output = \"value\" in result ? result.value : null;\n    return {\n      errors: null,\n      result: output\n    };\n  }\n  const errors = result.issues.map((issue) => ({\n    path: issue.path?.map((item) => typeof item === \"object\" ? item.key : item).join(\".\") || \"\",\n    message: issue.message\n  }));\n  return {\n    errors,\n    result: null\n  };\n}\nasync function validateJoiSchema(state, schema) {\n  try {\n    const result = await schema.validateAsync(state, { abortEarly: false });\n    return {\n      errors: null,\n      result\n    };\n  } catch (error) {\n    if (isJoiError(error)) {\n      const errors = error.details.map((issue) => ({\n        path: issue.path.join(\".\"),\n        message: issue.message\n      }));\n      return {\n        errors,\n        result: null\n      };\n    } else {\n      throw error;\n    }\n  }\n}\nasync function validateSuperstructSchema(state, schema) {\n  const [err, result] = schema.validate(state);\n  if (err) {\n    const errors = err.failures().map((error) => ({\n      message: error.message,\n      path: error.path.join(\".\")\n    }));\n    return {\n      errors,\n      result: null\n    };\n  }\n  return {\n    errors: null,\n    result\n  };\n}\nasync function validateYupSchema(state, schema) {\n  try {\n    const result = await schema.validate(state, { abortEarly: false });\n    return {\n      errors: null,\n      result\n    };\n  } catch (error) {\n    if (isYupError(error)) {\n      const errors = error.inner.map((issue) => ({\n        path: issue.path ?? \"\",\n        message: issue.message\n      }));\n      return {\n        errors,\n        result: null\n      };\n    } else {\n      throw error;\n    }\n  }\n}\nfunction parseSchema(state, schema) {\n  if (isStandardSchema(schema)) {\n    return validateStandardSchema(state, schema);\n  } else if (isJoiSchema(schema)) {\n    return validateJoiSchema(state, schema);\n  } else if (isYupSchema(schema)) {\n    return validateYupSchema(state, schema);\n  } else if (isSuperStructSchema(schema)) {\n    return validateSuperstructSchema(state, schema);\n  } else {\n    throw new Error(\"Form validation failed: Unsupported form schema\");\n  }\n}\n</script>\n","<template>\n  <div :class=\"ui.wrapper\" v-bind=\"attrs\">\n    <div :class=\"ui.inner\">\n      <div v-if=\"label || $slots.label\" :class=\"[ui.label.wrapper, size]\">\n        <label :for=\"inputId\" :class=\"[ui.label.base, required ? ui.label.required : '']\">\n          <slot v-if=\"$slots.label\" name=\"label\" v-bind=\"{ error, label, name, hint, description, help }\" />\n          <template v-else>{{ label }}</template>\n        </label>\n        <span v-if=\"hint || $slots.hint\" :class=\"[ui.hint]\">\n          <slot v-if=\"$slots.hint\" name=\"hint\" v-bind=\"{ error, label, name, hint, description, help }\" />\n          <template v-else>{{ hint }}</template>\n        </span>\n      </div>\n\n      <p v-if=\"description || $slots.description\" :class=\"[ui.description, size]\">\n        <slot v-if=\"$slots.description\" name=\"description\" v-bind=\"{ error, label, name, hint, description, help }\" />\n        <template v-else>\n          {{ description }}\n        </template>\n      </p>\n    </div>\n\n    <div :class=\"[label ? ui.container : '']\">\n      <slot v-bind=\"{ error }\" />\n\n      <p v-if=\"typeof error === 'string' && error\" :class=\"[ui.error, size]\">\n        <slot v-if=\"$slots.error\" name=\"error\" v-bind=\"{ error, label, name, hint, description, help }\" />\n        <template v-else>\n          {{ error }}\n        </template>\n      </p>\n      <p v-else-if=\"help || $slots.help\" :class=\"[ui.help, size]\">\n        <slot v-if=\"$slots.help\" name=\"help\" v-bind=\"{ error, label, name, hint, description, help }\" />\n        <template v-else>\n          {{ help }}\n        </template>\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { computed, defineComponent, provide, inject, ref, toRef } from \"vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { mergeConfig } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { formGroup } from \"#ui/ui.config\";\nimport { useId } from \"#imports\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.formGroup, formGroup);\nexport default defineComponent({\n  inheritAttrs: false,\n  props: {\n    name: {\n      type: String,\n      default: null\n    },\n    size: {\n      type: String,\n      default: null,\n      validator(value) {\n        return Object.keys(config.size).includes(value);\n      }\n    },\n    label: {\n      type: String,\n      default: null\n    },\n    description: {\n      type: String,\n      default: null\n    },\n    required: {\n      type: Boolean,\n      default: false\n    },\n    help: {\n      type: String,\n      default: null\n    },\n    error: {\n      type: [String, Boolean],\n      default: null\n    },\n    hint: {\n      type: String,\n      default: null\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    },\n    eagerValidation: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(props) {\n    const { ui, attrs } = useUI(\"formGroup\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const formErrors = inject(\"form-errors\", null);\n    const error = computed(() => {\n      return props.error && typeof props.error === \"string\" || typeof props.error === \"boolean\" ? props.error : formErrors?.value?.find((error2) => error2.path === props.name)?.message;\n    });\n    const size = computed(() => ui.value.size[props.size ?? config.default.size]);\n    const inputId = ref(useId());\n    provide(\"form-group\", {\n      error,\n      inputId,\n      name: computed(() => props.name),\n      size: computed(() => props.size),\n      eagerValidation: computed(() => props.eagerValidation)\n    });\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      inputId,\n      // eslint-disable-next-line vue/no-dupe-keys\n      size,\n      // eslint-disable-next-line vue/no-dupe-keys\n      error\n    };\n  }\n});\n</script>\n","<template>\n  <div :class=\"type === 'hidden' ? 'hidden' : ui.wrapper\">\n    <input\n      :id=\"inputId\"\n      ref=\"input\"\n      :name=\"name\"\n      :type=\"type\"\n      :required=\"required\"\n      :placeholder=\"placeholder\"\n      :disabled=\"disabled\"\n      :class=\"inputClass\"\n      v-bind=\"type === 'file' ? attrs : { ...attrs, value: modelValue }\"\n      @input=\"onInput\"\n      @blur=\"onBlur\"\n      @change=\"onChange\"\n    >\n    <slot />\n\n    <span v-if=\"isLeading && leadingIconName || $slots.leading\" :class=\"leadingWrapperIconClass\">\n      <slot name=\"leading\" :disabled=\"disabled\" :loading=\"loading\">\n        <UIcon :name=\"leadingIconName\" :class=\"leadingIconClass\" />\n      </slot>\n    </span>\n\n    <span v-if=\"isTrailing && trailingIconName || $slots.trailing\" :class=\"trailingWrapperIconClass\">\n      <slot name=\"trailing\" :disabled=\"disabled\" :loading=\"loading\">\n        <UIcon :name=\"trailingIconName\" :class=\"trailingIconClass\" />\n      </slot>\n    </span>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, toRef, onMounted, defineComponent } from \"vue\";\nimport { twJoin } from \"tailwind-merge\";\nimport { defu } from \"defu\";\nimport UIcon from \"../elements/Icon.vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { useFormGroup } from \"../../composables/useFormGroup\";\nimport { looseToNumber, mergeConfig, twMerge } from \"../../utils\";\nimport { useInjectButtonGroup } from \"../../composables/useButtonGroup\";\nimport appConfig from \"#build/app.config\";\nimport { input } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.input, input);\nexport default defineComponent({\n  components: {\n    UIcon\n  },\n  inheritAttrs: false,\n  props: {\n    modelValue: {\n      type: [String, Number],\n      default: \"\"\n    },\n    type: {\n      type: String,\n      default: \"text\"\n    },\n    id: {\n      type: String,\n      default: null\n    },\n    name: {\n      type: String,\n      default: null\n    },\n    placeholder: {\n      type: String,\n      default: null\n    },\n    required: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    autofocus: {\n      type: Boolean,\n      default: false\n    },\n    autofocusDelay: {\n      type: Number,\n      default: 100\n    },\n    icon: {\n      type: String,\n      default: null\n    },\n    loadingIcon: {\n      type: String,\n      default: () => config.default.loadingIcon\n    },\n    leadingIcon: {\n      type: String,\n      default: null\n    },\n    trailingIcon: {\n      type: String,\n      default: null\n    },\n    trailing: {\n      type: Boolean,\n      default: false\n    },\n    leading: {\n      type: Boolean,\n      default: false\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    padded: {\n      type: Boolean,\n      default: true\n    },\n    size: {\n      type: String,\n      default: null,\n      validator(value) {\n        return Object.keys(config.size).includes(value);\n      }\n    },\n    color: {\n      type: String,\n      default: () => config.default.color,\n      validator(value) {\n        return [...appConfig.ui.colors, ...Object.keys(config.color)].includes(value);\n      }\n    },\n    variant: {\n      type: String,\n      default: () => config.default.variant,\n      validator(value) {\n        return [\n          ...Object.keys(config.variant),\n          ...Object.values(config.color).flatMap((value2) => Object.keys(value2))\n        ].includes(value);\n      }\n    },\n    inputClass: {\n      type: String,\n      default: null\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    },\n    modelModifiers: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: [\"update:modelValue\", \"blur\", \"change\"],\n  setup(props, { emit, slots }) {\n    const { ui, attrs } = useUI(\"input\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const { size: sizeButtonGroup, rounded } = useInjectButtonGroup({ ui, props });\n    const { emitFormBlur, emitFormInput, size: sizeFormGroup, color, inputId, name } = useFormGroup(props, config);\n    const size = computed(() => sizeButtonGroup.value ?? sizeFormGroup.value);\n    const modelModifiers = ref(defu({}, props.modelModifiers, { trim: false, lazy: false, number: false, nullify: false }));\n    const input2 = ref(null);\n    const autoFocus = () => {\n      if (props.autofocus) {\n        input2.value?.focus();\n      }\n    };\n    const updateInput = (value) => {\n      if (modelModifiers.value.trim) {\n        value = value.trim();\n      }\n      if (modelModifiers.value.number || props.type === \"number\") {\n        value = looseToNumber(value);\n      }\n      if (modelModifiers.value.nullify) {\n        value ||= null;\n      }\n      emit(\"update:modelValue\", value);\n      emitFormInput();\n    };\n    const onInput = (event) => {\n      if (!modelModifiers.value.lazy) {\n        updateInput(event.target.value);\n      }\n    };\n    const onChange = (event) => {\n      if (props.type === \"file\") {\n        const value = event.target.files;\n        emit(\"change\", value);\n      } else {\n        const value = event.target.value;\n        emit(\"change\", value);\n        if (modelModifiers.value.lazy) {\n          updateInput(value);\n        }\n        if (modelModifiers.value.trim) {\n          event.target.value = value.trim();\n        }\n      }\n    };\n    const onBlur = (event) => {\n      emitFormBlur();\n      emit(\"blur\", event);\n    };\n    onMounted(() => {\n      setTimeout(() => {\n        autoFocus();\n      }, props.autofocusDelay);\n    });\n    const inputClass = computed(() => {\n      const variant = ui.value.color?.[color.value]?.[props.variant] || ui.value.variant[props.variant];\n      return twMerge(twJoin(\n        ui.value.base,\n        ui.value.form,\n        rounded.value,\n        ui.value.placeholder,\n        props.type === \"file\" && ui.value.file.base,\n        ui.value.size[size.value],\n        props.padded ? ui.value.padding[size.value] : \"p-0\",\n        variant?.replaceAll(\"{color}\", color.value),\n        (isLeading.value || slots.leading) && ui.value.leading.padding[size.value],\n        (isTrailing.value || slots.trailing) && ui.value.trailing.padding[size.value]\n      ), props.inputClass);\n    });\n    const isLeading = computed(() => {\n      return props.icon && props.leading || props.icon && !props.trailing || props.loading && !props.trailing || props.leadingIcon;\n    });\n    const isTrailing = computed(() => {\n      return props.icon && props.trailing || props.loading && props.trailing || props.trailingIcon;\n    });\n    const leadingIconName = computed(() => {\n      if (props.loading) {\n        return props.loadingIcon;\n      }\n      return props.leadingIcon || props.icon;\n    });\n    const trailingIconName = computed(() => {\n      if (props.loading && !isLeading.value) {\n        return props.loadingIcon;\n      }\n      return props.trailingIcon || props.icon;\n    });\n    const leadingWrapperIconClass = computed(() => {\n      return twJoin(\n        ui.value.icon.leading.wrapper,\n        ui.value.icon.leading.pointer,\n        ui.value.icon.leading.padding[size.value]\n      );\n    });\n    const leadingIconClass = computed(() => {\n      return twJoin(\n        ui.value.icon.base,\n        color.value && appConfig.ui.colors.includes(color.value) && ui.value.icon.color.replaceAll(\"{color}\", color.value),\n        ui.value.icon.size[size.value],\n        props.loading && ui.value.icon.loading\n      );\n    });\n    const trailingWrapperIconClass = computed(() => {\n      return twJoin(\n        ui.value.icon.trailing.wrapper,\n        ui.value.icon.trailing.pointer,\n        ui.value.icon.trailing.padding[size.value]\n      );\n    });\n    const trailingIconClass = computed(() => {\n      return twJoin(\n        ui.value.icon.base,\n        color.value && appConfig.ui.colors.includes(color.value) && ui.value.icon.color.replaceAll(\"{color}\", color.value),\n        ui.value.icon.size[size.value],\n        props.loading && !isLeading.value && ui.value.icon.loading\n      );\n    });\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      // eslint-disable-next-line vue/no-dupe-keys\n      name,\n      inputId,\n      input: input2,\n      isLeading,\n      isTrailing,\n      // eslint-disable-next-line vue/no-dupe-keys\n      inputClass,\n      leadingIconName,\n      leadingIconClass,\n      leadingWrapperIconClass,\n      trailingIconName,\n      trailingIconClass,\n      trailingWrapperIconClass,\n      onInput,\n      onChange,\n      onBlur\n    };\n  }\n});\n</script>\n","<template>\n  <HCombobox\n    v-slot=\"{ open }\"\n    :by=\"by\"\n    :name=\"name\"\n    :model-value=\"modelValue\"\n    :disabled=\"disabled\"\n    :nullable=\"nullable\"\n    as=\"div\"\n    :class=\"ui.wrapper\"\n    @update:model-value=\"onUpdate\"\n  >\n    <div :class=\"uiMenu.trigger\">\n      <HComboboxInput\n        :id=\"inputId\"\n        :name=\"name\"\n        :required=\"required\"\n        :placeholder=\"placeholder\"\n        :disabled=\"disabled\"\n        :class=\"inputClass\"\n        autocomplete=\"off\"\n        v-bind=\"attrs\"\n        :display-value=\"() => query ? query : label\"\n        @change=\"onQueryChange\"\n      />\n\n      <span v-if=\"isLeading && leadingIconName || $slots.leading\" :class=\"leadingWrapperIconClass\">\n        <slot name=\"leading\" :disabled=\"disabled\" :loading=\"loading\">\n          <UIcon :name=\"leadingIconName\" :class=\"leadingIconClass\" />\n        </slot>\n      </span>\n\n      <HComboboxButton v-if=\"isTrailing && trailingIconName || $slots.trailing\" ref=\"trigger\" :class=\"trailingWrapperIconClass\">\n        <slot name=\"trailing\" :disabled=\"disabled\" :loading=\"loading\">\n          <UIcon :name=\"trailingIconName\" :class=\"trailingIconClass\" />\n        </slot>\n      </HComboboxButton>\n    </div>\n\n    <div v-if=\"open\" ref=\"container\" :class=\"[uiMenu.container, uiMenu.width]\">\n      <Transition appear v-bind=\"uiMenu.transition\">\n        <div>\n          <div v-if=\"popper.arrow\" data-popper-arrow :class=\"Object.values(uiMenu.arrow)\" />\n\n          <HComboboxOptions static :class=\"[uiMenu.base, uiMenu.ring, uiMenu.rounded, uiMenu.shadow, uiMenu.background, uiMenu.padding, uiMenu.height]\">\n            <HComboboxOption\n              v-for=\"(option, index) in filteredOptions\"\n              v-slot=\"{ active, selected, disabled: optionDisabled }\"\n              :key=\"index\"\n              as=\"template\"\n              :value=\"valueAttribute ? accessor(option, valueAttribute) : option\"\n              :disabled=\"option.disabled\"\n            >\n              <li :class=\"[uiMenu.option.base, uiMenu.option.rounded, uiMenu.option.padding, uiMenu.option.size, uiMenu.option.color, active ? uiMenu.option.active : uiMenu.option.inactive, selected && uiMenu.option.selected, optionDisabled && uiMenu.option.disabled]\">\n                <div :class=\"uiMenu.option.container\">\n                  <slot name=\"option\" :option=\"option\" :active=\"active\" :selected=\"selected\">\n                    <UIcon v-if=\"option.icon\" :name=\"option.icon\" :class=\"[uiMenu.option.icon.base, active ? uiMenu.option.icon.active : uiMenu.option.icon.inactive, option.iconClass]\" aria-hidden=\"true\" />\n                    <UAvatar\n                      v-else-if=\"option.avatar\"\n                      v-bind=\"{ size: uiMenu.option.avatar.size, ...option.avatar }\"\n                      :class=\"uiMenu.option.avatar.base\"\n                      aria-hidden=\"true\"\n                    />\n                    <span v-else-if=\"option.chip\" :class=\"uiMenu.option.chip.base\" :style=\"{ background: `#${option.chip}` }\" />\n\n                    <span class=\"truncate\">{{ [\"string\", \"number\"].includes(typeof option) ? option : accessor(option, optionAttribute) }}</span>\n                  </slot>\n                </div>\n\n                <span v-if=\"selected\" :class=\"[uiMenu.option.selectedIcon.wrapper, uiMenu.option.selectedIcon.padding]\">\n                  <UIcon :name=\"selectedIcon\" :class=\"uiMenu.option.selectedIcon.base\" aria-hidden=\"true\" />\n                </span>\n              </li>\n            </HComboboxOption>\n\n            <p v-if=\"query && !filteredOptions.length\" :class=\"uiMenu.option.empty\">\n              <slot name=\"option-empty\" :query=\"query\">\n                {{ uiMenu.default.optionEmpty.label.replace(\"{query}\", query) }}\n              </slot>\n            </p>\n            <p v-else-if=\"!filteredOptions.length\" :class=\"uiMenu.empty\">\n              <slot name=\"empty\" :query=\"query\">\n                {{ uiMenu.default.empty.label }}\n              </slot>\n            </p>\n          </HComboboxOptions>\n        </div>\n      </Transition>\n    </div>\n  </HCombobox>\n</template>\n\n<script>\nimport { ref, computed, toRef, watch, defineComponent, toRaw } from \"vue\";\nimport {\n  Combobox as HCombobox,\n  ComboboxButton as HComboboxButton,\n  ComboboxOptions as HComboboxOptions,\n  ComboboxOption as HComboboxOption,\n  ComboboxInput as HComboboxInput,\n  provideUseId\n} from \"@headlessui/vue\";\nimport { computedAsync, useDebounceFn } from \"@vueuse/core\";\nimport { defu } from \"defu\";\nimport { twJoin } from \"tailwind-merge\";\nimport { isEqual } from \"ohash/utils\";\nimport UIcon from \"../elements/Icon.vue\";\nimport UAvatar from \"../elements/Avatar.vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { usePopper } from \"../../composables/usePopper\";\nimport { useFormGroup } from \"../../composables/useFormGroup\";\nimport { get, mergeConfig, twMerge } from \"../../utils\";\nimport { useInjectButtonGroup } from \"../../composables/useButtonGroup\";\nimport appConfig from \"#build/app.config\";\nimport { input, inputMenu } from \"#ui/ui.config\";\nimport { useId } from \"#imports\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.input, input);\nconst configMenu = mergeConfig(appConfig.ui.strategy, appConfig.ui.inputMenu, inputMenu);\nexport default defineComponent({\n  components: {\n    HCombobox,\n    HComboboxButton,\n    HComboboxOptions,\n    HComboboxOption,\n    HComboboxInput,\n    UIcon,\n    UAvatar\n  },\n  inheritAttrs: false,\n  props: {\n    modelValue: {\n      type: [String, Number, Object, Array],\n      default: \"\"\n    },\n    query: {\n      type: String,\n      default: null\n    },\n    by: {\n      type: String,\n      default: void 0\n    },\n    options: {\n      type: Array,\n      default: () => []\n    },\n    id: {\n      type: String,\n      default: null\n    },\n    name: {\n      type: String,\n      default: null\n    },\n    required: {\n      type: Boolean,\n      default: false\n    },\n    icon: {\n      type: String,\n      default: null\n    },\n    loadingIcon: {\n      type: String,\n      default: () => config.default.loadingIcon\n    },\n    leadingIcon: {\n      type: String,\n      default: null\n    },\n    trailingIcon: {\n      type: String,\n      default: () => configMenu.default.trailingIcon\n    },\n    trailing: {\n      type: Boolean,\n      default: false\n    },\n    leading: {\n      type: Boolean,\n      default: false\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    selectedIcon: {\n      type: String,\n      default: () => configMenu.default.selectedIcon\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    nullable: {\n      type: Boolean,\n      default: false\n    },\n    placeholder: {\n      type: String,\n      default: null\n    },\n    padded: {\n      type: Boolean,\n      default: true\n    },\n    size: {\n      type: String,\n      default: null,\n      validator(value) {\n        return Object.keys(config.size).includes(value);\n      }\n    },\n    color: {\n      type: String,\n      default: () => config.default.color,\n      validator(value) {\n        return [...appConfig.ui.colors, ...Object.keys(config.color)].includes(value);\n      }\n    },\n    variant: {\n      type: String,\n      default: () => config.default.variant,\n      validator(value) {\n        return [\n          ...Object.keys(config.variant),\n          ...Object.values(config.color).flatMap((value2) => Object.keys(value2))\n        ].includes(value);\n      }\n    },\n    optionAttribute: {\n      type: String,\n      default: \"label\"\n    },\n    valueAttribute: {\n      type: String,\n      default: null\n    },\n    search: {\n      type: Function,\n      default: void 0\n    },\n    searchAttributes: {\n      type: Array,\n      default: null\n    },\n    searchLazy: {\n      type: Boolean,\n      default: false\n    },\n    debounce: {\n      type: Number,\n      default: 200\n    },\n    popper: {\n      type: Object,\n      default: () => ({})\n    },\n    inputClass: {\n      type: String,\n      default: null\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    },\n    uiMenu: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: [\"update:modelValue\", \"update:query\", \"open\", \"close\", \"change\"],\n  setup(props, { emit, slots }) {\n    const { ui, attrs } = useUI(\"input\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const { ui: uiMenu } = useUI(\"inputMenu\", toRef(props, \"uiMenu\"), configMenu);\n    const popper = computed(() => defu({}, props.popper, uiMenu.value.popper));\n    const [trigger, container] = usePopper(popper.value);\n    const { size: sizeButtonGroup, rounded } = useInjectButtonGroup({ ui, props });\n    const { emitFormBlur, emitFormChange, inputId, color, size: sizeFormGroup, name } = useFormGroup(props, config);\n    const size = computed(() => sizeButtonGroup.value ?? sizeFormGroup.value);\n    const by = computed(() => {\n      if (!props.by) return void 0;\n      if (typeof props.by === \"function\") {\n        return props.by;\n      }\n      const key = props.by;\n      const hasDot = key.indexOf(\".\");\n      if (hasDot > 0) {\n        return (a, z) => {\n          return accessor(a, key) === accessor(z, key);\n        };\n      }\n      return key;\n    });\n    const internalQuery = ref(\"\");\n    const query = computed({\n      get() {\n        return props.query ?? internalQuery.value;\n      },\n      set(value) {\n        internalQuery.value = value;\n        emit(\"update:query\", value);\n      }\n    });\n    function isObject(object) {\n      return !Array.isArray(object) && object !== null && typeof object === \"object\";\n    }\n    const label = computed(() => {\n      if (!props.modelValue) return null;\n      function getValue(value) {\n        if (props.valueAttribute) {\n          return accessor(value, props.valueAttribute);\n        }\n        return value;\n      }\n      function compareValues(value1, value2) {\n        if (by.value && typeof by.value !== \"function\" && isObject(value1) && isObject(value2)) {\n          return isEqual(value1[props.by], value2[props.by]);\n        }\n        return isEqual(value1, value2);\n      }\n      if (props.valueAttribute) {\n        const option = options.value.find((option2) => {\n          const optionValue = getValue(option2);\n          return compareValues(optionValue, props.modelValue);\n        });\n        return option ? accessor(option, props.optionAttribute) : null;\n      } else {\n        return [\"string\", \"number\"].includes(typeof props.modelValue) ? props.modelValue : accessor(props.modelValue, props.optionAttribute);\n      }\n    });\n    const inputClass = computed(() => {\n      const variant = ui.value.color?.[color.value]?.[props.variant] || ui.value.variant[props.variant];\n      return twMerge(twJoin(\n        ui.value.base,\n        ui.value.form,\n        rounded.value,\n        ui.value.placeholder,\n        ui.value.size[size.value],\n        props.padded ? ui.value.padding[size.value] : \"p-0\",\n        variant?.replaceAll(\"{color}\", color.value),\n        (isLeading.value || slots.leading) && ui.value.leading.padding[size.value],\n        (isTrailing.value || slots.trailing) && ui.value.trailing.padding[size.value]\n      ), props.inputClass);\n    });\n    const isLeading = computed(() => {\n      return props.icon && props.leading || props.icon && !props.trailing || props.loading && !props.trailing || props.leadingIcon;\n    });\n    const isTrailing = computed(() => {\n      return props.icon && props.trailing || props.loading && props.trailing || props.trailingIcon;\n    });\n    const leadingIconName = computed(() => {\n      if (props.loading) {\n        return props.loadingIcon;\n      }\n      return props.leadingIcon || props.icon;\n    });\n    const trailingIconName = computed(() => {\n      if (props.loading && !isLeading.value) {\n        return props.loadingIcon;\n      }\n      return props.trailingIcon || props.icon;\n    });\n    const leadingWrapperIconClass = computed(() => {\n      return twJoin(\n        ui.value.icon.leading.wrapper,\n        ui.value.icon.leading.pointer,\n        ui.value.icon.leading.padding[size.value]\n      );\n    });\n    const leadingIconClass = computed(() => {\n      return twJoin(\n        ui.value.icon.base,\n        color.value && appConfig.ui.colors.includes(color.value) && ui.value.icon.color.replaceAll(\"{color}\", color.value),\n        ui.value.icon.size[size.value],\n        props.loading && ui.value.icon.loading\n      );\n    });\n    const trailingWrapperIconClass = computed(() => {\n      return twJoin(\n        ui.value.icon.trailing.wrapper,\n        ui.value.icon.trailing.padding[size.value]\n      );\n    });\n    const trailingIconClass = computed(() => {\n      return twJoin(\n        ui.value.icon.base,\n        color.value && appConfig.ui.colors.includes(color.value) && ui.value.icon.color.replaceAll(\"{color}\", color.value),\n        ui.value.icon.size[size.value],\n        props.loading && !isLeading.value && ui.value.icon.loading\n      );\n    });\n    const debouncedSearch = props.search && typeof props.search === \"function\" ? useDebounceFn(props.search, props.debounce) : void 0;\n    const options = computedAsync(async () => {\n      if (debouncedSearch) {\n        return await debouncedSearch(query.value);\n      }\n      return props.options || [];\n    }, [], {\n      lazy: props.searchLazy\n    });\n    function escapeRegExp(string) {\n      return string.replace(/[.*+?^${}()|[\\]\\\\]/g, (match) => `\\\\${match}`);\n    }\n    const filteredOptions = computed(() => {\n      if (!query.value || debouncedSearch) {\n        return options.value;\n      }\n      const escapedQuery = escapeRegExp(query.value);\n      return options.value.filter((option) => {\n        return (props.searchAttributes?.length ? props.searchAttributes : [props.optionAttribute]).some((searchAttribute) => {\n          if ([\"string\", \"number\"].includes(typeof option)) {\n            return String(option).search(new RegExp(escapedQuery, \"i\")) !== -1;\n          }\n          const child = get(option, searchAttribute);\n          return child !== null && child !== void 0 && String(child).search(new RegExp(escapedQuery, \"i\")) !== -1;\n        });\n      });\n    });\n    watch(container, (value) => {\n      if (value) {\n        emit(\"open\");\n      } else {\n        emit(\"close\");\n        emitFormBlur();\n      }\n    });\n    function onUpdate(value) {\n      query.value = \"\";\n      if (toRaw(props.modelValue) === toRaw(value)) {\n        return;\n      }\n      emit(\"update:modelValue\", value);\n      emit(\"change\", value);\n      emitFormChange();\n    }\n    function accessor(obj, key) {\n      return get(obj, key);\n    }\n    function onQueryChange(event) {\n      query.value = event.target.value;\n    }\n    provideUseId(() => useId());\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      // eslint-disable-next-line vue/no-dupe-keys\n      uiMenu,\n      attrs,\n      // eslint-disable-next-line vue/no-dupe-keys\n      name,\n      inputId,\n      // eslint-disable-next-line vue/no-dupe-keys\n      popper,\n      trigger,\n      container,\n      label,\n      isLeading,\n      isTrailing,\n      // eslint-disable-next-line vue/no-dupe-keys\n      inputClass,\n      leadingIconName,\n      leadingIconClass,\n      leadingWrapperIconClass,\n      trailingIconName,\n      trailingIconClass,\n      trailingWrapperIconClass,\n      filteredOptions,\n      // eslint-disable-next-line vue/no-dupe-keys\n      query,\n      accessor,\n      onUpdate,\n      onQueryChange,\n      // eslint-disable-next-line vue/no-dupe-keys\n      by\n    };\n  }\n});\n</script>\n","<template>\n  <div :class=\"ui.wrapper\" :data-n-ids=\"attrs['data-n-ids']\">\n    <div :class=\"ui.container\">\n      <input\n        :id=\"inputId\"\n        v-model=\"pick\"\n        :name=\"name\"\n        :required=\"required\"\n        :value=\"value\"\n        :disabled=\"disabled\"\n        type=\"radio\"\n        :class=\"inputClass\"\n        v-bind=\"attrs\"\n        @change=\"onChange\"\n      >\n    </div>\n    <div v-if=\"label || $slots.label\" :class=\"ui.inner\">\n      <label :for=\"inputId\" :class=\"ui.label\">\n        <slot name=\"label\" :label=\"label\">{{ label }}</slot>\n        <span v-if=\"required\" :class=\"ui.required\">*</span>\n      </label>\n      <p v-if=\"help || $slots.help\" :class=\"ui.help\">\n        <slot name=\"help\" :help=\"help\">\n          {{ help }}\n        </slot>\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { computed, defineComponent, inject, toRef } from \"vue\";\nimport { twJoin } from \"tailwind-merge\";\nimport { useUI } from \"../../composables/useUI\";\nimport { useFormGroup } from \"../../composables/useFormGroup\";\nimport { mergeConfig, twMerge } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { radio } from \"#ui/ui.config\";\nimport { useId } from \"#imports\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.radio, radio);\nexport default defineComponent({\n  inheritAttrs: false,\n  props: {\n    id: {\n      type: String,\n      default: null\n    },\n    value: {\n      type: [String, Number, Boolean],\n      default: null\n    },\n    modelValue: {\n      type: [String, Number, Boolean, Object],\n      default: null\n    },\n    name: {\n      type: String,\n      default: null\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    help: {\n      type: String,\n      default: null\n    },\n    label: {\n      type: String,\n      default: null\n    },\n    required: {\n      type: Boolean,\n      default: false\n    },\n    color: {\n      type: String,\n      default: () => config.default.color,\n      validator(value) {\n        return appConfig.ui.colors.includes(value);\n      }\n    },\n    inputClass: {\n      type: String,\n      default: null\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: [\"update:modelValue\", \"change\"],\n  setup(props, { emit }) {\n    const { ui, attrs } = useUI(\"radio\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const inputId = props.id ?? useId();\n    const radioGroup = inject(\"radio-group\", null);\n    const { emitFormChange, color, name } = radioGroup ?? useFormGroup(props, config);\n    const pick = computed({\n      get() {\n        return props.modelValue;\n      },\n      set(value) {\n        emit(\"update:modelValue\", value);\n        if (!radioGroup) {\n          emitFormChange();\n        }\n      }\n    });\n    function onChange(event) {\n      emit(\"change\", event.target.value);\n    }\n    const inputClass = computed(() => {\n      return twMerge(twJoin(\n        ui.value.base,\n        ui.value.form,\n        ui.value.background,\n        ui.value.border,\n        color.value && ui.value.ring.replaceAll(\"{color}\", color.value),\n        color.value && ui.value.color.replaceAll(\"{color}\", color.value)\n      ), props.inputClass);\n    });\n    return {\n      inputId,\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      pick,\n      // eslint-disable-next-line vue/no-dupe-keys\n      name,\n      // eslint-disable-next-line vue/no-dupe-keys\n      inputClass,\n      onChange\n    };\n  }\n});\n</script>\n","<template>\n  <div :class=\"ui.wrapper\">\n    <fieldset v-bind=\"attrs\" :class=\"ui.fieldset\">\n      <legend v-if=\"legend || $slots.legend\" :class=\"ui.legend\">\n        <slot name=\"legend\">\n          {{ legend }}\n        </slot>\n      </legend>\n      <URadio\n        v-for=\"option in normalizedOptions\"\n        :key=\"option.value\"\n        :label=\"option.label\"\n        :model-value=\"modelValue\"\n        :value=\"option.value\"\n        :help=\"option.help\"\n        :disabled=\"option.disabled || disabled\"\n        :ui=\"uiRadio\"\n        @change=\"onUpdate(option.value)\"\n      >\n        <template v-if=\"$slots.label\" #label>\n          <slot name=\"label\" v-bind=\"{ option, selected: option.selected }\" />\n        </template>\n\n        <template v-if=\"$slots.help\" #help>\n          <slot name=\"help\" v-bind=\"{ option, selected: option.selected }\" />\n        </template>\n      </URadio>\n    </fieldset>\n  </div>\n</template>\n\n<script>\nimport { computed, defineComponent, provide, toRef } from \"vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { useFormGroup } from \"../../composables/useFormGroup\";\nimport { get, mergeConfig } from \"../../utils\";\nimport URadio from \"./Radio.vue\";\nimport appConfig from \"#build/app.config\";\nimport { radioGroup, radio } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.radioGroup, radioGroup);\nconst configRadio = mergeConfig(appConfig.ui.strategy, appConfig.ui.radio, radio);\nexport default defineComponent({\n  components: {\n    URadio\n  },\n  inheritAttrs: false,\n  props: {\n    modelValue: {\n      type: [String, Number, Object, Boolean],\n      default: \"\"\n    },\n    name: {\n      type: String,\n      default: null\n    },\n    legend: {\n      type: String,\n      default: null\n    },\n    options: {\n      type: Array,\n      default: () => []\n    },\n    optionAttribute: {\n      type: String,\n      default: \"label\"\n    },\n    valueAttribute: {\n      type: String,\n      default: \"value\"\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    color: {\n      type: String,\n      default: () => config.default.color,\n      validator(value) {\n        return appConfig.ui.colors.includes(value);\n      }\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    },\n    uiRadio: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: [\"update:modelValue\", \"change\"],\n  setup(props, { emit }) {\n    const { ui, attrs } = useUI(\"radioGroup\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const { ui: uiRadio } = useUI(\"radio\", toRef(props, \"uiRadio\"), configRadio);\n    const { emitFormChange, color, name } = useFormGroup(props, config, false);\n    provide(\"radio-group\", { color, name });\n    const onUpdate = (value) => {\n      emit(\"update:modelValue\", value);\n      emit(\"change\", value);\n      emitFormChange();\n    };\n    const guessOptionValue = (option) => {\n      return get(option, props.valueAttribute, get(option, props.optionAttribute));\n    };\n    const guessOptionText = (option) => {\n      return get(option, props.optionAttribute, get(option, props.valueAttribute));\n    };\n    const guessOptionSelected = (option) => {\n      return props.modelValue === guessOptionValue(option);\n    };\n    const normalizeOption = (option) => {\n      if ([\"string\", \"number\", \"boolean\"].includes(typeof option)) {\n        return {\n          value: option,\n          label: option\n        };\n      }\n      return {\n        ...option,\n        value: guessOptionValue(option),\n        label: guessOptionText(option),\n        selected: guessOptionSelected(option)\n      };\n    };\n    const normalizedOptions = computed(() => {\n      return props.options.map((option) => normalizeOption(option));\n    });\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      // eslint-disable-next-line vue/no-dupe-keys\n      uiRadio,\n      attrs,\n      normalizedOptions,\n      onUpdate\n    };\n  }\n});\n</script>\n","<template>\n  <div :class=\"wrapperClass\">\n    <input\n      :id=\"inputId\"\n      ref=\"input\"\n      v-model.number=\"value\"\n      :name=\"name\"\n      :min=\"min\"\n      :max=\"max\"\n      :disabled=\"disabled\"\n      :step=\"step\"\n      type=\"range\"\n      :class=\"[inputClass, thumbClass, trackClass]\"\n      v-bind=\"attrs\"\n      @change=\"onChange\"\n    >\n\n    <span :class=\"progressClass\" :style=\"progressStyle\" />\n  </div>\n</template>\n\n<script>\nimport { computed, toRef, defineComponent } from \"vue\";\nimport { twJoin } from \"tailwind-merge\";\nimport { useUI } from \"../../composables/useUI\";\nimport { useFormGroup } from \"../../composables/useFormGroup\";\nimport { mergeConfig, twMerge } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { range } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.range, range);\nexport default defineComponent({\n  inheritAttrs: false,\n  props: {\n    modelValue: {\n      type: Number,\n      default: 0\n    },\n    id: {\n      type: String,\n      default: null\n    },\n    name: {\n      type: String,\n      default: null\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    min: {\n      type: Number,\n      default: 0\n    },\n    max: {\n      type: Number,\n      default: 100\n    },\n    step: {\n      type: Number,\n      default: 1\n    },\n    size: {\n      type: String,\n      default: null,\n      validator(value) {\n        return Object.keys(config.size).includes(value);\n      }\n    },\n    color: {\n      type: String,\n      default: () => config.default.color,\n      validator(value) {\n        return appConfig.ui.colors.includes(value);\n      }\n    },\n    inputClass: {\n      type: String,\n      default: null\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: [\"update:modelValue\", \"change\"],\n  setup(props, { emit }) {\n    const { ui, attrs } = useUI(\"range\", toRef(props, \"ui\"), config);\n    const { emitFormChange, inputId, color, size, name } = useFormGroup(props, config);\n    const value = computed({\n      get() {\n        return props.modelValue;\n      },\n      set(value2) {\n        emit(\"update:modelValue\", value2);\n      }\n    });\n    const onChange = (event) => {\n      emit(\"change\", event.target.value);\n      emitFormChange();\n    };\n    const wrapperClass = computed(() => {\n      return twMerge(twJoin(\n        ui.value.wrapper,\n        ui.value.size[size.value]\n      ), props.class);\n    });\n    const inputClass = computed(() => {\n      return twMerge(twJoin(\n        ui.value.base,\n        ui.value.background,\n        ui.value.rounded,\n        color.value && ui.value.ring.replaceAll(\"{color}\", color.value),\n        ui.value.size[size.value]\n      ), props.inputClass);\n    });\n    const thumbClass = computed(() => {\n      return twJoin(\n        ui.value.thumb.base,\n        // Intermediate class to allow thumb ring or background color (set to `current`) as it's impossible to safelist with arbitrary values\n        color.value && ui.value.thumb.color.replaceAll(\"{color}\", color.value),\n        ui.value.thumb.ring,\n        ui.value.thumb.background,\n        ui.value.thumb.size[size.value]\n      );\n    });\n    const trackClass = computed(() => {\n      return twJoin(\n        ui.value.track.base,\n        ui.value.track.background,\n        ui.value.track.rounded,\n        ui.value.track.size[size.value]\n      );\n    });\n    const progressClass = computed(() => {\n      return twJoin(\n        ui.value.progress.base,\n        ui.value.progress.rounded,\n        color.value && ui.value.progress.background.replaceAll(\"{color}\", color.value),\n        ui.value.progress.size[size.value]\n      );\n    });\n    const progressStyle = computed(() => {\n      const { modelValue, min, max } = props;\n      const clampedValue = Math.max(min, Math.min(modelValue, max));\n      const relativeValue = (clampedValue - min) / (max - min);\n      return {\n        width: `${relativeValue * 100}%`\n      };\n    });\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      // eslint-disable-next-line vue/no-dupe-keys\n      name,\n      inputId,\n      value,\n      wrapperClass,\n      // eslint-disable-next-line vue/no-dupe-keys\n      inputClass,\n      thumbClass,\n      trackClass,\n      progressClass,\n      progressStyle,\n      onChange\n    };\n  }\n});\n</script>\n","<template>\n  <div :class=\"ui.wrapper\">\n    <select\n      :id=\"inputId\"\n      :name=\"name\"\n      :value=\"modelValue\"\n      :required=\"required\"\n      :disabled=\"disabled\"\n      :class=\"selectClass\"\n      v-bind=\"attrs\"\n      @input=\"onInput\"\n      @change=\"onChange\"\n    >\n      <template v-for=\"(option, index) in normalizedOptionsWithPlaceholder\">\n        <optgroup\n          v-if=\"option.children\"\n          :key=\"`${option[valueAttribute]}-optgroup-${index}`\"\n          :value=\"option[valueAttribute]\"\n          :label=\"option[optionAttribute]\"\n        >\n          <option\n            v-for=\"(childOption, index2) in option.children\"\n            :key=\"`${childOption[valueAttribute]}-${index}-${index2}`\"\n            :value=\"childOption[valueAttribute]\"\n            :selected=\"childOption[valueAttribute] === normalizedValue\"\n            :disabled=\"childOption.disabled\"\n            v-text=\"childOption[optionAttribute]\"\n          />\n        </optgroup>\n        <option\n          v-else\n          :key=\"`${option[valueAttribute]}-${index}`\"\n          :value=\"option[valueAttribute]\"\n          :selected=\"option[valueAttribute] === normalizedValue\"\n          :disabled=\"option.disabled\"\n          v-text=\"option[optionAttribute]\"\n        />\n      </template>\n    </select>\n\n    <span v-if=\"isLeading && leadingIconName || $slots.leading\" :class=\"leadingWrapperIconClass\">\n      <slot name=\"leading\" :disabled=\"disabled\" :loading=\"loading\">\n        <UIcon :name=\"leadingIconName\" :class=\"leadingIconClass\" />\n      </slot>\n    </span>\n\n    <span v-if=\"isTrailing && trailingIconName || $slots.trailing\" :class=\"trailingWrapperIconClass\">\n      <slot name=\"trailing\" :disabled=\"disabled\" :loading=\"loading\">\n        <UIcon :name=\"trailingIconName\" :class=\"trailingIconClass\" aria-hidden=\"true\" />\n      </slot>\n    </span>\n  </div>\n</template>\n\n<script>\nimport { computed, toRef, defineComponent } from \"vue\";\nimport { twJoin } from \"tailwind-merge\";\nimport UIcon from \"../elements/Icon.vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { useFormGroup } from \"../../composables/useFormGroup\";\nimport { get, mergeConfig, twMerge } from \"../../utils\";\nimport { useInjectButtonGroup } from \"../../composables/useButtonGroup\";\nimport appConfig from \"#build/app.config\";\nimport { select } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.select, select);\nexport default defineComponent({\n  components: {\n    UIcon\n  },\n  inheritAttrs: false,\n  props: {\n    modelValue: {\n      type: [String, Number, Object],\n      default: \"\"\n    },\n    id: {\n      type: String,\n      default: null\n    },\n    name: {\n      type: String,\n      default: null\n    },\n    placeholder: {\n      type: String,\n      default: null\n    },\n    required: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    icon: {\n      type: String,\n      default: null\n    },\n    loadingIcon: {\n      type: String,\n      default: () => config.default.loadingIcon\n    },\n    leadingIcon: {\n      type: String,\n      default: null\n    },\n    trailingIcon: {\n      type: String,\n      default: () => config.default.trailingIcon\n    },\n    trailing: {\n      type: Boolean,\n      default: false\n    },\n    leading: {\n      type: Boolean,\n      default: false\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    padded: {\n      type: Boolean,\n      default: true\n    },\n    options: {\n      type: Array,\n      default: () => []\n    },\n    size: {\n      type: String,\n      default: null,\n      validator(value) {\n        return Object.keys(config.size).includes(value);\n      }\n    },\n    color: {\n      type: String,\n      default: () => config.default.color,\n      validator(value) {\n        return [...appConfig.ui.colors, ...Object.keys(config.color)].includes(value);\n      }\n    },\n    variant: {\n      type: String,\n      default: () => config.default.variant,\n      validator(value) {\n        return [\n          ...Object.keys(config.variant),\n          ...Object.values(config.color).flatMap((value2) => Object.keys(value2))\n        ].includes(value);\n      }\n    },\n    optionAttribute: {\n      type: String,\n      default: \"label\"\n    },\n    valueAttribute: {\n      type: String,\n      default: \"value\"\n    },\n    selectClass: {\n      type: String,\n      default: null\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: [\"update:modelValue\", \"change\"],\n  setup(props, { emit, slots }) {\n    const { ui, attrs } = useUI(\"select\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const { size: sizeButtonGroup, rounded } = useInjectButtonGroup({ ui, props });\n    const { emitFormChange, inputId, color, size: sizeFormGroup, name } = useFormGroup(props, config);\n    const size = computed(() => sizeButtonGroup.value ?? sizeFormGroup.value);\n    const onInput = (event) => {\n      emit(\"update:modelValue\", event.target.value);\n    };\n    const onChange = (event) => {\n      emit(\"change\", event.target.value);\n      emitFormChange();\n    };\n    const guessOptionValue = (option) => {\n      return get(option, props.valueAttribute, \"\");\n    };\n    const guessOptionText = (option) => {\n      return get(option, props.optionAttribute, \"\");\n    };\n    const normalizeOption = (option) => {\n      if ([\"string\", \"number\", \"boolean\"].includes(typeof option)) {\n        return {\n          [props.valueAttribute]: option,\n          [props.optionAttribute]: option\n        };\n      }\n      return {\n        ...option,\n        [props.valueAttribute]: guessOptionValue(option),\n        [props.optionAttribute]: guessOptionText(option)\n      };\n    };\n    const normalizedOptions = computed(() => {\n      return props.options.map((option) => normalizeOption(option));\n    });\n    const normalizedOptionsWithPlaceholder = computed(() => {\n      if (!props.placeholder) {\n        return normalizedOptions.value;\n      }\n      return [\n        {\n          [props.valueAttribute]: \"\",\n          [props.optionAttribute]: props.placeholder,\n          disabled: true\n        },\n        ...normalizedOptions.value\n      ];\n    });\n    const normalizedValue = computed(() => {\n      const normalizeModelValue = normalizeOption(props.modelValue);\n      const foundOption = normalizedOptionsWithPlaceholder.value.find((option) => option[props.valueAttribute] === normalizeModelValue[props.valueAttribute]);\n      if (!foundOption) {\n        return \"\";\n      }\n      return foundOption[props.valueAttribute];\n    });\n    const selectClass = computed(() => {\n      const variant = ui.value.color?.[color.value]?.[props.variant] || ui.value.variant[props.variant];\n      return twMerge(twJoin(\n        ui.value.base,\n        ui.value.form,\n        rounded.value,\n        ui.value.size[size.value],\n        props.padded ? ui.value.padding[size.value] : \"p-0\",\n        variant?.replaceAll(\"{color}\", color.value),\n        (isLeading.value || slots.leading) && ui.value.leading.padding[size.value],\n        (isTrailing.value || slots.trailing) && ui.value.trailing.padding[size.value]\n      ), props.placeholder && !props.modelValue && ui.value.placeholder, props.selectClass);\n    });\n    const isLeading = computed(() => {\n      return props.icon && props.leading || props.icon && !props.trailing || props.loading && !props.trailing || props.leadingIcon;\n    });\n    const isTrailing = computed(() => {\n      return props.icon && props.trailing || props.loading && props.trailing || props.trailingIcon;\n    });\n    const leadingIconName = computed(() => {\n      if (props.loading) {\n        return props.loadingIcon;\n      }\n      return props.leadingIcon || props.icon;\n    });\n    const trailingIconName = computed(() => {\n      if (props.loading && !isLeading.value) {\n        return props.loadingIcon;\n      }\n      return props.trailingIcon || props.icon;\n    });\n    const leadingWrapperIconClass = computed(() => {\n      return twJoin(\n        ui.value.icon.leading.wrapper,\n        ui.value.icon.leading.pointer,\n        ui.value.icon.leading.padding[size.value]\n      );\n    });\n    const leadingIconClass = computed(() => {\n      return twJoin(\n        ui.value.icon.base,\n        color.value && appConfig.ui.colors.includes(color.value) && ui.value.icon.color.replaceAll(\"{color}\", color.value),\n        ui.value.icon.size[size.value],\n        props.loading && ui.value.icon.loading\n      );\n    });\n    const trailingWrapperIconClass = computed(() => {\n      return twJoin(\n        ui.value.icon.trailing.wrapper,\n        ui.value.icon.trailing.pointer,\n        ui.value.icon.trailing.padding[size.value]\n      );\n    });\n    const trailingIconClass = computed(() => {\n      return twJoin(\n        ui.value.icon.base,\n        color.value && appConfig.ui.colors.includes(color.value) && ui.value.icon.color.replaceAll(\"{color}\", color.value),\n        ui.value.icon.size[size.value],\n        props.loading && !isLeading.value && ui.value.icon.loading\n      );\n    });\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      // eslint-disable-next-line vue/no-dupe-keys\n      name,\n      inputId,\n      normalizedOptionsWithPlaceholder,\n      normalizedValue,\n      isLeading,\n      isTrailing,\n      // eslint-disable-next-line vue/no-dupe-keys\n      selectClass,\n      leadingIconName,\n      leadingIconClass,\n      leadingWrapperIconClass,\n      trailingIconName,\n      trailingIconClass,\n      trailingWrapperIconClass,\n      onInput,\n      onChange\n    };\n  }\n});\n</script>\n\n<style scoped>\n.form-select{background-image:none}\n</style>\n","<template>\n  <component\n    :is=\"searchable ? 'HCombobox' : 'HListbox'\"\n    v-slot=\"{ open }\"\n    :by=\"by\"\n    :name=\"name\"\n    :model-value=\"multiple ? Array.isArray(modelValue) ? modelValue : [] : modelValue\"\n    :multiple=\"multiple\"\n    :disabled=\"disabled\"\n    as=\"div\"\n    :class=\"ui.wrapper\"\n    @update:model-value=\"onUpdate\"\n  >\n    <input\n      v-if=\"required\"\n      :value=\"modelValue\"\n      :required=\"required\"\n      :class=\"uiMenu.required\"\n      :form=\"inputTargetForm\"\n      tabindex=\"-1\"\n      aria-hidden=\"true\"\n    >\n\n    <component\n      :is=\"searchable ? 'HComboboxButton' : 'HListboxButton'\"\n      ref=\"trigger\"\n      as=\"div\"\n      role=\"button\"\n      :class=\"uiMenu.trigger\"\n    >\n      <slot :open=\"open\" :disabled=\"disabled\" :loading=\"loading\">\n        <button :id=\"inputId\" :class=\"selectClass\" :disabled=\"disabled\" type=\"button\" v-bind=\"attrs\">\n          <span v-if=\"isLeading && leadingIconName || $slots.leading\" :class=\"leadingWrapperIconClass\">\n            <slot name=\"leading\" :selected=\"selected\" :disabled=\"disabled\" :loading=\"loading\">\n              <UIcon :name=\"leadingIconName\" :class=\"leadingIconClass\" />\n            </slot>\n          </span>\n\n          <slot name=\"label\" :selected=\"selected\">\n            <span v-if=\"label\" :class=\"uiMenu.label\">{{ label }}</span>\n            <span v-else :class=\"uiMenu.label\">{{ placeholder || \"\\xA0\" }}</span>\n          </slot>\n\n          <span v-if=\"isTrailing && trailingIconName || $slots.trailing\" :class=\"trailingWrapperIconClass\">\n            <slot name=\"trailing\" :selected=\"selected\" :disabled=\"disabled\" :loading=\"loading\">\n              <UIcon :name=\"trailingIconName\" :class=\"trailingIconClass\" aria-hidden=\"true\" />\n            </slot>\n          </span>\n        </button>\n      </slot>\n    </component>\n\n    <div v-if=\"open\" ref=\"container\" :class=\"[uiMenu.container, uiMenu.width]\">\n      <Transition appear v-bind=\"uiMenu.transition\">\n        <div>\n          <div v-if=\"popper.arrow\" data-popper-arrow :class=\"Object.values(uiMenu.arrow)\" />\n\n          <component :is=\"searchable ? 'HComboboxOptions' : 'HListboxOptions'\" static :class=\"[uiMenu.base, uiMenu.ring, uiMenu.rounded, uiMenu.shadow, uiMenu.background, uiMenu.padding, uiMenu.height]\">\n            <HComboboxInput\n              v-if=\"searchable\"\n              :display-value=\"() => query\"\n              name=\"q\"\n              :placeholder=\"searchablePlaceholder\"\n              autofocus\n              autocomplete=\"off\"\n              :class=\"uiMenu.input\"\n              @change=\"onQueryChange\"\n            />\n            <component\n              :is=\"searchable ? 'HComboboxOption' : 'HListboxOption'\"\n              v-for=\"(option, index) in filteredOptions\"\n              v-slot=\"{ active, selected: optionSelected, disabled: optionDisabled }\"\n              :key=\"index\"\n              as=\"template\"\n              :value=\"valueAttribute ? accessor(option, valueAttribute) : option\"\n              :disabled=\"option.disabled\"\n            >\n              <li :class=\"[uiMenu.option.base, uiMenu.option.rounded, uiMenu.option.padding, uiMenu.option.size, uiMenu.option.color, active ? uiMenu.option.active : uiMenu.option.inactive, optionSelected && uiMenu.option.selected, optionDisabled && uiMenu.option.disabled]\">\n                <div :class=\"uiMenu.option.container\">\n                  <slot name=\"option\" :option=\"option\" :active=\"active\" :selected=\"optionSelected\">\n                    <UIcon v-if=\"option.icon\" :name=\"option.icon\" :class=\"[uiMenu.option.icon.base, active ? uiMenu.option.icon.active : uiMenu.option.icon.inactive, option.iconClass]\" aria-hidden=\"true\" />\n                    <UAvatar\n                      v-else-if=\"option.avatar\"\n                      v-bind=\"{ size: uiMenu.option.avatar.size, ...option.avatar }\"\n                      :class=\"uiMenu.option.avatar.base\"\n                      aria-hidden=\"true\"\n                    />\n                    <span v-else-if=\"option.chip\" :class=\"uiMenu.option.chip.base\" :style=\"{ background: `#${option.chip}` }\" />\n\n                    <span class=\"truncate\">{{ [\"string\", \"number\"].includes(typeof option) ? option : accessor(option, optionAttribute) }}</span>\n                  </slot>\n                </div>\n\n                <span v-if=\"optionSelected\" :class=\"[uiMenu.option.selectedIcon.wrapper, uiMenu.option.selectedIcon.padding]\">\n                  <UIcon :name=\"selectedIcon\" :class=\"uiMenu.option.selectedIcon.base\" aria-hidden=\"true\" />\n                </span>\n              </li>\n            </component>\n\n            <component :is=\"searchable ? 'HComboboxOption' : 'HListboxOption'\" v-if=\"creatable && createOption\" v-slot=\"{ active, selected: optionSelected }\" :value=\"createOption\" as=\"template\">\n              <li :class=\"[uiMenu.option.base, uiMenu.option.rounded, uiMenu.option.padding, uiMenu.option.size, uiMenu.option.color, active ? uiMenu.option.active : uiMenu.option.inactive]\">\n                <div :class=\"uiMenu.option.container\">\n                  <slot name=\"option-create\" :option=\"createOption\" :active=\"active\" :selected=\"optionSelected\">\n                    <span :class=\"uiMenu.option.create\">Create \"{{ typeof createOption === \"string\" ? createOption : accessor(createOption, optionAttribute) }}\"</span>\n                  </slot>\n                </div>\n              </li>\n            </component>\n            <p v-else-if=\"searchable && query && !filteredOptions?.length\" :class=\"uiMenu.option.empty\">\n              <slot name=\"option-empty\" :query=\"query\">\n                {{ uiMenu.default.optionEmpty.label.replace(\"{query}\", query) }}\n              </slot>\n            </p>\n            <p v-else-if=\"!filteredOptions?.length\" :class=\"uiMenu.empty\">\n              <slot name=\"empty\" :query=\"query\">\n                {{ uiMenu.default.empty.label }}\n              </slot>\n            </p>\n          </component>\n        </div>\n      </Transition>\n    </div>\n  </component>\n</template>\n\n<script>\nimport { ref, computed, toRef, watch, defineComponent, toRaw } from \"vue\";\nimport {\n  Combobox as HCombobox,\n  ComboboxButton as HComboboxButton,\n  ComboboxOptions as HComboboxOptions,\n  ComboboxOption as HComboboxOption,\n  ComboboxInput as HComboboxInput,\n  Listbox as HListbox,\n  ListboxButton as HListboxButton,\n  ListboxOptions as HListboxOptions,\n  ListboxOption as HListboxOption,\n  provideUseId\n} from \"@headlessui/vue\";\nimport { computedAsync, useDebounceFn } from \"@vueuse/core\";\nimport { defu } from \"defu\";\nimport { twJoin } from \"tailwind-merge\";\nimport { isEqual } from \"ohash/utils\";\nimport UIcon from \"../elements/Icon.vue\";\nimport UAvatar from \"../elements/Avatar.vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { usePopper } from \"../../composables/usePopper\";\nimport { useFormGroup } from \"../../composables/useFormGroup\";\nimport { get, mergeConfig, twMerge } from \"../../utils\";\nimport { useInjectButtonGroup } from \"../../composables/useButtonGroup\";\nimport appConfig from \"#build/app.config\";\nimport { select, selectMenu } from \"#ui/ui.config\";\nimport { useId } from \"#imports\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.select, select);\nconst configMenu = mergeConfig(appConfig.ui.strategy, appConfig.ui.selectMenu, selectMenu);\nexport default defineComponent({\n  components: {\n    HCombobox,\n    HComboboxButton,\n    HComboboxOptions,\n    HComboboxOption,\n    HComboboxInput,\n    HListbox,\n    HListboxButton,\n    HListboxOptions,\n    HListboxOption,\n    UIcon,\n    UAvatar\n  },\n  inheritAttrs: false,\n  props: {\n    modelValue: {\n      type: [String, Number, Object, Array, Boolean],\n      default: \"\"\n    },\n    query: {\n      type: String,\n      default: null\n    },\n    by: {\n      type: String,\n      default: void 0\n    },\n    options: {\n      type: Array,\n      default: () => []\n    },\n    id: {\n      type: String,\n      default: null\n    },\n    name: {\n      type: String,\n      default: null\n    },\n    required: {\n      type: Boolean,\n      default: false\n    },\n    icon: {\n      type: String,\n      default: null\n    },\n    loadingIcon: {\n      type: String,\n      default: () => config.default.loadingIcon\n    },\n    leadingIcon: {\n      type: String,\n      default: null\n    },\n    trailingIcon: {\n      type: String,\n      default: () => config.default.trailingIcon\n    },\n    trailing: {\n      type: Boolean,\n      default: false\n    },\n    leading: {\n      type: Boolean,\n      default: false\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    selectedIcon: {\n      type: String,\n      default: () => configMenu.default.selectedIcon\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    searchable: {\n      type: [Boolean, Function],\n      default: false\n    },\n    searchablePlaceholder: {\n      type: String,\n      default: () => configMenu.default.searchablePlaceholder.label\n    },\n    searchableLazy: {\n      type: Boolean,\n      default: false\n    },\n    clearSearchOnClose: {\n      type: Boolean,\n      default: () => configMenu.default.clearSearchOnClose\n    },\n    debounce: {\n      type: Number,\n      default: 200\n    },\n    creatable: {\n      type: Boolean,\n      default: false\n    },\n    showCreateOptionWhen: {\n      type: [String, Function],\n      default: () => configMenu.default.showCreateOptionWhen\n    },\n    placeholder: {\n      type: String,\n      default: null\n    },\n    padded: {\n      type: Boolean,\n      default: true\n    },\n    size: {\n      type: String,\n      default: null,\n      validator(value) {\n        return Object.keys(config.size).includes(value);\n      }\n    },\n    color: {\n      type: String,\n      default: () => config.default.color,\n      validator(value) {\n        return [...appConfig.ui.colors, ...Object.keys(config.color)].includes(value);\n      }\n    },\n    variant: {\n      type: String,\n      default: () => config.default.variant,\n      validator(value) {\n        return [\n          ...Object.keys(config.variant),\n          ...Object.values(config.color).flatMap((value2) => Object.keys(value2))\n        ].includes(value);\n      }\n    },\n    optionAttribute: {\n      type: String,\n      default: \"label\"\n    },\n    valueAttribute: {\n      type: String,\n      default: null\n    },\n    searchAttributes: {\n      type: Array,\n      default: null\n    },\n    inputTargetForm: {\n      type: String,\n      default: null\n    },\n    popper: {\n      type: Object,\n      default: () => ({})\n    },\n    selectClass: {\n      type: String,\n      default: null\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    },\n    uiMenu: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: [\"update:modelValue\", \"update:query\", \"open\", \"close\", \"change\"],\n  setup(props, { emit, slots }) {\n    if (import.meta.dev && props.multiple && !Array.isArray(props.modelValue)) {\n      console.warn(`[@nuxt/ui] The USelectMenu components needs to have a modelValue of type Array when using the multiple prop. Got '${typeof props.modelValue}' instead.`, props.modelValue);\n    }\n    const { ui, attrs } = useUI(\"select\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const { ui: uiMenu } = useUI(\"selectMenu\", toRef(props, \"uiMenu\"), configMenu);\n    const popper = computed(() => defu({}, props.popper, uiMenu.value.popper));\n    const [trigger, container] = usePopper(popper.value);\n    const by = computed(() => {\n      if (!props.by) return void 0;\n      if (typeof props.by === \"function\") {\n        return props.by;\n      }\n      const key = props.by;\n      const hasDot = key.indexOf(\".\");\n      if (hasDot > 0) {\n        return (a, z) => {\n          return accessor(a, key) === accessor(z, key);\n        };\n      }\n      return key;\n    });\n    const { size: sizeButtonGroup, rounded } = useInjectButtonGroup({ ui, props });\n    const { emitFormBlur, emitFormChange, inputId, color, size: sizeFormGroup, name } = useFormGroup(props, config);\n    const size = computed(() => sizeButtonGroup.value ?? sizeFormGroup.value);\n    const internalQuery = ref(\"\");\n    const query = computed({\n      get() {\n        return props.query ?? internalQuery.value;\n      },\n      set(value) {\n        internalQuery.value = value;\n        emit(\"update:query\", value);\n      }\n    });\n    const selected = computed(() => {\n      function compareValues(value1, value2) {\n        if (by.value && typeof by.value !== \"function\" && isObject(value1) && isObject(value2)) {\n          return isEqual(value1[by.value], value2[by.value]);\n        }\n        return isEqual(value1, value2);\n      }\n      function getValue(value) {\n        if (props.valueAttribute) {\n          return accessor(value, props.valueAttribute);\n        }\n        return value;\n      }\n      if (props.multiple) {\n        const modelValue = props.modelValue;\n        if (!Array.isArray(modelValue) || !modelValue.length) {\n          return [];\n        }\n        return options.value.filter((option) => {\n          const optionValue = getValue(option);\n          return modelValue.some((value) => compareValues(value, optionValue));\n        });\n      }\n      return options.value.find((option) => {\n        const optionValue = getValue(option);\n        return compareValues(optionValue, toRaw(props.modelValue));\n      }) ?? props.modelValue;\n    });\n    const label = computed(() => {\n      if (!props.modelValue) return null;\n      if (Array.isArray(props.modelValue) && props.modelValue.length) {\n        return `${props.modelValue.length} selected`;\n      } else if ([\"string\", \"number\"].includes(typeof props.modelValue)) {\n        return props.valueAttribute ? accessor(selected.value, props.optionAttribute) : props.modelValue;\n      }\n      return accessor(props.modelValue, props.optionAttribute);\n    });\n    const selectClass = computed(() => {\n      const variant = ui.value.color?.[color.value]?.[props.variant] || ui.value.variant[props.variant];\n      return twMerge(twJoin(\n        ui.value.base,\n        uiMenu.value.select,\n        rounded.value,\n        ui.value.size[size.value],\n        ui.value.gap[size.value],\n        props.padded ? ui.value.padding[size.value] : \"p-0\",\n        variant?.replaceAll(\"{color}\", color.value),\n        (isLeading.value || slots.leading) && ui.value.leading.padding[size.value],\n        (isTrailing.value || slots.trailing) && ui.value.trailing.padding[size.value]\n      ), props.placeholder && (!props.modelValue || Array.isArray(props.modelValue) && !props.modelValue.length) && ui.value.placeholder, props.selectClass);\n    });\n    const isLeading = computed(() => {\n      return props.icon && props.leading || props.icon && !props.trailing || props.loading && !props.trailing || props.leadingIcon;\n    });\n    const isTrailing = computed(() => {\n      return props.icon && props.trailing || props.loading && props.trailing || props.trailingIcon;\n    });\n    const leadingIconName = computed(() => {\n      if (props.loading) {\n        return props.loadingIcon;\n      }\n      return props.leadingIcon || props.icon;\n    });\n    const trailingIconName = computed(() => {\n      if (props.loading && !isLeading.value) {\n        return props.loadingIcon;\n      }\n      return props.trailingIcon || props.icon;\n    });\n    const leadingWrapperIconClass = computed(() => {\n      return twJoin(\n        ui.value.icon.leading.wrapper,\n        ui.value.icon.leading.pointer,\n        ui.value.icon.leading.padding[size.value]\n      );\n    });\n    const leadingIconClass = computed(() => {\n      return twJoin(\n        ui.value.icon.base,\n        color.value && appConfig.ui.colors.includes(color.value) && ui.value.icon.color.replaceAll(\"{color}\", color.value),\n        ui.value.icon.size[size.value],\n        props.loading && ui.value.icon.loading\n      );\n    });\n    const trailingWrapperIconClass = computed(() => {\n      return twJoin(\n        ui.value.icon.trailing.wrapper,\n        ui.value.icon.trailing.pointer,\n        ui.value.icon.trailing.padding[size.value]\n      );\n    });\n    const trailingIconClass = computed(() => {\n      return twJoin(\n        ui.value.icon.base,\n        color.value && appConfig.ui.colors.includes(color.value) && ui.value.icon.color.replaceAll(\"{color}\", color.value),\n        ui.value.icon.size[size.value],\n        props.loading && !isLeading.value && ui.value.icon.loading\n      );\n    });\n    const debouncedSearch = props.searchable && typeof props.searchable === \"function\" ? useDebounceFn(props.searchable, props.debounce) : void 0;\n    const options = computedAsync(async () => {\n      if (debouncedSearch) {\n        return await debouncedSearch(query.value);\n      }\n      return props.options || [];\n    }, [], {\n      lazy: props.searchableLazy\n    });\n    function escapeRegExp(string) {\n      return string.replace(/[.*+?^${}()|[\\]\\\\]/g, (match) => `\\\\${match}`);\n    }\n    function accessor(obj, key) {\n      return get(obj, key);\n    }\n    function isObject(object) {\n      return !Array.isArray(object) && object !== null && typeof object === \"object\";\n    }\n    const filteredOptions = computed(() => {\n      if (!query.value || debouncedSearch) {\n        return options.value;\n      }\n      const escapedQuery = escapeRegExp(query.value);\n      return options.value.filter((option) => {\n        return (props.searchAttributes?.length ? props.searchAttributes : [props.optionAttribute]).some((searchAttribute) => {\n          if ([\"string\", \"number\"].includes(typeof option)) {\n            return String(option).search(new RegExp(escapedQuery, \"i\")) !== -1;\n          }\n          const child = get(option, searchAttribute);\n          return child !== null && child !== void 0 && String(child).search(new RegExp(escapedQuery, \"i\")) !== -1;\n        });\n      });\n    });\n    const createOption = computed(() => {\n      if (query.value === \"\") {\n        return null;\n      }\n      if (props.showCreateOptionWhen === \"empty\" && filteredOptions.value.length) {\n        return null;\n      }\n      if (props.showCreateOptionWhen === \"always\") {\n        const existingOption = filteredOptions.value.find((option) => [\"string\", \"number\"].includes(typeof option) ? option === query.value : accessor(option, props.optionAttribute) === query.value);\n        if (existingOption) {\n          return null;\n        }\n      }\n      if (typeof props.showCreateOptionWhen === \"function\") {\n        if (!props.showCreateOptionWhen(query.value, filteredOptions.value)) {\n          return null;\n        }\n      }\n      return [\"string\", \"number\"].includes(typeof props.modelValue) ? query.value : { [props.optionAttribute]: query.value };\n    });\n    function clearOnClose() {\n      if (props.clearSearchOnClose) {\n        query.value = \"\";\n      }\n    }\n    watch(container, (value) => {\n      if (value) {\n        emit(\"open\");\n      } else {\n        clearOnClose();\n        emit(\"close\");\n        emitFormBlur();\n      }\n    });\n    function onUpdate(value) {\n      if (toRaw(props.modelValue) === value) {\n        return;\n      }\n      emit(\"update:modelValue\", value);\n      emit(\"change\", value);\n      emitFormChange();\n    }\n    function onQueryChange(event) {\n      query.value = event.target.value;\n    }\n    provideUseId(() => useId());\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      // eslint-disable-next-line vue/no-dupe-keys\n      uiMenu,\n      attrs,\n      // eslint-disable-next-line vue/no-dupe-keys\n      name,\n      inputId,\n      // eslint-disable-next-line vue/no-dupe-keys\n      popper,\n      trigger,\n      container,\n      selected,\n      label,\n      accessor,\n      isLeading,\n      isTrailing,\n      // eslint-disable-next-line vue/no-dupe-keys\n      selectClass,\n      leadingIconName,\n      leadingIconClass,\n      leadingWrapperIconClass,\n      trailingIconName,\n      trailingIconClass,\n      trailingWrapperIconClass,\n      filteredOptions,\n      createOption,\n      // eslint-disable-next-line vue/no-dupe-keys\n      query,\n      onUpdate,\n      onQueryChange,\n      // eslint-disable-next-line vue/no-dupe-keys\n      by\n    };\n  }\n});\n</script>\n","<template>\n  <div :class=\"ui.wrapper\">\n    <textarea\n      :id=\"inputId\"\n      ref=\"textarea\"\n      :value=\"modelValue\"\n      :name=\"name\"\n      :rows=\"rows\"\n      :required=\"required\"\n      :disabled=\"disabled\"\n      :placeholder=\"placeholder\"\n      :class=\"textareaClass\"\n      v-bind=\"attrs\"\n      @input=\"onInput\"\n      @blur=\"onBlur\"\n      @change=\"onChange\"\n    />\n\n    <slot />\n  </div>\n</template>\n\n<script>\nimport { ref, computed, toRef, watch, onMounted, nextTick, defineComponent } from \"vue\";\nimport { twJoin } from \"tailwind-merge\";\nimport { defu } from \"defu\";\nimport { useUI } from \"../../composables/useUI\";\nimport { useFormGroup } from \"../../composables/useFormGroup\";\nimport { looseToNumber, mergeConfig, twMerge } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { textarea } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.textarea, textarea);\nexport default defineComponent({\n  inheritAttrs: false,\n  props: {\n    modelValue: {\n      type: [String, Number],\n      default: \"\"\n    },\n    id: {\n      type: String,\n      default: null\n    },\n    name: {\n      type: String,\n      default: null\n    },\n    placeholder: {\n      type: String,\n      default: null\n    },\n    required: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    rows: {\n      type: Number,\n      default: 3\n    },\n    maxrows: {\n      type: Number,\n      default: 0\n    },\n    autoresize: {\n      type: Boolean,\n      default: false\n    },\n    autofocus: {\n      type: Boolean,\n      default: false\n    },\n    autofocusDelay: {\n      type: Number,\n      default: 100\n    },\n    resize: {\n      type: Boolean,\n      default: false\n    },\n    padded: {\n      type: Boolean,\n      default: true\n    },\n    size: {\n      type: String,\n      default: null,\n      validator(value) {\n        return Object.keys(config.size).includes(value);\n      }\n    },\n    color: {\n      type: String,\n      default: () => config.default.color,\n      validator(value) {\n        return [...appConfig.ui.colors, ...Object.keys(config.color)].includes(value);\n      }\n    },\n    variant: {\n      type: String,\n      default: () => config.default.variant,\n      validator(value) {\n        return [\n          ...Object.keys(config.variant),\n          ...Object.values(config.color).flatMap((value2) => Object.keys(value2))\n        ].includes(value);\n      }\n    },\n    textareaClass: {\n      type: String,\n      default: null\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    },\n    modelModifiers: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: [\"update:modelValue\", \"blur\", \"change\"],\n  setup(props, { emit }) {\n    const { ui, attrs } = useUI(\"textarea\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const { emitFormBlur, emitFormInput, inputId, color, size, name } = useFormGroup(props, config);\n    const modelModifiers = ref(defu({}, props.modelModifiers, { trim: false, lazy: false, number: false, nullify: false }));\n    const textarea2 = ref(null);\n    const autoFocus = () => {\n      if (props.autofocus) {\n        textarea2.value?.focus();\n      }\n    };\n    const autoResize = () => {\n      if (props.autoresize) {\n        if (!textarea2.value) {\n          return;\n        }\n        textarea2.value.rows = props.rows;\n        const overflow = textarea2.value.style.overflow;\n        textarea2.value.style.overflow = \"hidden\";\n        const styles = window.getComputedStyle(textarea2.value);\n        const paddingTop = Number.parseInt(styles.paddingTop);\n        const paddingBottom = Number.parseInt(styles.paddingBottom);\n        const padding = paddingTop + paddingBottom;\n        const lineHeight = Number.parseInt(styles.lineHeight);\n        const { scrollHeight } = textarea2.value;\n        const newRows = (scrollHeight - padding) / lineHeight;\n        if (newRows > props.rows) {\n          textarea2.value.rows = props.maxrows ? Math.min(newRows, props.maxrows) : newRows;\n        }\n        textarea2.value.style.overflow = overflow;\n      }\n    };\n    const updateInput = (value) => {\n      if (modelModifiers.value.trim) {\n        value = value.trim();\n      }\n      if (modelModifiers.value.number) {\n        value = looseToNumber(value);\n      }\n      if (modelModifiers.value.nullify) {\n        value ||= null;\n      }\n      emit(\"update:modelValue\", value);\n      emitFormInput();\n    };\n    const onInput = (event) => {\n      autoResize();\n      if (!modelModifiers.value.lazy) {\n        updateInput(event.target.value);\n      }\n    };\n    const onChange = (event) => {\n      const value = event.target.value;\n      emit(\"change\", value);\n      if (modelModifiers.value.lazy) {\n        updateInput(value);\n      }\n      if (modelModifiers.value.trim) {\n        event.target.value = value.trim();\n      }\n    };\n    const onBlur = (event) => {\n      emit(\"blur\", event);\n      emitFormBlur();\n    };\n    onMounted(() => {\n      setTimeout(() => {\n        autoFocus();\n      }, props.autofocusDelay);\n    });\n    watch(() => props.modelValue, () => {\n      nextTick(autoResize);\n    });\n    onMounted(() => {\n      setTimeout(() => {\n        autoFocus();\n        autoResize();\n      }, 100);\n    });\n    const textareaClass = computed(() => {\n      const variant = ui.value.color?.[color.value]?.[props.variant] || ui.value.variant[props.variant];\n      return twMerge(twJoin(\n        ui.value.base,\n        ui.value.form,\n        ui.value.rounded,\n        ui.value.placeholder,\n        ui.value.size[size.value],\n        props.padded ? ui.value.padding[size.value] : \"p-0\",\n        variant?.replaceAll(\"{color}\", color.value),\n        !props.resize && \"resize-none\"\n      ), props.textareaClass);\n    });\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      // eslint-disable-next-line vue/no-dupe-keys\n      name,\n      inputId,\n      textarea: textarea2,\n      // eslint-disable-next-line vue/no-dupe-keys\n      textareaClass,\n      onInput,\n      onChange,\n      onBlur\n    };\n  }\n});\n</script>\n","<template>\n  <HSwitch\n    :id=\"inputId\"\n    v-model=\"active\"\n    :name=\"name\"\n    :disabled=\"disabled || loading\"\n    :class=\"switchClass\"\n    v-bind=\"attrs\"\n  >\n    <span :class=\"containerClass\">\n      <span v-if=\"loading\" :class=\"[ui.icon.active, ui.icon.base]\" aria-hidden=\"true\">\n        <UIcon :name=\"loadingIcon\" :class=\"loadingIconClass\" />\n      </span>\n      <span\n        v-if=\"!loading && onIcon\"\n        :class=\"[active ? ui.icon.active : ui.icon.inactive, ui.icon.base]\"\n        aria-hidden=\"true\"\n      >\n        <UIcon :name=\"onIcon\" :class=\"onIconClass\" />\n      </span>\n      <span\n        v-if=\"!loading && offIcon\"\n        :class=\"[active ? ui.icon.inactive : ui.icon.active, ui.icon.base]\"\n        aria-hidden=\"true\"\n      >\n        <UIcon :name=\"offIcon\" :class=\"offIconClass\" />\n      </span>\n    </span>\n  </HSwitch>\n</template>\n\n<script>\nimport { computed, toRef, defineComponent } from \"vue\";\nimport { Switch as HSwitch, provideUseId } from \"@headlessui/vue\";\nimport { twJoin } from \"tailwind-merge\";\nimport UIcon from \"../elements/Icon.vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { useFormGroup } from \"../../composables/useFormGroup\";\nimport { mergeConfig, twMerge } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { toggle } from \"#ui/ui.config\";\nimport { useId } from \"#imports\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.toggle, toggle);\nexport default defineComponent({\n  components: {\n    HSwitch,\n    UIcon\n  },\n  inheritAttrs: false,\n  props: {\n    id: {\n      type: String,\n      default: null\n    },\n    name: {\n      type: String,\n      default: null\n    },\n    modelValue: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    onIcon: {\n      type: String,\n      default: () => config.default.onIcon\n    },\n    offIcon: {\n      type: String,\n      default: () => config.default.offIcon\n    },\n    loadingIcon: {\n      type: String,\n      default: () => config.default.loadingIcon\n    },\n    color: {\n      type: String,\n      default: () => config.default.color,\n      validator(value) {\n        return appConfig.ui.colors.includes(value);\n      }\n    },\n    size: {\n      type: String,\n      default: () => config.default.size,\n      validator(value) {\n        return Object.keys(config.size).includes(value);\n      }\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: [\"update:modelValue\", \"change\"],\n  setup(props, { emit }) {\n    const { ui, attrs } = useUI(\"toggle\", toRef(props, \"ui\"), config);\n    const { emitFormChange, color, inputId, name } = useFormGroup(props);\n    const active = computed({\n      get() {\n        return props.modelValue;\n      },\n      set(value) {\n        emit(\"update:modelValue\", value);\n        emit(\"change\", value);\n        emitFormChange();\n      }\n    });\n    const switchClass = computed(() => {\n      return twMerge(twJoin(\n        ui.value.base,\n        ui.value.size[props.size],\n        ui.value.rounded,\n        color.value && ui.value.ring.replaceAll(\"{color}\", color.value),\n        color.value && (active.value ? ui.value.active : ui.value.inactive).replaceAll(\"{color}\", color.value)\n      ), props.class);\n    });\n    const containerClass = computed(() => {\n      return twJoin(\n        ui.value.container.base,\n        ui.value.container.size[props.size],\n        active.value ? ui.value.container.active[props.size] : ui.value.container.inactive\n      );\n    });\n    const onIconClass = computed(() => {\n      return twJoin(\n        ui.value.icon.size[props.size],\n        color.value && ui.value.icon.on.replaceAll(\"{color}\", color.value)\n      );\n    });\n    const offIconClass = computed(() => {\n      return twJoin(\n        ui.value.icon.size[props.size],\n        color.value && ui.value.icon.off.replaceAll(\"{color}\", color.value)\n      );\n    });\n    const loadingIconClass = computed(() => {\n      return twJoin(\n        ui.value.icon.size[props.size],\n        color.value && ui.value.icon.loading.replaceAll(\"{color}\", color.value)\n      );\n    });\n    provideUseId(() => useId());\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      // eslint-disable-next-line vue/no-dupe-keys\n      name,\n      inputId,\n      active,\n      switchClass,\n      containerClass,\n      onIconClass,\n      offIconClass,\n      loadingIconClass\n    };\n  }\n});\n</script>\n","<template>\n  <div :class=\"ui.wrapper\" v-bind=\"attrs\">\n    <table :class=\"[ui.base, ui.divide]\">\n      <slot v-if=\"$slots.caption || caption\" name=\"caption\">\n        <caption :class=\"ui.caption\">\n          {{ caption }}\n        </caption>\n      </slot>\n      <thead :class=\"ui.thead\">\n        <tr :class=\"ui.tr.base\">\n          <th v-if=\"expand\" scope=\"col\" :class=\"ui.tr.base\">\n            <span class=\"sr-only\">Expand</span>\n          </th>\n          <th\n            v-for=\"(column, index) in columns\"\n            :key=\"index\"\n            scope=\"col\"\n            :class=\"[ui.th.base, ui.th.padding, ui.th.color, ui.th.font, ui.th.size, column.key === 'select' && ui.checkbox.padding, column.class]\"\n            :aria-sort=\"getAriaSort(column)\"\n          >\n            <slot v-if=\"!singleSelect && modelValue && column.key === 'select'\" name=\"select-header\" :indeterminate=\"indeterminate\" :checked=\"isAllRowChecked\" :change=\"onChange\">\n              <UCheckbox\n                :model-value=\"isAllRowChecked\"\n                :indeterminate=\"indeterminate\"\n                v-bind=\"ui.default.checkbox\"\n                aria-label=\"Select all\"\n                @change=\"onChange\"\n              />\n            </slot>\n\n            <slot v-else :name=\"`${column.key}-header`\" :column=\"column\" :sort=\"sort\" :on-sort=\"onSort\">\n              <UButton\n                v-if=\"column.sortable\"\n                v-bind=\"{ ...ui.default.sortButton || {}, ...sortButton }\"\n                :icon=\"!sort.column || sort.column !== column.key ? sortButton.icon || ui.default.sortButton.icon : sort.direction === 'asc' ? sortAscIcon : sortDescIcon\"\n                :label=\"column[columnAttribute]\"\n                @click=\"onSort(column)\"\n              />\n              <span v-else>{{ column[columnAttribute] }}</span>\n            </slot>\n          </th>\n        </tr>\n\n        <tr v-if=\"loading && progress\">\n          <td :colspan=\"0\" :class=\"ui.progress.wrapper\">\n            <UProgress v-bind=\"{ ...ui.default.progress || {}, ...progress }\" size=\"2xs\" />\n          </td>\n        </tr>\n      </thead>\n      <tbody :class=\"ui.tbody\">\n        <tr v-if=\"loadingState && loading && !rows.length\">\n          <td :colspan=\"columns.length + (modelValue ? 1 : 0) + (expand ? 1 : 0)\">\n            <slot name=\"loading-state\">\n              <div :class=\"ui.loadingState.wrapper\">\n                <UIcon v-if=\"loadingState.icon\" :name=\"loadingState.icon\" :class=\"ui.loadingState.icon\" aria-hidden=\"true\" />\n                <p :class=\"ui.loadingState.label\">\n                  {{ loadingState.label }}\n                </p>\n              </div>\n            </slot>\n          </td>\n        </tr>\n\n        <tr v-else-if=\"emptyState && !rows.length\">\n          <td :colspan=\"columns.length + (modelValue ? 1 : 0) + (expand ? 1 : 0)\">\n            <slot name=\"empty-state\">\n              <div :class=\"ui.emptyState.wrapper\">\n                <UIcon v-if=\"emptyState.icon\" :name=\"emptyState.icon\" :class=\"ui.emptyState.icon\" aria-hidden=\"true\" />\n                <p :class=\"ui.emptyState.label\">\n                  {{ emptyState.label }}\n                </p>\n              </div>\n            </slot>\n          </td>\n        </tr>\n\n        <template v-else>\n          <template v-for=\"(row, index) in rows\" :key=\"index\">\n            <tr :class=\"[ui.tr.base, isSelected(row) && ui.tr.selected, isExpanded(row) && ui.tr.expanded, $attrs.onSelect && ui.tr.active, row?.class]\" @click=\"() => onSelect(row)\" @contextmenu=\"(event) => onContextmenu(event, row)\">\n              <td\n                v-if=\"expand\"\n                :class=\"[ui.td.base, ui.td.padding, ui.td.color, ui.td.font, ui.td.size]\"\n              >\n                <template v-if=\"$slots['expand-action']\">\n                  <slot name=\"expand-action\" :row=\"row\" :is-expanded=\"isExpanded(row)\" :toggle=\"() => toggleOpened(row)\" />\n                </template>\n                <UButton\n                  v-else\n                  :disabled=\"row.disabledExpand\"\n                  v-bind=\"{ ...ui.default.expandButton || {}, ...expandButton }\"\n                  :ui=\"{ icon: { base: [ui.expand.icon, isExpanded(row) && 'rotate-180'].join(' ') } }\"\n                  @click.capture.stop=\"toggleOpened(row)\"\n                />\n              </td>\n              <td v-for=\"(column, subIndex) in columns\" :key=\"subIndex\" :class=\"[ui.td.base, ui.td.padding, ui.td.color, ui.td.font, ui.td.size, column?.rowClass, row[column.key]?.class, column.key === 'select' && ui.checkbox.padding]\">\n                <!-- This is a workaround: Since the @change event doesn't bubble up naturally, we need to wrap it in another element and use @click.capture.stop to simulate event bubbling behavior -->\n                <span v-if=\"modelValue && column.key === 'select'\" @click.capture.stop=\"() => {\n}\">\n                  <slot name=\"select-data\" :checked=\"isSelected(row)\" :change=\"(ev) => onChangeCheckbox(ev, row)\">\n                    <UCheckbox\n                      :model-value=\"isSelected(row)\"\n                      v-bind=\"ui.default.checkbox\"\n                      aria-label=\"Select row\"\n                      @change=\"onChangeCheckbox($event, row)\"\n                    />\n                  </slot>\n                </span>\n                <slot\n                  v-else\n                  :name=\"`${column.key}-data`\"\n                  :column=\"column\"\n                  :row=\"row\"\n                  :index=\"index\"\n                  :get-row-data=\"(defaultValue) => getRowData(row, column.key, defaultValue)\"\n                >\n                  {{ getRowData(row, column.key) }}\n                </slot>\n              </td>\n            </tr>\n            <tr v-if=\"isExpanded(row)\">\n              <td colspan=\"100%\">\n                <slot\n                  name=\"expand\"\n                  :row=\"row\"\n                  :index=\"index\"\n                />\n              </td>\n            </tr>\n          </template>\n        </template>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport { computed, defineComponent, toRaw, toRef } from \"vue\";\nimport { upperFirst } from \"scule\";\nimport { defu } from \"defu\";\nimport { useVModel } from \"@vueuse/core\";\nimport { isEqual } from \"ohash/utils\";\nimport UIcon from \"../elements/Icon.vue\";\nimport UButton from \"../elements/Button.vue\";\nimport UProgress from \"../elements/Progress.vue\";\nimport UCheckbox from \"../forms/Checkbox.vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { get, mergeConfig } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { table } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.table, table);\nfunction defaultComparator(a, z) {\n  return isEqual(a, z);\n}\nfunction defaultSort(a, b, direction) {\n  if (a === b) {\n    return 0;\n  }\n  if (direction === \"asc\") {\n    return a < b ? -1 : 1;\n  } else {\n    return a > b ? -1 : 1;\n  }\n}\nfunction getStringifiedSet(arr) {\n  return new Set(arr.map((item) => JSON.stringify(item)));\n}\nfunction accessor(key) {\n  return (obj) => get(obj, key);\n}\nexport default defineComponent({\n  components: {\n    UIcon,\n    UButton,\n    UProgress,\n    UCheckbox\n  },\n  inheritAttrs: false,\n  props: {\n    modelValue: {\n      type: Array,\n      default: null\n    },\n    by: {\n      type: [String, Function],\n      default: () => defaultComparator\n    },\n    rows: {\n      type: Array,\n      default: () => []\n    },\n    columns: {\n      type: Array,\n      default: null\n    },\n    columnAttribute: {\n      type: String,\n      default: \"label\"\n    },\n    sort: {\n      type: Object,\n      default: () => ({})\n    },\n    sortMode: {\n      type: String,\n      default: \"auto\"\n    },\n    sortButton: {\n      type: Object,\n      default: () => config.default.sortButton\n    },\n    sortAscIcon: {\n      type: String,\n      default: () => config.default.sortAscIcon\n    },\n    sortDescIcon: {\n      type: String,\n      default: () => config.default.sortDescIcon\n    },\n    expandButton: {\n      type: Object,\n      default: () => config.default.expandButton\n    },\n    expand: {\n      type: Object,\n      default: () => null\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    loadingState: {\n      type: Object,\n      default: () => config.default.loadingState\n    },\n    emptyState: {\n      type: Object,\n      default: () => config.default.emptyState\n    },\n    caption: {\n      type: String,\n      default: null\n    },\n    progress: {\n      type: Object,\n      default: () => config.default.progress\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    },\n    multipleExpand: {\n      type: Boolean,\n      default: true\n    },\n    singleSelect: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: [\"update:modelValue\", \"update:sort\", \"update:expand\", \"select:all\"],\n  setup(props, { emit, attrs: $attrs }) {\n    const { ui, attrs } = useUI(\"table\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const columns = computed(() => {\n      const defaultColumns = props.columns ?? Object.keys(props.rows[0]).map((key) => ({\n        key,\n        label: upperFirst(key),\n        sortable: false,\n        class: void 0,\n        sort: defaultSort\n      }));\n      const hasColumnSelect = defaultColumns.find((v) => v.key === \"select\");\n      if (hasColumnSelect || !props.modelValue) {\n        return defaultColumns;\n      }\n      return [{\n        key: \"select\",\n        sortable: false,\n        class: void 0,\n        sort: defaultSort\n      }, ...defaultColumns];\n    });\n    const sort = useVModel(props, \"sort\", emit, { passive: true, defaultValue: defu({}, props.sort, { column: null, direction: \"asc\" }) });\n    const expand = useVModel(props, \"expand\", emit, {\n      passive: true,\n      defaultValue: defu({}, props.expand, {\n        openedRows: [],\n        row: null\n      })\n    });\n    const savedSort = { column: sort.value.column, direction: null };\n    const rows = computed(() => {\n      if (!sort.value?.column || props.sortMode === \"manual\") {\n        return props.rows;\n      }\n      const { column, direction } = sort.value;\n      return props.rows.slice().sort((a, b) => {\n        const aValue = get(a, column);\n        const bValue = get(b, column);\n        const sort2 = columns.value.find((col) => col.key === column)?.sort ?? defaultSort;\n        return sort2(aValue, bValue, direction);\n      });\n    });\n    const selected = computed({\n      get() {\n        return props.modelValue;\n      },\n      set(value) {\n        emit(\"update:modelValue\", value);\n      }\n    });\n    const totalRows = computed(() => props.rows.length);\n    const countCheckedRow = computed(() => {\n      const selectedData = getStringifiedSet(selected.value);\n      const rowsData = getStringifiedSet(props.rows);\n      return Array.from(selectedData).filter((item) => rowsData.has(item)).length;\n    });\n    const indeterminate = computed(() => {\n      if (!selected.value || !props.rows) return false;\n      return countCheckedRow.value > 0 && countCheckedRow.value < totalRows.value;\n    });\n    const isAllRowChecked = computed(() => countCheckedRow.value === totalRows.value);\n    const emptyState = computed(() => {\n      if (props.emptyState === null) return null;\n      return { ...ui.value.default.emptyState, ...props.emptyState };\n    });\n    const loadingState = computed(() => {\n      if (props.loadingState === null) return null;\n      return { ...ui.value.default.loadingState, ...props.loadingState };\n    });\n    function compare(a, z) {\n      if (typeof props.by === \"string\") {\n        const accesorFn = accessor(props.by);\n        return accesorFn(a) === accesorFn(z);\n      }\n      return props.by(a, z);\n    }\n    function isSelected(row) {\n      if (!props.modelValue) {\n        return false;\n      }\n      return selected.value.some((item) => compare(toRaw(item), toRaw(row)));\n    }\n    function onSort(column) {\n      if (sort.value.column === column.key) {\n        const direction = !column.direction || column.direction === \"asc\" ? \"desc\" : \"asc\";\n        if (sort.value.direction === direction) {\n          sort.value = defu({}, savedSort, { column: null, direction: \"asc\" });\n        } else {\n          sort.value = { column: sort.value.column, direction: sort.value.direction === \"asc\" ? \"desc\" : \"asc\" };\n        }\n      } else {\n        sort.value = { column: column.key, direction: column.direction || \"asc\" };\n      }\n    }\n    function onSelect(row) {\n      const selection = window.getSelection();\n      if (selection && selection.toString().length > 0) {\n        return;\n      }\n      if (!$attrs.onSelect) {\n        return;\n      }\n      $attrs.onSelect(row);\n    }\n    function onContextmenu(event, row) {\n      if (!$attrs.onContextmenu) {\n        return;\n      }\n      $attrs.onContextmenu(event, row);\n    }\n    function selectAllRows() {\n      const newSelected = [...selected.value];\n      props.rows.forEach((row) => {\n        if (!isSelected(row)) {\n          newSelected.push(row);\n        }\n      });\n      selected.value = newSelected;\n    }\n    function onChange(checked) {\n      if (checked) {\n        selectAllRows();\n      } else {\n        selected.value = [];\n      }\n      emit(\"select:all\", checked);\n    }\n    function onChangeCheckbox(checked, row) {\n      if (checked) {\n        selected.value = props.singleSelect ? [row] : [...selected.value, row];\n      } else {\n        selected.value = selected.value.filter((value) => !compare(toRaw(value), toRaw(row)));\n      }\n    }\n    function getRowData(row, rowKey, defaultValue = \"\") {\n      return get(row, rowKey, defaultValue);\n    }\n    function isExpanded(row) {\n      return expand.value?.openedRows ? expand.value.openedRows.some((openedRow) => compare(openedRow, row)) : false;\n    }\n    function toggleOpened(row) {\n      expand.value = {\n        openedRows: isExpanded(row) ? expand.value.openedRows.filter((v) => !compare(v, row)) : props.multipleExpand ? [...expand.value.openedRows, row] : [row],\n        row\n      };\n    }\n    function getAriaSort(column) {\n      if (!column.sortable) {\n        return void 0;\n      }\n      if (sort.value.column !== column.key) {\n        return \"none\";\n      }\n      if (sort.value.direction === \"asc\") {\n        return \"ascending\";\n      }\n      if (sort.value.direction === \"desc\") {\n        return \"descending\";\n      }\n      return void 0;\n    }\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      // eslint-disable-next-line vue/no-dupe-keys\n      sort,\n      // eslint-disable-next-line vue/no-dupe-keys\n      columns,\n      // eslint-disable-next-line vue/no-dupe-keys\n      rows,\n      selected,\n      indeterminate,\n      // eslint-disable-next-line vue/no-dupe-keys\n      emptyState,\n      // eslint-disable-next-line vue/no-dupe-keys\n      loadingState,\n      isAllRowChecked,\n      onChangeCheckbox,\n      isSelected,\n      onSort,\n      onSelect,\n      onContextmenu,\n      onChange,\n      getRowData,\n      toggleOpened,\n      getAriaSort,\n      isExpanded\n    };\n  }\n});\n</script>\n","<template>\n  <component\n    :is=\"$attrs.onSubmit ? 'form' : as\"\n    :class=\"cardClass\"\n    v-bind=\"attrs\"\n  >\n    <div v-if=\"$slots.header\" :class=\"[ui.header.base, ui.header.padding, ui.header.background]\">\n      <slot name=\"header\" />\n    </div>\n    <div v-if=\"$slots.default\" :class=\"[ui.body.base, ui.body.padding, ui.body.background]\">\n      <slot />\n    </div>\n    <div v-if=\"$slots.footer\" :class=\"[ui.footer.base, ui.footer.padding, ui.footer.background]\">\n      <slot name=\"footer\" />\n    </div>\n  </component>\n</template>\n\n<script>\nimport { computed, toRef, defineComponent } from \"vue\";\nimport { twJoin } from \"tailwind-merge\";\nimport { useUI } from \"../../composables/useUI\";\nimport { mergeConfig, twMerge } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { card } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.card, card);\nexport default defineComponent({\n  inheritAttrs: false,\n  props: {\n    as: {\n      type: String,\n      default: \"div\"\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props) {\n    const { ui, attrs } = useUI(\"card\", toRef(props, \"ui\"), config);\n    const cardClass = computed(() => {\n      return twMerge(twJoin(\n        ui.value.base,\n        ui.value.rounded,\n        ui.value.divide,\n        ui.value.ring,\n        ui.value.shadow,\n        ui.value.background\n      ), props.class);\n    });\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      cardClass\n    };\n  }\n});\n</script>\n","<template>\n  <component :is=\"as\" :class=\"containerClass\" v-bind=\"attrs\">\n    <slot />\n  </component>\n</template>\n\n<script>\nimport { computed, toRef, defineComponent } from \"vue\";\nimport { twJoin } from \"tailwind-merge\";\nimport { useUI } from \"../../composables/useUI\";\nimport { mergeConfig, twMerge } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { container } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.container, container);\nexport default defineComponent({\n  inheritAttrs: false,\n  props: {\n    as: {\n      type: String,\n      default: \"div\"\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props) {\n    const { ui, attrs } = useUI(\"container\", toRef(props, \"ui\"), config);\n    const containerClass = computed(() => {\n      return twMerge(twJoin(\n        ui.value.base,\n        ui.value.padding,\n        ui.value.constrained\n      ), props.class);\n    });\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      containerClass\n    };\n  }\n});\n</script>\n","<template>\n  <div :class=\"wrapperClass\" v-bind=\"attrs\">\n    <div :class=\"borderClass\" />\n\n    <template v-if=\"label || icon || avatar || $slots.default\">\n      <div :class=\"containerClass\">\n        <slot>\n          <span v-if=\"label\" :class=\"ui.label\">\n            {{ label }}\n          </span>\n          <UIcon v-else-if=\"icon\" :name=\"icon\" :class=\"ui.icon.base\" />\n          <UAvatar v-else-if=\"avatar\" v-bind=\"{ size: ui.avatar.size, ...avatar }\" :class=\"ui.avatar.base\" />\n        </slot>\n      </div>\n\n      <div :class=\"borderClass\" />\n    </template>\n  </div>\n</template>\n\n<script>\nimport { toRef, computed, defineComponent } from \"vue\";\nimport { twJoin } from \"tailwind-merge\";\nimport UIcon from \"../elements/Icon.vue\";\nimport UAvatar from \"../elements/Avatar.vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { mergeConfig, twMerge } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { divider } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.divider, divider);\nexport default defineComponent({\n  components: {\n    UIcon,\n    UAvatar\n  },\n  inheritAttrs: false,\n  props: {\n    label: {\n      type: String,\n      default: null\n    },\n    icon: {\n      type: String,\n      default: null\n    },\n    avatar: {\n      type: Object,\n      default: null\n    },\n    size: {\n      type: String,\n      default: () => config.default.size,\n      validator(value) {\n        return Object.keys(config.border.size.horizontal).includes(value) || Object.keys(config.border.size.vertical).includes(value);\n      }\n    },\n    orientation: {\n      type: String,\n      default: \"horizontal\",\n      validator: (value) => [\"horizontal\", \"vertical\"].includes(value)\n    },\n    type: {\n      type: String,\n      default: () => config.default.type,\n      validator: (value) => [\"solid\", \"dotted\", \"dashed\"].includes(value)\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props) {\n    const { ui, attrs } = useUI(\"divider\", toRef(props, \"ui\"), config);\n    const wrapperClass = computed(() => {\n      return twMerge(twJoin(\n        ui.value.wrapper.base,\n        ui.value.wrapper[props.orientation]\n      ), props.class);\n    });\n    const containerClass = computed(() => {\n      return twJoin(\n        ui.value.container.base,\n        ui.value.container[props.orientation]\n      );\n    });\n    const borderClass = computed(() => {\n      return twJoin(\n        ui.value.border.base,\n        ui.value.border[props.orientation],\n        ui.value.border.size[props.orientation][props.size],\n        ui.value.border.type[props.type]\n      );\n    });\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      wrapperClass,\n      containerClass,\n      borderClass\n    };\n  }\n});\n</script>\n","<template>\n  <component :is=\"as\" :class=\"skeletonClass\" v-bind=\"attrs\" />\n</template>\n\n<script>\nimport { computed, toRef, defineComponent } from \"vue\";\nimport { twJoin } from \"tailwind-merge\";\nimport { useUI } from \"../../composables/useUI\";\nimport { mergeConfig, twMerge } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { skeleton } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.skeleton, skeleton);\nexport default defineComponent({\n  inheritAttrs: false,\n  props: {\n    as: {\n      type: String,\n      default: \"div\"\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props) {\n    const { ui, attrs } = useUI(\"skeleton\", toRef(props, \"ui\"), config);\n    const skeletonClass = computed(() => {\n      return twMerge(twJoin(\n        ui.value.base,\n        ui.value.background,\n        ui.value.rounded\n      ), props.class);\n    });\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      skeletonClass\n    };\n  }\n});\n</script>\n","<template>\n  <nav aria-label=\"Breadcrumb\" :class=\"ui.wrapper\" v-bind=\"attrs\">\n    <ol :class=\"ui.ol\">\n      <li v-for=\"(link, index) in links\" :key=\"index\" :class=\"ui.li\">\n        <ULink\n          as=\"span\"\n          :class=\"[ui.base, index === links.length - 1 ? ui.active : !!link.to ? ui.inactive : '']\"\n          :aria-current=\"index === links.length - 1 ? 'page' : void 0\"\n          v-bind=\"getULinkProps(link)\"\n          @click=\"link.click\"\n        >\n          <slot name=\"icon\" :link=\"link\" :index=\"index\" :is-active=\"index === links.length - 1\">\n            <UIcon\n              v-if=\"link.icon\"\n              :name=\"link.icon\"\n              :class=\"twMerge(twJoin(ui.icon.base, index === links.length - 1 ? ui.icon.active : !!link.to ? ui.icon.inactive : ''), link.iconClass)\"\n            />\n          </slot>\n\n          <slot :link=\"link\" :index=\"index\" :is-active=\"index === links.length - 1\">\n            <span v-if=\"link.label\" :class=\"twMerge(ui.label, link.labelClass)\">{{ link.label }}</span>\n          </slot>\n        </ULink>\n\n        <slot v-if=\"index < links.length - 1\" name=\"divider\">\n          <template v-if=\"divider\">\n            <UIcon v-if=\"divider.startsWith('i-')\" :name=\"divider\" :class=\"ui.divider.base\" role=\"presentation\" />\n            <span v-else role=\"presentation\">{{ divider }}</span>\n          </template>\n        </slot>\n      </li>\n    </ol>\n  </nav>\n</template>\n\n<script>\nimport { defineComponent, toRef } from \"vue\";\nimport { twJoin } from \"tailwind-merge\";\nimport UIcon from \"../elements/Icon.vue\";\nimport ULink from \"../elements/Link.vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { getULinkProps, mergeConfig, twMerge } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { breadcrumb } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.breadcrumb, breadcrumb);\nexport default defineComponent({\n  components: {\n    UIcon,\n    ULink\n  },\n  inheritAttrs: false,\n  props: {\n    links: {\n      type: Array,\n      default: () => []\n    },\n    divider: {\n      type: String,\n      default: () => config.default.divider\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props) {\n    const { ui, attrs } = useUI(\"breadcrumb\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      getULinkProps,\n      twMerge,\n      twJoin\n    };\n  }\n});\n</script>\n","<template>\n  <HCombobox\n    :by=\"by\"\n    :model-value=\"modelValue\"\n    :multiple=\"multiple\"\n    :nullable=\"nullable\"\n    :class=\"ui.wrapper\"\n    v-bind=\"attrs\"\n    as=\"div\"\n    @update:model-value=\"onSelect\"\n  >\n    <div v-show=\"searchable\" :class=\"ui.input.wrapper\">\n      <UIcon v-if=\"iconName\" :name=\"iconName\" :class=\"iconClass\" aria-hidden=\"true\" />\n      <HComboboxInput\n        ref=\"comboboxInput\"\n        :value=\"query\"\n        :class=\"[ui.input.base, ui.input.size, ui.input.height, ui.input.padding, icon && ui.input.icon.padding, closeButton && ui.input.closeButton.padding]\"\n        :placeholder=\"placeholder\"\n        :aria-label=\"placeholder\"\n        autocomplete=\"off\"\n        @change=\"query = $event.target.value\"\n      />\n\n      <UButton v-if=\"closeButton\" aria-label=\"Close\" v-bind=\"{ ...ui.default.closeButton || {}, ...closeButton }\" :class=\"ui.input.closeButton.base\" @click=\"onClear\" />\n    </div>\n\n    <HComboboxOptions\n      v-if=\"groups.length\"\n      static\n      hold\n      as=\"div\"\n      aria-label=\"Commands\"\n      :class=\"ui.container\"\n    >\n      <CommandPaletteGroup\n        v-for=\"group of groups\"\n        :key=\"group.key\"\n        :query=\"query\"\n        :group=\"group\"\n        :group-attribute=\"groupAttribute\"\n        :command-attribute=\"commandAttribute\"\n        :selected-icon=\"selectedIcon\"\n        :ui=\"ui\"\n      >\n        <template v-for=\"(_, name) in $slots\" #[name]=\"slotData\">\n          <slot :name=\"name\" v-bind=\"slotData\" />\n        </template>\n      </CommandPaletteGroup>\n    </HComboboxOptions>\n\n    <template v-else-if=\"emptyState\">\n      <slot name=\"empty-state\">\n        <div :class=\"ui.emptyState.wrapper\">\n          <UIcon v-if=\"emptyState.icon\" :name=\"emptyState.icon\" :class=\"ui.emptyState.icon\" aria-hidden=\"true\" />\n          <p :class=\"query ? ui.emptyState.queryLabel : ui.emptyState.label\">\n            {{ query ? emptyState.queryLabel : emptyState.label }}\n          </p>\n        </div>\n      </slot>\n    </template>\n  </HCombobox>\n</template>\n\n<script>\nimport { ref, computed, watch, toRef, onMounted, defineComponent } from \"vue\";\nimport { Combobox as HCombobox, ComboboxInput as HComboboxInput, ComboboxOptions as HComboboxOptions, provideUseId } from \"@headlessui/vue\";\nimport { useDebounceFn } from \"@vueuse/core\";\nimport { useFuse } from \"@vueuse/integrations/useFuse\";\nimport { twJoin } from \"tailwind-merge\";\nimport { defu } from \"defu\";\nimport UIcon from \"../elements/Icon.vue\";\nimport UButton from \"../elements/Button.vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { mergeConfig } from \"../../utils\";\nimport CommandPaletteGroup from \"./CommandPaletteGroup.vue\";\nimport appConfig from \"#build/app.config\";\nimport { commandPalette } from \"#ui/ui.config\";\nimport { useId } from \"#imports\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.commandPalette, commandPalette);\nexport default defineComponent({\n  components: {\n    HCombobox,\n    HComboboxInput,\n    HComboboxOptions,\n    UIcon,\n    UButton,\n    CommandPaletteGroup\n  },\n  inheritAttrs: false,\n  props: {\n    modelValue: {\n      type: [String, Number, Object, Array],\n      default: null\n    },\n    by: {\n      type: String,\n      default: \"id\"\n    },\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    nullable: {\n      type: Boolean,\n      default: false\n    },\n    searchable: {\n      type: Boolean,\n      default: true\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    groups: {\n      type: Array,\n      default: () => []\n    },\n    icon: {\n      type: String,\n      default: () => config.default.icon\n    },\n    loadingIcon: {\n      type: String,\n      default: () => config.default.loadingIcon\n    },\n    selectedIcon: {\n      type: String,\n      default: () => config.default.selectedIcon\n    },\n    closeButton: {\n      type: Object,\n      default: () => config.default.closeButton\n    },\n    emptyState: {\n      type: Object,\n      default: () => config.default.emptyState\n    },\n    placeholder: {\n      type: String,\n      default: \"Search...\"\n    },\n    groupAttribute: {\n      type: String,\n      default: \"label\"\n    },\n    commandAttribute: {\n      type: String,\n      default: \"label\"\n    },\n    autoselect: {\n      type: Boolean,\n      default: true\n    },\n    autoclear: {\n      type: Boolean,\n      default: true\n    },\n    debounce: {\n      type: Number,\n      default: 200\n    },\n    fuse: {\n      type: Object,\n      default: () => ({})\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: [\"update:modelValue\", \"close\"],\n  setup(props, { emit, expose }) {\n    const { ui, attrs } = useUI(\"commandPalette\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const query = ref(\"\");\n    const comboboxInput = ref();\n    const comboboxApi = ref(null);\n    const isLoading = ref(false);\n    onMounted(() => {\n      if (props.autoselect) {\n        activateNextOption();\n      }\n    });\n    onMounted(() => {\n      setTimeout(() => {\n        const popoverProvides = comboboxInput.value?.$.provides;\n        if (!popoverProvides) {\n          return;\n        }\n        const popoverProvidesSymbols = Object.getOwnPropertySymbols(popoverProvides);\n        comboboxApi.value = popoverProvidesSymbols.length && popoverProvides[popoverProvidesSymbols[0]];\n      }, 200);\n    });\n    const options = computed(() => defu({}, props.fuse, {\n      fuseOptions: {\n        keys: [props.commandAttribute]\n      },\n      resultLimit: 12,\n      matchAllWhenSearchEmpty: true\n    }));\n    const commands = computed(() => {\n      const commands2 = [];\n      for (const group of props.groups) {\n        if (!group.search && !group.static) {\n          commands2.push(...group.commands?.map((command) => ({ ...command, group: group.key })) || []);\n        }\n      }\n      return commands2;\n    });\n    const searchResults = ref({});\n    const { results } = useFuse(query, commands, options);\n    function getGroupWithCommands(group, commands2) {\n      if (!group) {\n        return;\n      }\n      if (group.filter && typeof group.filter === \"function\") {\n        commands2 = group.filter(query.value, commands2);\n      }\n      return {\n        ...group,\n        commands: commands2.slice(0, options.value.resultLimit)\n      };\n    }\n    const groups = computed(() => {\n      if (!results.value) {\n        return [];\n      }\n      const groupedCommands = results.value.reduce((acc, command) => {\n        const { item, ...data } = command;\n        if (!item.group) {\n          return acc;\n        }\n        acc[item.group] ||= [];\n        acc[item.group].push({ ...item, ...data });\n        return acc;\n      }, {});\n      const groups2 = Object.entries(groupedCommands).map(([key, commands2]) => {\n        const group = props.groups.find((group2) => group2.key === key);\n        if (!group) {\n          return null;\n        }\n        return getGroupWithCommands(group, commands2);\n      }).filter(Boolean);\n      const searchGroups = props.groups.filter((group) => !!group.search && searchResults.value[group.key]?.length).map((group) => {\n        const commands2 = searchResults.value[group.key] || [];\n        return getGroupWithCommands(group, [...commands2]);\n      });\n      const staticGroups = props.groups.filter((group) => group.static && group.commands?.length).map((group) => {\n        return getGroupWithCommands(group, group.commands);\n      });\n      return [\n        ...groups2,\n        ...searchGroups,\n        ...staticGroups\n      ];\n    });\n    const debouncedSearch = useDebounceFn(async () => {\n      const searchableGroups = props.groups.filter((group) => !!group.search);\n      if (!searchableGroups.length) {\n        return;\n      }\n      isLoading.value = true;\n      await Promise.all(searchableGroups.map(async (group) => {\n        searchResults.value[group.key] = await group.search(query.value);\n      }));\n      isLoading.value = false;\n      activateFirstOption();\n    }, props.debounce);\n    watch(query, () => {\n      debouncedSearch();\n      activateFirstOption();\n    });\n    const iconName = computed(() => {\n      if ((props.loading || isLoading.value) && props.loadingIcon) {\n        return props.loadingIcon;\n      }\n      return props.icon;\n    });\n    const iconClass = computed(() => {\n      return twJoin(\n        ui.value.input.icon.base,\n        ui.value.input.icon.size,\n        (props.loading || isLoading.value) && props.loadingIcon && ui.value.input.icon.loading\n      );\n    });\n    const emptyState = computed(() => {\n      if (props.emptyState === null) return null;\n      return { ...ui.value.default.emptyState, ...props.emptyState };\n    });\n    function activateFirstOption() {\n      setTimeout(() => {\n        comboboxInput.value?.$el.dispatchEvent(new KeyboardEvent(\"keydown\", { key: \"PageUp\" }));\n      }, 0);\n    }\n    function activateNextOption() {\n      setTimeout(() => {\n        comboboxInput.value?.$el.dispatchEvent(new KeyboardEvent(\"keydown\", { key: \"ArrowDown\" }));\n      }, 0);\n    }\n    function onSelect(option) {\n      emit(\"update:modelValue\", option, { query: query.value });\n      if (props.autoclear) {\n        setTimeout(() => {\n          query.value = \"\";\n        }, 0);\n      }\n    }\n    function onClear() {\n      if (query.value) {\n        query.value = \"\";\n      } else {\n        emit(\"close\");\n      }\n    }\n    expose({\n      query,\n      updateQuery: (q) => {\n        query.value = q;\n      },\n      comboboxApi,\n      results\n    });\n    provideUseId(() => useId());\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      // eslint-disable-next-line vue/no-dupe-keys\n      groups,\n      comboboxInput,\n      query,\n      iconName,\n      iconClass,\n      // eslint-disable-next-line vue/no-dupe-keys\n      emptyState,\n      onSelect,\n      onClear\n    };\n  }\n});\n</script>\n","<template>\n  <div :class=\"ui.group.wrapper\">\n    <h2 v-if=\"label\" :class=\"ui.group.label\">\n      {{ label }}\n    </h2>\n\n    <div :class=\"ui.group.container\" :aria-label=\"group[groupAttribute]\">\n      <HComboboxOption\n        v-for=\"(command, index) of group.commands\"\n        :key=\"`${group.key}-${index}`\"\n        v-slot=\"{ active, selected }\"\n        :value=\"command\"\n        :disabled=\"command.disabled\"\n        as=\"template\"\n      >\n        <div :class=\"[ui.group.command.base, active ? ui.group.command.active : ui.group.command.inactive, command.disabled ? 'cursor-not-allowed' : 'cursor-pointer']\">\n          <div :class=\"ui.group.command.container\">\n            <slot :name=\"`${group.key}-icon`\" :group=\"group\" :command=\"command\" :active=\"active\" :selected=\"selected\">\n              <UIcon v-if=\"command.icon\" :name=\"command.icon\" :class=\"[ui.group.command.icon.base, active ? ui.group.command.icon.active : ui.group.command.icon.inactive, command.iconClass]\" aria-hidden=\"true\" />\n              <UAvatar\n                v-else-if=\"command.avatar\"\n                v-bind=\"{ size: ui.group.command.avatar.size, ...command.avatar }\"\n                :class=\"ui.group.command.avatar.base\"\n                aria-hidden=\"true\"\n              />\n              <span v-else-if=\"command.chip\" :class=\"ui.group.command.chip.base\" :style=\"{ background: `#${command.chip}` }\" />\n            </slot>\n\n            <div :class=\"[ui.group.command.label, command.disabled && ui.group.command.disabled]\">\n              <slot :name=\"`${group.key}-command`\" :group=\"group\" :command=\"command\" :active=\"active\" :selected=\"selected\">\n                <span v-if=\"command.prefix\" class=\"flex-shrink-0\" :class=\"command.prefixClass || ui.group.command.prefix\">{{ command.prefix }}</span>\n\n                <span class=\"truncate\" :class=\"{ 'flex-none': command.suffix || command.matches?.length }\">{{ command[commandAttribute] }}</span>\n\n                <!-- eslint-disable-next-line vue/no-v-html -->\n                <span v-if=\"command.matches?.length\" class=\"truncate\" :class=\"command.suffixClass || ui.group.command.suffix\" v-html=\"highlight(command[commandAttribute], command.matches[0])\" />\n                <span v-else-if=\"command.suffix\" class=\"truncate\" :class=\"command.suffixClass || ui.group.command.suffix\">{{ command.suffix }}</span>\n              </slot>\n            </div>\n          </div>\n\n          <UIcon v-if=\"selected\" :name=\"selectedIcon\" :class=\"ui.group.command.selectedIcon.base\" aria-hidden=\"true\" />\n          <slot\n            v-else-if=\"active && (group.active || $slots[`${group.key}-active`])\"\n            :name=\"`${group.key}-active`\"\n            :group=\"group\"\n            :command=\"command\"\n            :active=\"active\"\n            :selected=\"selected\"\n          >\n            <span v-if=\"group.active\" :class=\"ui.group.active\">{{ group.active }}</span>\n          </slot>\n          <slot\n            v-else\n            :name=\"`${group.key}-inactive`\"\n            :group=\"group\"\n            :command=\"command\"\n            :active=\"active\"\n            :selected=\"selected\"\n          >\n            <span v-if=\"command.shortcuts?.length\" :class=\"ui.group.command.shortcuts\">\n              <UKbd v-for=\"shortcut of command.shortcuts\" :key=\"shortcut\">{{ shortcut }}</UKbd>\n            </span>\n            <span v-else-if=\"!command.disabled && group.inactive\" :class=\"ui.group.inactive\">{{ group.inactive }}</span>\n          </slot>\n        </div>\n      </HComboboxOption>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { computed, defineComponent } from \"vue\";\nimport { ComboboxOption as HComboboxOption, provideUseId } from \"@headlessui/vue\";\nimport UIcon from \"../elements/Icon.vue\";\nimport UAvatar from \"../elements/Avatar.vue\";\nimport UKbd from \"../elements/Kbd.vue\";\nimport { useId } from \"#imports\";\nexport default defineComponent({\n  components: {\n    HComboboxOption,\n    UIcon,\n    UAvatar,\n    UKbd\n  },\n  props: {\n    group: {\n      type: Object,\n      required: true\n    },\n    query: {\n      type: String,\n      default: \"\"\n    },\n    groupAttribute: {\n      type: String,\n      required: true\n    },\n    commandAttribute: {\n      type: String,\n      required: true\n    },\n    selectedIcon: {\n      type: String,\n      required: true\n    },\n    ui: {\n      type: Object,\n      required: true\n    }\n  },\n  setup(props) {\n    const label = computed(() => {\n      const label2 = props.group[props.groupAttribute];\n      return typeof label2 === \"function\" ? label2(props.query) : label2;\n    });\n    function highlight(text, { indices, value }) {\n      if (text === value) {\n        return \"\";\n      }\n      let content = \"\";\n      let nextUnhighlightedIndiceStartingIndex = 0;\n      indices.forEach((indice) => {\n        const lastIndiceNextIndex = indice[1] + 1;\n        const isMatched = lastIndiceNextIndex - indice[0] >= props.query.length;\n        content += [\n          value.substring(nextUnhighlightedIndiceStartingIndex, indice[0]),\n          isMatched && \"<mark>\",\n          value.substring(indice[0], lastIndiceNextIndex),\n          isMatched && \"</mark>\"\n        ].filter(Boolean).join(\"\");\n        nextUnhighlightedIndiceStartingIndex = lastIndiceNextIndex;\n      });\n      content += value.substring(nextUnhighlightedIndiceStartingIndex);\n      const index = content.indexOf(\"<mark>\");\n      if (index > 60) {\n        content = `...${content.substring(index - 60)}`;\n      }\n      return content;\n    }\n    provideUseId(() => useId());\n    return {\n      label,\n      highlight\n    };\n  }\n});\n</script>\n\n<style>\nmark{@apply bg-primary-400}\n</style>\n","<template>\n  <nav :class=\"ui.wrapper\" v-bind=\"attrs\">\n    <ul v-for=\"(section, sectionIndex) of sections\" :key=\"`section${sectionIndex}`\" :class=\"ui.container\">\n      <li v-for=\"(link, index) of section\" :key=\"`section${sectionIndex}-${index}`\" :class=\"ui.inner\">\n        <ULink\n          v-slot=\"{ isActive }\"\n          v-bind=\"getULinkProps(link)\"\n          :class=\"[ui.base, ui.before, ui.after]\"\n          :active-class=\"ui.active\"\n          :inactive-class=\"ui.inactive\"\n          @click=\"link.click\"\n          @keyup.enter=\"$event.target.blur()\"\n        >\n          <slot name=\"avatar\" :link=\"link\" :is-active=\"isActive\">\n            <UAvatar\n              v-if=\"link.avatar\"\n              v-bind=\"{ size: ui.avatar.size, ...link.avatar }\"\n              :class=\"[ui.avatar.base]\"\n            />\n          </slot>\n          <slot name=\"icon\" :link=\"link\" :is-active=\"isActive\">\n            <UIcon\n              v-if=\"link.icon\"\n              :name=\"link.icon\"\n              :class=\"twMerge(twJoin(ui.icon.base, isActive ? ui.icon.active : ui.icon.inactive), link.iconClass)\"\n            />\n          </slot>\n          <slot :link=\"link\" :is-active=\"isActive\">\n            <span v-if=\"link.label\" :class=\"twMerge(ui.label, link.labelClass)\">\n              <span v-if=\"isActive\" class=\"sr-only\">\n                Current page:\n              </span>\n              {{ link.label }}\n            </span>\n          </slot>\n          <slot name=\"badge\" :link=\"link\" :is-active=\"isActive\">\n            <UBadge\n              v-if=\"link.badge\"\n              v-bind=\"{\n  size: ui.badge.size,\n  color: ui.badge.color,\n  variant: ui.badge.variant,\n  ...typeof link.badge === 'string' || typeof link.badge === 'number' ? { label: link.badge } : link.badge\n}\"\n              :class=\"ui.badge.base\"\n            />\n          </slot>\n        </ULink>\n      </li>\n    </ul>\n  </nav>\n</template>\n\n<script>\nimport { toRef, defineComponent, computed } from \"vue\";\nimport { twJoin } from \"tailwind-merge\";\nimport UIcon from \"../elements/Icon.vue\";\nimport UAvatar from \"../elements/Avatar.vue\";\nimport UBadge from \"../elements/Badge.vue\";\nimport ULink from \"../elements/Link.vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { getULinkProps, mergeConfig, twMerge } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { horizontalNavigation } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.horizontalNavigation, horizontalNavigation);\nexport default defineComponent({\n  components: {\n    UIcon,\n    UAvatar,\n    UBadge,\n    ULink\n  },\n  inheritAttrs: false,\n  props: {\n    links: {\n      type: Array,\n      default: () => []\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props) {\n    const { ui, attrs } = useUI(\"horizontalNavigation\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const sections = computed(() => Array.isArray(props.links[0]) ? props.links : [props.links]);\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      sections,\n      getULinkProps,\n      twMerge,\n      twJoin\n    };\n  }\n});\n</script>\n","<template>\n  <div :class=\"ui.wrapper\" v-bind=\"attrs\">\n    <slot name=\"first\" :on-click=\"onClickFirst\" :can-go-first=\"canGoFirstOrPrev\">\n      <UButton\n        v-if=\"firstButton && showFirst\"\n        :size=\"size\"\n        :to=\"to?.(1)\"\n        :disabled=\"!canGoFirstOrPrev || disabled\"\n        :class=\"[ui.base, ui.rounded]\"\n        v-bind=\"{ ...ui.default.firstButton || {}, ...firstButton }\"\n        :ui=\"{ rounded: '' }\"\n        aria-label=\"First\"\n        @click=\"onClickFirst\"\n      />\n    </slot>\n\n    <slot name=\"prev\" :on-click=\"onClickPrev\" :can-go-prev=\"canGoFirstOrPrev\">\n      <UButton\n        v-if=\"prevButton\"\n        :size=\"size\"\n        :to=\"to?.(currentPage - 1)\"\n        :disabled=\"!canGoFirstOrPrev || disabled\"\n        :class=\"[ui.base, ui.rounded]\"\n        v-bind=\"{ ...ui.default.prevButton || {}, ...prevButton }\"\n        :ui=\"{ rounded: '' }\"\n        aria-label=\"Prev\"\n        @click=\"onClickPrev\"\n      />\n    </slot>\n\n    <UButton\n      v-for=\"(page, index) of displayedPages\"\n      :key=\"`${page}-${index}`\"\n      :to=\"typeof page === 'number' ? to?.(page) : null\"\n      :size=\"size\"\n      :disabled=\"disabled\"\n      :label=\"`${page}`\"\n      v-bind=\"page === currentPage ? { ...ui.default.activeButton || {}, ...activeButton } : { ...ui.default.inactiveButton || {}, ...inactiveButton }\"\n      :class=\"[{ 'pointer-events-none': typeof page === 'string', 'z-[1]': page === currentPage }, ui.base, ui.rounded]\"\n      :ui=\"{ rounded: '' }\"\n      @click=\"() => onClickPage(page)\"\n    />\n\n    <slot name=\"next\" :on-click=\"onClickNext\" :can-go-next=\"canGoLastOrNext\">\n      <UButton\n        v-if=\"nextButton\"\n        :size=\"size\"\n        :to=\"to?.(currentPage + 1)\"\n        :disabled=\"!canGoLastOrNext || disabled\"\n        :class=\"[ui.base, ui.rounded]\"\n        v-bind=\"{ ...ui.default.nextButton || {}, ...nextButton }\"\n        :ui=\"{ rounded: '' }\"\n        aria-label=\"Next\"\n        @click=\"onClickNext\"\n      />\n    </slot>\n\n    <slot name=\"last\" :on-click=\"onClickLast\" :can-go-last=\"canGoLastOrNext\">\n      <UButton\n        v-if=\"lastButton && showLast\"\n        :size=\"size\"\n        :to=\"to?.(pages.length)\"\n        :disabled=\"!canGoLastOrNext || disabled\"\n        :class=\"[ui.base, ui.rounded]\"\n        v-bind=\"{ ...ui.default.lastButton || {}, ...lastButton }\"\n        :ui=\"{ rounded: '' }\"\n        aria-label=\"Last\"\n        @click=\"onClickLast\"\n      />\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { computed, toRef, defineComponent } from \"vue\";\nimport UButton from \"../elements/Button.vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { mergeConfig } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { pagination, button } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.pagination, pagination);\nconst buttonConfig = mergeConfig(appConfig.ui.strategy, appConfig.ui.button, button);\nexport default defineComponent({\n  components: {\n    UButton\n  },\n  inheritAttrs: false,\n  props: {\n    modelValue: {\n      type: Number,\n      required: true\n    },\n    pageCount: {\n      type: Number,\n      default: 10\n    },\n    total: {\n      type: Number,\n      required: true\n    },\n    max: {\n      type: Number,\n      default: 7,\n      validate(value) {\n        return value >= 5 && value < Number.MAX_VALUE;\n      }\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    size: {\n      type: String,\n      default: () => config.default.size,\n      validator(value) {\n        return Object.keys(buttonConfig.size).includes(value);\n      }\n    },\n    to: {\n      type: Function,\n      default: null\n    },\n    activeButton: {\n      type: Object,\n      default: () => config.default.activeButton\n    },\n    inactiveButton: {\n      type: Object,\n      default: () => config.default.inactiveButton\n    },\n    showFirst: {\n      type: Boolean,\n      default: false\n    },\n    showLast: {\n      type: Boolean,\n      default: false\n    },\n    firstButton: {\n      type: Object,\n      default: () => config.default.firstButton\n    },\n    lastButton: {\n      type: Object,\n      default: () => config.default.lastButton\n    },\n    prevButton: {\n      type: Object,\n      default: () => config.default.prevButton\n    },\n    nextButton: {\n      type: Object,\n      default: () => config.default.nextButton\n    },\n    divider: {\n      type: String,\n      default: \"\\u2026\"\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: [\"update:modelValue\"],\n  setup(props, { emit }) {\n    const { ui, attrs } = useUI(\"pagination\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const currentPage = computed({\n      get() {\n        return props.modelValue;\n      },\n      set(value) {\n        emit(\"update:modelValue\", value);\n      }\n    });\n    const pages = computed(() => Array.from({ length: Math.ceil(props.total / props.pageCount) }, (_, i) => i + 1));\n    const displayedPages = computed(() => {\n      const totalPages = pages.value.length;\n      const current = currentPage.value;\n      const maxDisplayedPages = Math.max(props.max, 5);\n      const r = Math.floor((Math.min(maxDisplayedPages, totalPages) - 5) / 2);\n      const r1 = current - r;\n      const r2 = current + r;\n      const beforeWrapped = r1 - 1 > 1;\n      const afterWrapped = r2 + 1 < totalPages;\n      const items = [];\n      if (totalPages <= maxDisplayedPages) {\n        for (let i = 1; i <= totalPages; i++) {\n          items.push(i);\n        }\n        return items;\n      }\n      items.push(1);\n      if (beforeWrapped) items.push(props.divider);\n      if (!afterWrapped) {\n        const addedItems = current + r + 2 - totalPages;\n        for (let i = current - r - addedItems; i <= current - r - 1; i++) {\n          items.push(i);\n        }\n      }\n      for (let i = Math.max(2, r1); i <= Math.min(totalPages, r2); i++) {\n        items.push(i);\n      }\n      if (!beforeWrapped) {\n        const addedItems = 1 - (current - r - 2);\n        for (let i = current + r + 1; i <= current + r + addedItems; i++) {\n          items.push(i);\n        }\n      }\n      if (afterWrapped) items.push(props.divider);\n      if (r2 < totalPages) {\n        items.push(totalPages);\n      }\n      if (items.length >= 3 && items[1] === props.divider && items[2] === 3) {\n        items[1] = 2;\n      }\n      if (items.length >= 3 && items[items.length - 2] === props.divider && items[items.length - 1] === items.length) {\n        items[items.length - 2] = items.length - 1;\n      }\n      return items;\n    });\n    const canGoFirstOrPrev = computed(() => currentPage.value > 1);\n    const canGoLastOrNext = computed(() => currentPage.value < pages.value.length);\n    function onClickFirst() {\n      if (!canGoFirstOrPrev.value) {\n        return;\n      }\n      currentPage.value = 1;\n    }\n    function onClickLast() {\n      if (!canGoLastOrNext.value) {\n        return;\n      }\n      currentPage.value = pages.value.length;\n    }\n    function onClickPage(page) {\n      if (typeof page === \"string\") {\n        return;\n      }\n      currentPage.value = page;\n    }\n    function onClickPrev() {\n      if (!canGoFirstOrPrev.value) {\n        return;\n      }\n      currentPage.value--;\n    }\n    function onClickNext() {\n      if (!canGoLastOrNext.value) {\n        return;\n      }\n      currentPage.value++;\n    }\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      currentPage,\n      pages,\n      displayedPages,\n      canGoLastOrNext,\n      canGoFirstOrPrev,\n      onClickPrev,\n      onClickNext,\n      onClickPage,\n      onClickFirst,\n      onClickLast\n    };\n  }\n});\n</script>\n","<template>\n  <HTabGroup\n    :vertical=\"orientation === 'vertical'\"\n    :selected-index=\"selectedIndex\"\n    as=\"div\"\n    :class=\"ui.wrapper\"\n    v-bind=\"attrs\"\n    @change=\"onChange\"\n  >\n    <HTabList\n      ref=\"listRef\"\n      :class=\"[ui.list.base, ui.list.background, ui.list.rounded, ui.list.shadow, ui.list.padding, ui.list.width, orientation === 'horizontal' && ui.list.height, orientation === 'horizontal' && 'inline-grid items-center']\"\n      :style=\"[orientation === 'horizontal' && `grid-template-columns: repeat(${items.length}, minmax(0, 1fr))`]\"\n    >\n      <div ref=\"markerRef\" :class=\"ui.list.marker.wrapper\">\n        <div :class=\"[ui.list.marker.base, ui.list.marker.background, ui.list.marker.rounded, ui.list.marker.shadow]\" />\n      </div>\n\n      <HTab\n        v-for=\"(item, index) of items\"\n        :key=\"index\"\n        ref=\"itemRefs\"\n        v-slot=\"{ selected, disabled }\"\n        :disabled=\"item.disabled\"\n        as=\"template\"\n      >\n        <button :aria-label=\"item.ariaLabel\" :class=\"[ui.list.tab.base, ui.list.tab.background, ui.list.tab.height, ui.list.tab.padding, ui.list.tab.size, ui.list.tab.font, ui.list.tab.rounded, ui.list.tab.shadow, selected ? ui.list.tab.active : ui.list.tab.inactive]\">\n          <slot\n            name=\"icon\"\n            :item=\"item\"\n            :index=\"index\"\n            :selected=\"selected\"\n            :disabled=\"disabled\"\n          >\n            <UIcon v-if=\"item.icon\" :name=\"item.icon\" :class=\"ui.list.tab.icon\" />\n          </slot>\n\n          <slot :item=\"item\" :index=\"index\" :selected=\"selected\" :disabled=\"disabled\">\n            <span class=\"truncate\">{{ item.label }}</span>\n          </slot>\n        </button>\n      </HTab>\n    </HTabList>\n\n    <HTabPanels v-if=\"content\" :class=\"ui.container\">\n      <HTabPanel v-for=\"(item, index) of items\" :key=\"index\" v-slot=\"{ selected }\" :class=\"ui.base\" :unmount=\"unmount\">\n        <slot :name=\"item.slot || 'item'\" :item=\"item\" :index=\"index\" :selected=\"selected\">\n          {{ item.content }}\n        </slot>\n      </HTabPanel>\n    </HTabPanels>\n  </HTabGroup>\n</template>\n\n<script>\nimport { toRef, ref, watch, onMounted, defineComponent, nextTick } from \"vue\";\nimport { TabGroup as HTabGroup, TabList as HTabList, Tab as HTab, TabPanels as HTabPanels, TabPanel as HTabPanel, provideUseId } from \"@headlessui/vue\";\nimport { useResizeObserver } from \"@vueuse/core\";\nimport UIcon from \"../elements/Icon.vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { mergeConfig } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { tabs } from \"#ui/ui.config\";\nimport { useId } from \"#imports\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.tabs, tabs);\nexport default defineComponent({\n  components: {\n    UIcon,\n    HTabGroup,\n    HTabList,\n    HTab,\n    HTabPanels,\n    HTabPanel\n  },\n  inheritAttrs: false,\n  props: {\n    modelValue: {\n      type: Number,\n      default: void 0\n    },\n    orientation: {\n      type: String,\n      default: \"horizontal\",\n      validator: (value) => [\"horizontal\", \"vertical\"].includes(value)\n    },\n    defaultIndex: {\n      type: Number,\n      default: 0\n    },\n    items: {\n      type: Array,\n      default: () => []\n    },\n    unmount: {\n      type: Boolean,\n      default: false\n    },\n    content: {\n      type: Boolean,\n      default: true\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: [\"update:modelValue\", \"change\"],\n  setup(props, { emit }) {\n    const { ui, attrs } = useUI(\"tabs\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const listRef = ref();\n    const itemRefs = ref([]);\n    const markerRef = ref();\n    const selectedIndex = ref(props.modelValue || props.defaultIndex);\n    function calcMarkerSize(index) {\n      const tab = itemRefs.value[index]?.$el;\n      if (!tab) {\n        return;\n      }\n      if (!markerRef.value) {\n        return;\n      }\n      markerRef.value.style.top = `${tab.offsetTop}px`;\n      markerRef.value.style.left = `${tab.offsetLeft}px`;\n      markerRef.value.style.width = `${tab.offsetWidth}px`;\n      markerRef.value.style.height = `${tab.offsetHeight}px`;\n    }\n    function onChange(index) {\n      selectedIndex.value = index;\n      emit(\"change\", index);\n      if (props.modelValue !== void 0) {\n        emit(\"update:modelValue\", selectedIndex.value);\n      }\n      calcMarkerSize(selectedIndex.value);\n    }\n    useResizeObserver(listRef, () => {\n      calcMarkerSize(selectedIndex.value);\n    });\n    watch(() => props.modelValue, (value) => {\n      selectedIndex.value = value;\n      calcMarkerSize(selectedIndex.value);\n    });\n    watch(() => props.items, async () => {\n      await nextTick();\n      calcMarkerSize(selectedIndex.value);\n    }, { deep: true });\n    onMounted(async () => {\n      await nextTick();\n      calcMarkerSize(selectedIndex.value);\n    });\n    provideUseId(() => useId());\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      listRef,\n      itemRefs,\n      markerRef,\n      selectedIndex,\n      onChange\n    };\n  }\n});\n</script>\n","<template>\n  <nav :class=\"ui.wrapper\" v-bind=\"attrs\">\n    <ul v-for=\"(section, sectionIndex) of sections\" :key=\"`section${sectionIndex}`\">\n      <li v-for=\"(link, index) of section\" :key=\"`section${sectionIndex}-${index}`\">\n        <ULink\n          v-slot=\"{ isActive }\"\n          v-bind=\"getULinkProps(link)\"\n          :class=\"[ui.base, ui.padding, ui.width, ui.ring, ui.rounded, ui.font, ui.size]\"\n          :active-class=\"ui.active\"\n          :inactive-class=\"ui.inactive\"\n          @click=\"link.click\"\n          @keyup.enter=\"$event.target.blur()\"\n        >\n          <slot name=\"avatar\" :link=\"link\" :is-active=\"isActive\">\n            <UAvatar\n              v-if=\"link.avatar\"\n              v-bind=\"{ size: ui.avatar.size, ...link.avatar }\"\n              :class=\"[ui.avatar.base]\"\n            />\n          </slot>\n          <slot name=\"icon\" :link=\"link\" :is-active=\"isActive\">\n            <UIcon\n              v-if=\"link.icon\"\n              :name=\"link.icon\"\n              :class=\"twMerge(twJoin(ui.icon.base, isActive ? ui.icon.active : ui.icon.inactive), link.iconClass)\"\n            />\n          </slot>\n          <slot :link=\"link\" :is-active=\"isActive\">\n            <span v-if=\"link.label\" :class=\"twMerge(ui.label, link.labelClass)\">\n              <span v-if=\"isActive\" class=\"sr-only\">\n                Current page:\n              </span>\n              {{ link.label }}\n            </span>\n          </slot>\n          <slot name=\"badge\" :link=\"link\" :is-active=\"isActive\">\n            <UBadge\n              v-if=\"link.badge\"\n              v-bind=\"{\n  size: ui.badge.size,\n  color: ui.badge.color,\n  variant: ui.badge.variant,\n  ...typeof link.badge === 'string' || typeof link.badge === 'number' ? { label: link.badge } : link.badge\n}\"\n              :class=\"ui.badge.base\"\n            />\n          </slot>\n        </ULink>\n      </li>\n      <UDivider v-if=\"sectionIndex < sections.length - 1\" :ui=\"ui.divider\" />\n    </ul>\n  </nav>\n</template>\n\n<script>\nimport { toRef, defineComponent, computed } from \"vue\";\nimport { twJoin } from \"tailwind-merge\";\nimport UIcon from \"../elements/Icon.vue\";\nimport UAvatar from \"../elements/Avatar.vue\";\nimport UBadge from \"../elements/Badge.vue\";\nimport ULink from \"../elements/Link.vue\";\nimport UDivider from \"../layout/Divider.vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { getULinkProps, mergeConfig, twMerge } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { verticalNavigation } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.verticalNavigation, verticalNavigation);\nexport default defineComponent({\n  components: {\n    UIcon,\n    UAvatar,\n    UBadge,\n    ULink,\n    UDivider\n  },\n  inheritAttrs: false,\n  props: {\n    links: {\n      type: Array,\n      default: () => []\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props) {\n    const { ui, attrs } = useUI(\"verticalNavigation\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const sections = computed(() => Array.isArray(props.links[0]) ? props.links : [props.links]);\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      sections,\n      getULinkProps,\n      twMerge,\n      twJoin\n    };\n  }\n});\n</script>\n","<template>\n  <div v-if=\"isOpen\" ref=\"container\" :class=\"wrapperClass\" v-bind=\"attrs\">\n    <Transition appear v-bind=\"ui.transition\">\n      <div>\n        <div v-if=\"popper.arrow\" data-popper-arrow :class=\"Object.values(ui.arrow)\" />\n\n        <div :class=\"[ui.base, ui.ring, ui.rounded, ui.shadow, ui.background]\">\n          <slot />\n        </div>\n      </div>\n    </Transition>\n  </div>\n</template>\n\n<script>\nimport { computed, toRef, defineComponent } from \"vue\";\nimport { defu } from \"defu\";\nimport { onClickOutside } from \"@vueuse/core\";\nimport { twJoin } from \"tailwind-merge\";\nimport { useUI } from \"../../composables/useUI\";\nimport { usePopper } from \"../../composables/usePopper\";\nimport { mergeConfig, twMerge } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { contextMenu } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.contextMenu, contextMenu);\nexport default defineComponent({\n  inheritAttrs: false,\n  props: {\n    modelValue: {\n      type: Boolean,\n      default: false\n    },\n    virtualElement: {\n      type: Object,\n      required: true\n    },\n    popper: {\n      type: Object,\n      default: () => ({})\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: [\"update:modelValue\", \"close\"],\n  setup(props, { emit }) {\n    const { ui, attrs } = useUI(\"contextMenu\", toRef(props, \"ui\"), config);\n    const popper = computed(() => defu({}, props.popper, ui.value.popper));\n    const isOpen = computed({\n      get() {\n        return props.modelValue;\n      },\n      set(value) {\n        emit(\"update:modelValue\", value);\n      }\n    });\n    const virtualElement = toRef(props, \"virtualElement\");\n    const [, container] = usePopper(popper.value, virtualElement);\n    const wrapperClass = computed(() => {\n      return twMerge(twJoin(\n        ui.value.container,\n        ui.value.width\n      ), props.class);\n    });\n    onClickOutside(container, () => {\n      isOpen.value = false;\n    });\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      isOpen,\n      wrapperClass,\n      // eslint-disable-next-line vue/no-dupe-keys\n      popper,\n      container\n    };\n  }\n});\n</script>\n","<template>\n  <TransitionRoot :appear=\"appear\" :show=\"isOpen\" as=\"template\" @after-leave=\"onAfterLeave\">\n    <HDialog :class=\"ui.wrapper\" v-bind=\"attrs\" @close=\"close\">\n      <TransitionChild v-if=\"overlay\" as=\"template\" :appear=\"appear\" v-bind=\"ui.overlay.transition\" :class=\"ui.overlay.transition.enterFrom\">\n        <div :class=\"[ui.overlay.base, ui.overlay.background]\" />\n      </TransitionChild>\n\n      <div :class=\"ui.inner\">\n        <div :class=\"[ui.container, !fullscreen && ui.padding]\">\n          <TransitionChild as=\"template\" :appear=\"appear\" v-bind=\"transitionClass\" :class=\"transitionClass.enterFrom\">\n            <HDialogPanel\n              :class=\"[\n  ui.base,\n  ui.background,\n  ui.ring,\n  ui.shadow,\n  fullscreen ? ui.fullscreen : [ui.width, ui.height, ui.rounded, ui.margin]\n]\"\n            >\n              <slot />\n            </HDialogPanel>\n          </TransitionChild>\n        </div>\n      </div>\n    </HDialog>\n  </TransitionRoot>\n</template>\n\n<script>\nimport { computed, toRef, defineComponent } from \"vue\";\nimport { Dialog as HDialog, DialogPanel as HDialogPanel, TransitionRoot, TransitionChild, provideUseId } from \"@headlessui/vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { mergeConfig } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { modal } from \"#ui/ui.config\";\nimport { useId } from \"#imports\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.modal, modal);\nexport default defineComponent({\n  components: {\n    HDialog,\n    HDialogPanel,\n    TransitionRoot,\n    TransitionChild\n  },\n  inheritAttrs: false,\n  props: {\n    modelValue: {\n      type: Boolean,\n      default: false\n    },\n    appear: {\n      type: Boolean,\n      default: false\n    },\n    overlay: {\n      type: Boolean,\n      default: true\n    },\n    transition: {\n      type: Boolean,\n      default: true\n    },\n    preventClose: {\n      type: Boolean,\n      default: false\n    },\n    fullscreen: {\n      type: Boolean,\n      default: false\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: [\"update:modelValue\", \"close\", \"close-prevented\", \"after-leave\"],\n  setup(props, { emit }) {\n    const { ui, attrs } = useUI(\"modal\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const isOpen = computed({\n      get() {\n        return props.modelValue;\n      },\n      set(value) {\n        emit(\"update:modelValue\", value);\n      }\n    });\n    const transitionClass = computed(() => {\n      if (!props.transition) {\n        return {};\n      }\n      return {\n        ...ui.value.transition\n      };\n    });\n    function close(value) {\n      if (props.preventClose) {\n        emit(\"close-prevented\");\n        return;\n      }\n      isOpen.value = value;\n      emit(\"close\");\n    }\n    const onAfterLeave = () => {\n      emit(\"after-leave\");\n    };\n    provideUseId(() => useId());\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      isOpen,\n      transitionClass,\n      onAfterLeave,\n      close\n    };\n  }\n});\n</script>\n","import { createElementBlock, defineComponent } from \"vue\";\nexport default defineComponent({\n  name: \"ServerPlaceholder\",\n  render() {\n    return createElementBlock(\"div\");\n  }\n});\n","<template>\n  <Transition appear v-bind=\"ui.transition\">\n    <div\n      :class=\"wrapperClass\"\n      role=\"status\"\n      v-bind=\"attrs\"\n      @mouseover=\"onMouseover\"\n      @mouseleave=\"onMouseleave\"\n    >\n      <div :class=\"[ui.container, ui.rounded, ui.ring]\">\n        <div class=\"flex\" :class=\"[ui.padding, ui.gap, { 'items-start': description || $slots.description, 'items-center': !description && !$slots.description }]\">\n          <UIcon v-if=\"icon\" :name=\"icon\" :class=\"iconClass\" />\n          <UAvatar v-if=\"avatar\" v-bind=\"{ size: ui.avatar.size, ...avatar }\" :class=\"ui.avatar.base\" />\n\n          <div :class=\"ui.inner\">\n            <p v-if=\"title || $slots.title\" :class=\"ui.title\">\n              <slot name=\"title\" :title=\"title\">\n                {{ title }}\n              </slot>\n            </p>\n            <div v-if=\"description || $slots.description\" :class=\"twMerge(ui.description, !title && !$slots.title && ui.descriptionOnly)\">\n              <slot name=\"description\" :description=\"description\">\n                {{ description }}\n              </slot>\n            </div>\n\n            <div v-if=\"(description || $slots.description) && actions.length\" :class=\"ui.actions\">\n              <UButton v-for=\"(action, index) of actions\" :key=\"index\" v-bind=\"{ ...ui.default.actionButton || {}, ...action }\" @click.stop=\"onAction(action)\" />\n            </div>\n          </div>\n          <div v-if=\"closeButton || !description && !$slots.description && actions.length\" :class=\"twMerge(ui.actions, 'mt-0')\">\n            <template v-if=\"!description && !$slots.description && actions.length\">\n              <UButton v-for=\"(action, index) of actions\" :key=\"index\" v-bind=\"{ ...ui.default.actionButton || {}, ...action }\" @click.stop=\"onAction(action)\" />\n            </template>\n\n            <UButton v-if=\"closeButton\" aria-label=\"Close\" v-bind=\"{ ...ui.default.closeButton || {}, ...closeButton }\" @click.stop=\"onClose\" />\n          </div>\n        </div>\n        <div v-if=\"timeout\" :class=\"progressClass\" :style=\"progressStyle\" />\n      </div>\n    </div>\n  </Transition>\n</template>\n\n<script>\nimport { ref, computed, toRef, onMounted, onUnmounted, watch, watchEffect, defineComponent } from \"vue\";\nimport { twJoin } from \"tailwind-merge\";\nimport UIcon from \"../elements/Icon.vue\";\nimport UAvatar from \"../elements/Avatar.vue\";\nimport UButton from \"../elements/Button.vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { useTimer } from \"../../composables/useTimer\";\nimport { mergeConfig, twMerge } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { notification } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.notification, notification);\nexport default defineComponent({\n  components: {\n    UIcon,\n    UAvatar,\n    UButton\n  },\n  inheritAttrs: false,\n  props: {\n    id: {\n      type: [String, Number],\n      required: true\n    },\n    title: {\n      type: String,\n      default: null\n    },\n    description: {\n      type: String,\n      default: null\n    },\n    icon: {\n      type: String,\n      default: () => config.default.icon\n    },\n    avatar: {\n      type: Object,\n      default: null\n    },\n    closeButton: {\n      type: Object,\n      default: () => config.default.closeButton\n    },\n    timeout: {\n      type: Number,\n      default: () => config.default.timeout\n    },\n    actions: {\n      type: Array,\n      default: () => []\n    },\n    callback: {\n      type: Function,\n      default: null\n    },\n    color: {\n      type: String,\n      default: () => config.default.color,\n      validator(value) {\n        return [\"gray\", ...appConfig.ui.colors].includes(value);\n      }\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    },\n    pauseTimeoutOnHover: {\n      type: Boolean,\n      default: true\n    }\n  },\n  emits: [\"close\"],\n  setup(props, { emit }) {\n    const { ui, attrs } = useUI(\"notification\", toRef(props, \"ui\"), config);\n    let timer = null;\n    const remaining = ref(props.timeout);\n    const wrapperClass = computed(() => {\n      return twMerge(twJoin(\n        ui.value.wrapper,\n        ui.value.background?.replaceAll(\"{color}\", props.color),\n        ui.value.rounded,\n        ui.value.shadow,\n        ui.value.ring?.replaceAll(\"{color}\", props.color)\n      ), props.class);\n    });\n    const progressClass = computed(() => {\n      return twJoin(\n        ui.value.progress.base,\n        ui.value.progress.background?.replaceAll(\"{color}\", props.color)\n      );\n    });\n    const progressStyle = computed(() => {\n      const remainingPercent = remaining.value / props.timeout * 100;\n      return { width: `${remainingPercent || 0}%` };\n    });\n    const iconClass = computed(() => {\n      return twJoin(\n        ui.value.icon.base,\n        ui.value.icon.color?.replaceAll(\"{color}\", props.color)\n      );\n    });\n    function onMouseover() {\n      if (props.pauseTimeoutOnHover && timer) {\n        timer.pause();\n      }\n    }\n    function onMouseleave() {\n      if (props.pauseTimeoutOnHover && timer) {\n        timer.resume();\n      }\n    }\n    function onClose() {\n      if (timer) {\n        timer.stop();\n      }\n      if (props.callback) {\n        props.callback();\n      }\n      emit(\"close\");\n    }\n    function onAction(action) {\n      if (timer) {\n        timer.stop();\n      }\n      if (action.click) {\n        action.click();\n      }\n      emit(\"close\");\n    }\n    function initTimer() {\n      if (timer) {\n        timer.stop();\n      }\n      if (!props.timeout) {\n        return;\n      }\n      timer = useTimer(() => {\n        onClose();\n      }, props.timeout);\n      watchEffect(() => {\n        remaining.value = timer.remaining.value;\n      });\n    }\n    watch(() => props.timeout, initTimer);\n    onMounted(initTimer);\n    onUnmounted(() => {\n      if (timer) {\n        timer.stop();\n      }\n    });\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      wrapperClass,\n      progressClass,\n      progressStyle,\n      iconClass,\n      onMouseover,\n      onMouseleave,\n      onClose,\n      onAction,\n      twMerge\n    };\n  }\n});\n</script>\n","<template>\n  <Teleport to=\"body\">\n    <div v-if=\"notifications.length\" :class=\"wrapperClass\" role=\"region\" v-bind=\"attrs\">\n      <div :class=\"ui.container\">\n        <div v-for=\"notification of notifications\" :key=\"notification.id\">\n          <UNotification\n            v-bind=\"notification\"\n            :class=\"notification.click && 'cursor-pointer'\"\n            @click=\"notification.click && notification.click(notification)\"\n            @close=\"toast.remove(notification.id)\"\n          >\n            <template v-for=\"(_, name) in $slots\" #[name]=\"slotData\">\n              <slot :name=\"name\" v-bind=\"slotData\" />\n            </template>\n          </UNotification>\n        </div>\n      </div>\n    </div>\n  </Teleport>\n</template>\n\n<script>\nimport { computed, toRef, defineComponent } from \"vue\";\nimport { twJoin } from \"tailwind-merge\";\nimport { useUI } from \"../../composables/useUI\";\nimport { useToast } from \"../../composables/useToast\";\nimport { mergeConfig, twMerge } from \"../../utils\";\nimport UNotification from \"./Notification.vue\";\nimport { useState } from \"#imports\";\nimport appConfig from \"#build/app.config\";\nimport { notifications } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.notifications, notifications);\nexport default defineComponent({\n  components: {\n    UNotification\n  },\n  inheritAttrs: false,\n  props: {\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props) {\n    const { ui, attrs } = useUI(\"notifications\", toRef(props, \"ui\"), config);\n    const toast = useToast();\n    const notifications2 = useState(\"notifications\", () => []);\n    const wrapperClass = computed(() => {\n      return twMerge(twJoin(\n        ui.value.wrapper,\n        ui.value.position,\n        ui.value.width\n      ), props.class);\n    });\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      toast,\n      notifications: notifications2,\n      wrapperClass\n    };\n  }\n});\n</script>\n","<template>\n  <!-- eslint-disable-next-line vue/no-template-shadow -->\n  <HPopover ref=\"popover\" v-slot=\"{ open, close }\" :class=\"ui.wrapper\" v-bind=\"attrs\" @mouseleave=\"onMouseLeave\">\n    <HPopoverButton\n      ref=\"trigger\"\n      as=\"div\"\n      :disabled=\"disabled\"\n      :class=\"ui.trigger\"\n      role=\"button\"\n      @mouseenter=\"onMouseEnter\"\n      @touchstart.passive=\"onTouchStart\"\n    >\n      <slot :open=\"open\" :close=\"close\">\n        <button :disabled=\"disabled\">\n          Open\n        </button>\n      </slot>\n    </HPopoverButton>\n\n    <Transition v-if=\"overlay\" appear v-bind=\"ui.overlay.transition\">\n      <div v-if=\"open\" :class=\"[ui.overlay.base, ui.overlay.background]\" />\n    </Transition>\n\n    <div v-if=\"open\" ref=\"container\" :class=\"[ui.container, ui.width]\" :style=\"containerStyle\" @mouseenter=\"onMouseEnter\">\n      <Transition appear v-bind=\"ui.transition\">\n        <div>\n          <div v-if=\"popper.arrow\" data-popper-arrow :class=\"Object.values(ui.arrow)\" />\n\n          <HPopoverPanel :class=\"[ui.base, ui.background, ui.ring, ui.rounded, ui.shadow]\" static>\n            <slot name=\"panel\" :open=\"open\" :close=\"close\" />\n          </HPopoverPanel>\n        </div>\n      </Transition>\n    </div>\n  </HPopover>\n</template>\n\n<script>\nimport { computed, ref, toRef, onMounted, defineComponent, watch } from \"vue\";\nimport { defu } from \"defu\";\nimport { Popover as HPopover, PopoverButton as HPopoverButton, PopoverPanel as HPopoverPanel, provideUseId } from \"@headlessui/vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { usePopper } from \"../../composables/usePopper\";\nimport { mergeConfig } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { popover } from \"#ui/ui.config\";\nimport { useId } from \"#imports\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.popover, popover);\nexport default defineComponent({\n  components: {\n    HPopover,\n    HPopoverButton,\n    HPopoverPanel\n  },\n  inheritAttrs: false,\n  props: {\n    mode: {\n      type: String,\n      default: \"click\",\n      validator: (value) => [\"click\", \"hover\"].includes(value)\n    },\n    open: {\n      type: Boolean,\n      default: void 0\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    openDelay: {\n      type: Number,\n      default: () => config.default.openDelay\n    },\n    closeDelay: {\n      type: Number,\n      default: () => config.default.closeDelay\n    },\n    overlay: {\n      type: Boolean,\n      default: false\n    },\n    popper: {\n      type: Object,\n      default: () => ({})\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: [\"update:open\"],\n  setup(props, { emit }) {\n    const { ui, attrs } = useUI(\"popover\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const popper = computed(() => defu(props.mode === \"hover\" ? { offsetDistance: 0 } : {}, props.popper, ui.value.popper));\n    const [trigger, container] = usePopper(popper.value);\n    const popover2 = ref(null);\n    const popoverApi = ref(null);\n    let openTimeout = null;\n    let closeTimeout = null;\n    onMounted(() => {\n      const popoverProvides = popover2.value?.$.provides;\n      if (!popoverProvides) {\n        return;\n      }\n      const popoverProvidesSymbols = Object.getOwnPropertySymbols(popoverProvides);\n      popoverApi.value = popoverProvidesSymbols.length && popoverProvides[popoverProvidesSymbols[0]];\n      if (props.open) {\n        popoverApi.value?.togglePopover();\n      }\n    });\n    const containerStyle = computed(() => {\n      if (props.mode !== \"hover\") {\n        return {};\n      }\n      const offsetDistance = props.popper?.offsetDistance || ui.value.popper?.offsetDistance || 8;\n      const placement = popper.value.placement?.split(\"-\")[0];\n      const padding = `${offsetDistance}px`;\n      if (placement === \"top\" || placement === \"bottom\") {\n        return {\n          paddingTop: padding,\n          paddingBottom: padding\n        };\n      } else if (placement === \"left\" || placement === \"right\") {\n        return {\n          paddingLeft: padding,\n          paddingRight: padding\n        };\n      } else {\n        return {\n          paddingTop: padding,\n          paddingBottom: padding,\n          paddingLeft: padding,\n          paddingRight: padding\n        };\n      }\n    });\n    function onTouchStart(event) {\n      if (!event.cancelable || !popoverApi.value || props.mode === \"click\") {\n        return;\n      }\n      if (popoverApi.value.popoverState === 0) {\n        popoverApi.value.closePopover();\n      } else {\n        popoverApi.value.togglePopover();\n      }\n    }\n    function onMouseEnter() {\n      if (props.mode !== \"hover\" || !popoverApi.value) {\n        return;\n      }\n      if (closeTimeout) {\n        clearTimeout(closeTimeout);\n        closeTimeout = null;\n      }\n      if (popoverApi.value.popoverState === 0) {\n        return;\n      }\n      openTimeout = openTimeout || setTimeout(() => {\n        if (popoverApi.value.togglePopover) {\n          popoverApi.value.togglePopover();\n        }\n        openTimeout = null;\n      }, props.openDelay);\n    }\n    function onMouseLeave() {\n      if (props.mode !== \"hover\" || !popoverApi.value) {\n        return;\n      }\n      if (openTimeout) {\n        clearTimeout(openTimeout);\n        openTimeout = null;\n      }\n      if (popoverApi.value.popoverState === 1) {\n        return;\n      }\n      closeTimeout = closeTimeout || setTimeout(() => {\n        if (popoverApi.value.closePopover) {\n          popoverApi.value.closePopover();\n        }\n        closeTimeout = null;\n      }, props.closeDelay);\n    }\n    watch(() => props.open, (newValue, oldValue) => {\n      if (!popoverApi.value) return;\n      if (oldValue === void 0 || newValue === oldValue) return;\n      if (newValue) {\n        popoverApi.value.popoverState = 0;\n      } else {\n        popoverApi.value.closePopover();\n      }\n    });\n    watch(() => popoverApi.value?.popoverState, (newValue, oldValue) => {\n      if (oldValue === void 0 || newValue === oldValue) return;\n      emit(\"update:open\", newValue === 0);\n    });\n    provideUseId(() => useId());\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      popover: popover2,\n      // eslint-disable-next-line vue/no-dupe-keys\n      popper,\n      trigger,\n      container,\n      containerStyle,\n      onTouchStart,\n      onMouseEnter,\n      onMouseLeave\n    };\n  }\n});\n</script>\n","<template>\n  <TransitionRoot as=\"template\" :appear=\"appear\" :show=\"isOpen\" @after-leave=\"onAfterLeave\">\n    <HDialog :class=\"[ui.wrapper, { 'justify-end': side === 'right' }, { 'items-end': side === 'bottom' }]\" v-bind=\"attrs\" @close=\"close\">\n      <TransitionChild v-if=\"overlay\" as=\"template\" :appear=\"appear\" v-bind=\"ui.overlay.transition\" :class=\"ui.overlay.transition.enterFrom\">\n        <div :class=\"[ui.overlay.base, ui.overlay.background]\" />\n      </TransitionChild>\n\n      <TransitionChild as=\"template\" :appear=\"appear\" v-bind=\"transitionClass\" :class=\"transitionClass.enterFrom\">\n        <HDialogPanel :class=\"[ui.base, sideType === 'horizontal' ? [ui.width, 'h-full'] : [ui.height, 'w-full'], ui.background, ui.ring, ui.rounded, ui.padding, ui.shadow]\">\n          <slot />\n        </HDialogPanel>\n      </TransitionChild>\n    </HDialog>\n  </TransitionRoot>\n</template>\n\n<script>\nimport { computed, toRef, defineComponent } from \"vue\";\nimport { Dialog as HDialog, DialogPanel as HDialogPanel, TransitionRoot, TransitionChild, provideUseId } from \"@headlessui/vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { mergeConfig } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { slideover } from \"#ui/ui.config\";\nimport { useId } from \"#imports\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.slideover, slideover);\nexport default defineComponent({\n  components: {\n    HDialog,\n    HDialogPanel,\n    TransitionRoot,\n    TransitionChild\n  },\n  inheritAttrs: false,\n  props: {\n    modelValue: {\n      type: Boolean,\n      default: false\n    },\n    appear: {\n      type: Boolean,\n      default: false\n    },\n    side: {\n      type: String,\n      default: \"right\",\n      validator: (value) => [\"left\", \"right\", \"top\", \"bottom\"].includes(value)\n    },\n    overlay: {\n      type: Boolean,\n      default: true\n    },\n    transition: {\n      type: Boolean,\n      default: true\n    },\n    preventClose: {\n      type: Boolean,\n      default: false\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: [\"update:modelValue\", \"close\", \"close-prevented\", \"after-leave\"],\n  setup(props, { emit }) {\n    const { ui, attrs } = useUI(\"slideover\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const isOpen = computed({\n      get() {\n        return props.modelValue;\n      },\n      set(value) {\n        emit(\"update:modelValue\", value);\n      }\n    });\n    const transitionClass = computed(() => {\n      if (!props.transition) {\n        return {};\n      }\n      let enterFrom, leaveTo;\n      switch (props.side) {\n        case \"left\":\n          enterFrom = ui.value.translate.left;\n          leaveTo = ui.value.translate.left;\n          break;\n        case \"right\":\n          enterFrom = ui.value.translate.right;\n          leaveTo = ui.value.translate.right;\n          break;\n        case \"top\":\n          enterFrom = ui.value.translate.top;\n          leaveTo = ui.value.translate.top;\n          break;\n        case \"bottom\":\n          enterFrom = ui.value.translate.bottom;\n          leaveTo = ui.value.translate.bottom;\n          break;\n        default:\n          enterFrom = ui.value.translate.right;\n          leaveTo = ui.value.translate.right;\n      }\n      return {\n        ...ui.value.transition,\n        enterFrom,\n        enterTo: ui.value.translate.base,\n        leaveFrom: ui.value.translate.base,\n        leaveTo\n      };\n    });\n    const sideType = computed(() => {\n      switch (props.side) {\n        case \"left\":\n          return \"horizontal\";\n        case \"right\":\n          return \"horizontal\";\n        case \"top\":\n          return \"vertical\";\n        case \"bottom\":\n          return \"vertical\";\n        default:\n          return \"right\";\n      }\n    });\n    function close(value) {\n      if (props.preventClose) {\n        emit(\"close-prevented\");\n        return;\n      }\n      isOpen.value = value;\n      emit(\"close\");\n    }\n    const onAfterLeave = () => {\n      emit(\"after-leave\");\n    };\n    provideUseId(() => useId());\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      isOpen,\n      transitionClass,\n      sideType,\n      onAfterLeave,\n      close\n    };\n  }\n});\n</script>\n","import { createElementBlock, defineComponent } from \"vue\";\nexport default defineComponent({\n  name: \"ServerPlaceholder\",\n  render() {\n    return createElementBlock(\"div\");\n  }\n});\n","<template>\n  <div ref=\"trigger\" :class=\"ui.wrapper\" v-bind=\"attrs\" @mouseenter=\"onMouseEnter\" @mouseleave=\"onMouseLeave\">\n    <slot :open=\"open\">\n      Hover\n    </slot>\n\n    <div v-if=\"open && !prevent && isVisible\" ref=\"container\" :class=\"[ui.container, ui.width]\">\n      <Transition appear v-bind=\"ui.transition\">\n        <div>\n          <div v-if=\"popper.arrow\" data-popper-arrow :class=\"Object.values(ui.arrow)\" />\n\n          <div :class=\"[ui.base, ui.background, ui.color, ui.rounded, ui.shadow, ui.ring]\">\n            <slot name=\"text\">\n              {{ text }}\n            </slot>\n\n            <span v-if=\"shortcuts?.length\" :class=\"ui.shortcuts\">\n              <span :class=\"ui.middot\">&middot;</span>\n\n              <UKbd v-for=\"shortcut of shortcuts\" :key=\"shortcut\" size=\"xs\">\n                {{ shortcut }}\n              </UKbd>\n            </span>\n          </div>\n        </div>\n      </Transition>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { computed, ref, toRef, defineComponent, useSlots } from \"vue\";\nimport { defu } from \"defu\";\nimport UKbd from \"../elements/Kbd.vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { usePopper } from \"../../composables/usePopper\";\nimport { mergeConfig } from \"../../utils\";\nimport appConfig from \"#build/app.config\";\nimport { tooltip } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.tooltip, tooltip);\nexport default defineComponent({\n  components: {\n    UKbd\n  },\n  inheritAttrs: false,\n  props: {\n    text: {\n      type: String,\n      default: null\n    },\n    prevent: {\n      type: Boolean,\n      default: false\n    },\n    shortcuts: {\n      type: Array,\n      default: () => []\n    },\n    openDelay: {\n      type: Number,\n      default: () => config.default.openDelay\n    },\n    closeDelay: {\n      type: Number,\n      default: () => config.default.closeDelay\n    },\n    popper: {\n      type: Object,\n      default: () => ({})\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props) {\n    const { ui, attrs } = useUI(\"tooltip\", toRef(props, \"ui\"), config, toRef(props, \"class\"));\n    const popper = computed(() => defu({}, props.popper, ui.value.popper));\n    const [trigger, container] = usePopper(popper.value);\n    const open = ref(false);\n    let openTimeout = null;\n    let closeTimeout = null;\n    const isVisible = computed(() => !!(useSlots().text || props.text));\n    function onMouseEnter() {\n      if (closeTimeout) {\n        clearTimeout(closeTimeout);\n        closeTimeout = null;\n      }\n      if (open.value) {\n        return;\n      }\n      openTimeout = openTimeout || setTimeout(() => {\n        open.value = true;\n        openTimeout = null;\n      }, props.openDelay);\n    }\n    function onMouseLeave() {\n      if (openTimeout) {\n        clearTimeout(openTimeout);\n        openTimeout = null;\n      }\n      if (!open.value) {\n        return;\n      }\n      closeTimeout = closeTimeout || setTimeout(() => {\n        open.value = false;\n        closeTimeout = null;\n      }, props.closeDelay);\n    }\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      // eslint-disable-next-line vue/no-dupe-keys\n      popper,\n      trigger,\n      container,\n      open,\n      onMouseEnter,\n      onMouseLeave,\n      isVisible\n    };\n  }\n});\n</script>\n","import { computed, defineComponent, h } from \"vue\";\nimport { NuxtIconCss } from \"./css.js\";\nimport { NuxtIconSvg } from \"./svg.js\";\nimport { useResolvedName } from \"./shared.js\";\nimport { useAppConfig, useNuxtApp } from \"#imports\";\nexport default defineComponent({\n  name: \"NuxtIcon\",\n  props: {\n    name: {\n      type: String,\n      required: true\n    },\n    mode: {\n      type: String,\n      required: false,\n      default: null\n    },\n    size: {\n      type: [Number, String],\n      required: false,\n      default: null\n    },\n    customize: {\n      type: [Function, Boolean, null],\n      default: null,\n      required: false\n    }\n  },\n  setup(props, { slots }) {\n    const nuxtApp = useNuxtApp();\n    const runtimeOptions = useAppConfig().icon;\n    const name = useResolvedName(() => props.name);\n    const component = computed(\n      () => nuxtApp.vueApp?.component(name.value) || ((props.mode || runtimeOptions.mode) === \"svg\" ? NuxtIconSvg : NuxtIconCss)\n    );\n    const style = computed(() => {\n      const size = props.size || runtimeOptions.size;\n      return size ? { fontSize: Number.isNaN(+size) ? size : size + \"px\" } : null;\n    });\n    return () => h(\n      component.value,\n      {\n        ...runtimeOptions.attrs,\n        name: name.value,\n        class: runtimeOptions.class,\n        style: style.value,\n        customize: props.customize\n      },\n      slots\n    );\n  }\n});\n","import { defineNuxtPlugin } from '#app/nuxt'\nimport { LazyUAccordion, LazyUAlert, LazyUAvatar, LazyUAvatarGroup, LazyUBadge, LazyUButton, LazyUButtonGroup, LazyUCarousel, LazyUChip, LazyUDropdown, LazyUIcon, LazyUKbd, LazyULink, LazyUMeter, LazyUMeterGroup, LazyUProgress, LazyUCheckbox, LazyUForm, LazyUFormGroup, LazyUInput, LazyUInputMenu, LazyURadio, LazyURadioGroup, LazyURange, LazyUSelect, LazyUSelectMenu, LazyUTextarea, LazyUToggle, LazyUTable, LazyUCard, LazyUContainer, LazyUDivider, LazyUSkeleton, LazyUBreadcrumb, LazyUCommandPalette, LazyUCommandPaletteGroup, LazyUHorizontalNavigation, LazyUPagination, LazyUTabs, LazyUVerticalNavigation, LazyUContextMenu, LazyUModal, LazyUModals, LazyUNotification, LazyUNotifications, LazyUPopover, LazyUSlideover, LazyUSlideovers, LazyUTooltip, LazyIcon } from '#components'\nconst lazyGlobalComponents = [\n  [\"UAccordion\", LazyUAccordion],\n[\"UAlert\", LazyUAlert],\n[\"UAvatar\", LazyUAvatar],\n[\"UAvatarGroup\", LazyUAvatarGroup],\n[\"UBadge\", LazyUBadge],\n[\"UButton\", LazyUButton],\n[\"UButtonGroup\", LazyUButtonGroup],\n[\"UCarousel\", LazyUCarousel],\n[\"UChip\", LazyUChip],\n[\"UDropdown\", LazyUDropdown],\n[\"UIcon\", LazyUIcon],\n[\"UKbd\", LazyUKbd],\n[\"ULink\", LazyULink],\n[\"UMeter\", LazyUMeter],\n[\"UMeterGroup\", LazyUMeterGroup],\n[\"UProgress\", LazyUProgress],\n[\"UCheckbox\", LazyUCheckbox],\n[\"UForm\", LazyUForm],\n[\"UFormGroup\", LazyUFormGroup],\n[\"UInput\", LazyUInput],\n[\"UInputMenu\", LazyUInputMenu],\n[\"URadio\", LazyURadio],\n[\"URadioGroup\", LazyURadioGroup],\n[\"URange\", LazyURange],\n[\"USelect\", LazyUSelect],\n[\"USelectMenu\", LazyUSelectMenu],\n[\"UTextarea\", LazyUTextarea],\n[\"UToggle\", LazyUToggle],\n[\"UTable\", LazyUTable],\n[\"UCard\", LazyUCard],\n[\"UContainer\", LazyUContainer],\n[\"UDivider\", LazyUDivider],\n[\"USkeleton\", LazyUSkeleton],\n[\"UBreadcrumb\", LazyUBreadcrumb],\n[\"UCommandPalette\", LazyUCommandPalette],\n[\"UCommandPaletteGroup\", LazyUCommandPaletteGroup],\n[\"UHorizontalNavigation\", LazyUHorizontalNavigation],\n[\"UPagination\", LazyUPagination],\n[\"UTabs\", LazyUTabs],\n[\"UVerticalNavigation\", LazyUVerticalNavigation],\n[\"UContextMenu\", LazyUContextMenu],\n[\"UModal\", LazyUModal],\n[\"UModals\", LazyUModals],\n[\"UNotification\", LazyUNotification],\n[\"UNotifications\", LazyUNotifications],\n[\"UPopover\", LazyUPopover],\n[\"USlideover\", LazyUSlideover],\n[\"USlideovers\", LazyUSlideovers],\n[\"UTooltip\", LazyUTooltip],\n[\"Icon\", LazyIcon],\n  \n]\n\nexport default defineNuxtPlugin({\n  name: 'nuxt:global-components',\n  setup (nuxtApp) {\n    for (const [name, component] of lazyGlobalComponents) {\n      nuxtApp.vueApp.component(name, component)\n      nuxtApp.vueApp.component('Lazy' + name, component)\n    }\n  }\n})\n","import { ref, inject } from \"vue\";\nimport { createSharedComposable } from \"@vueuse/core\";\nexport const slidOverInjectionKey = Symbol(\"nuxt-ui.slideover\");\nfunction _useSlideover() {\n  const slideoverState = inject(slidOverInjectionKey);\n  const isOpen = ref(false);\n  function open(component, props) {\n    if (!slideoverState) {\n      throw new Error(\"useSlideover() is called without provider\");\n    }\n    slideoverState.value = {\n      component,\n      props: props ?? {}\n    };\n    isOpen.value = true;\n  }\n  async function close() {\n    if (!slideoverState) return;\n    isOpen.value = false;\n  }\n  function reset() {\n    slideoverState.value = {\n      component: \"div\",\n      props: {}\n    };\n  }\n  function patch(props) {\n    if (!slideoverState) return;\n    slideoverState.value = {\n      ...slideoverState.value,\n      props: {\n        ...slideoverState.value.props,\n        ...props\n      }\n    };\n  }\n  return {\n    open,\n    close,\n    reset,\n    patch,\n    isOpen\n  };\n}\nexport const useSlideover = createSharedComposable(_useSlideover);\n","import { shallowRef } from \"vue\";\nimport { slidOverInjectionKey } from \"../composables/useSlideover.js\";\nimport { defineNuxtPlugin } from \"#imports\";\nexport default defineNuxtPlugin((nuxtApp) => {\n  const slideoverState = shallowRef({\n    component: \"div\",\n    props: {}\n  });\n  nuxtApp.vueApp.provide(slidOverInjectionKey, slideoverState);\n});\n","import { ref, inject } from \"vue\";\nimport { createSharedComposable } from \"@vueuse/core\";\nexport const modalInjectionKey = Symbol(\"nuxt-ui.modal\");\nfunction _useModal() {\n  const modalState = inject(modalInjectionKey);\n  const isOpen = ref(false);\n  function open(component, props) {\n    if (!modalState) {\n      throw new Error(\"useModal() is called without provider\");\n    }\n    modalState.value = {\n      component,\n      props: props ?? {}\n    };\n    isOpen.value = true;\n  }\n  async function close() {\n    if (!modalState) return;\n    isOpen.value = false;\n  }\n  function reset() {\n    modalState.value = {\n      component: \"div\",\n      props: {}\n    };\n  }\n  function patch(props) {\n    if (!modalState) return;\n    modalState.value = {\n      ...modalState.value,\n      props: {\n        ...modalState.value.props,\n        ...props\n      }\n    };\n  }\n  return {\n    open,\n    close,\n    reset,\n    patch,\n    isOpen\n  };\n}\nexport const useModal = createSharedComposable(_useModal);\n","import { shallowRef } from \"vue\";\nimport { modalInjectionKey } from \"../composables/useModal.js\";\nimport { defineNuxtPlugin } from \"#imports\";\nexport default defineNuxtPlugin((nuxtApp) => {\n  const modalState = shallowRef({\n    component: \"div\",\n    props: {}\n  });\n  nuxtApp.vueApp.provide(modalInjectionKey, modalState);\n});\n","import { reactive } from \"vue\";\nimport { klona } from \"klona\";\nimport { useNuxtApp } from \"./nuxt.js\";\nimport __appConfig from \"#build/app.config.mjs\";\nexport const _getAppConfig = () => __appConfig;\nfunction isPojoOrArray(val) {\n  return Array.isArray(val) || !!val && typeof val === \"object\" && val.constructor?.name === \"Object\";\n}\nfunction deepDelete(obj, newObj) {\n  for (const key in obj) {\n    const val = newObj[key];\n    if (!(key in newObj)) {\n      delete obj[key];\n    }\n    if (isPojoOrArray(val)) {\n      deepDelete(obj[key], newObj[key]);\n    }\n  }\n}\nfunction deepAssign(obj, newObj) {\n  for (const key in newObj) {\n    if (key === \"__proto__\" || key === \"constructor\") {\n      continue;\n    }\n    const val = newObj[key];\n    if (isPojoOrArray(val)) {\n      const defaultVal = Array.isArray(val) ? [] : {};\n      obj[key] ||= defaultVal;\n      deepAssign(obj[key], val);\n    } else {\n      obj[key] = val;\n    }\n  }\n}\nexport function useAppConfig() {\n  const nuxtApp = useNuxtApp();\n  nuxtApp._appConfig ||= import.meta.server ? klona(__appConfig) : reactive(__appConfig);\n  return nuxtApp._appConfig;\n}\nexport function _replaceAppConfig(newConfig) {\n  const appConfig = useAppConfig();\n  deepAssign(appConfig, newConfig);\n  deepDelete(appConfig, newConfig);\n}\nexport function updateAppConfig(appConfig) {\n  const _appConfig = useAppConfig();\n  deepAssign(_appConfig, appConfig);\n}\nif (import.meta.dev) {\n  if (import.meta.hot) {\n    import.meta.hot.accept((newModule) => {\n      const newConfig = newModule?._getAppConfig();\n      if (newConfig) {\n        _replaceAppConfig(newConfig);\n      }\n    });\n  }\n  if (import.meta.webpackHot) {\n    import.meta.webpackHot.accept(\"#build/app.config.mjs\", () => {\n      _replaceAppConfig(__appConfig);\n    });\n  }\n}\n","\nimport { _replaceAppConfig } from '#app/config'\nimport { defuFn } from 'defu'\n\nconst inlineConfig = {\n  \"nuxt\": {},\n  \"icon\": {\n    \"provider\": \"server\",\n    \"class\": \"\",\n    \"aliases\": {},\n    \"iconifyApiEndpoint\": \"https://api.iconify.design\",\n    \"localApiEndpoint\": \"/api/_nuxt_icon\",\n    \"fallbackToApi\": true,\n    \"cssSelectorPrefix\": \"i-\",\n    \"cssWherePseudo\": true,\n    \"mode\": \"css\",\n    \"attrs\": {\n      \"aria-hidden\": true\n    },\n    \"collections\": [\n      \"academicons\",\n      \"akar-icons\",\n      \"ant-design\",\n      \"arcticons\",\n      \"basil\",\n      \"bi\",\n      \"bitcoin-icons\",\n      \"bpmn\",\n      \"brandico\",\n      \"bx\",\n      \"bxl\",\n      \"bxs\",\n      \"bytesize\",\n      \"carbon\",\n      \"catppuccin\",\n      \"cbi\",\n      \"charm\",\n      \"ci\",\n      \"cib\",\n      \"cif\",\n      \"cil\",\n      \"circle-flags\",\n      \"circum\",\n      \"clarity\",\n      \"codicon\",\n      \"covid\",\n      \"cryptocurrency\",\n      \"cryptocurrency-color\",\n      \"dashicons\",\n      \"devicon\",\n      \"devicon-plain\",\n      \"ei\",\n      \"el\",\n      \"emojione\",\n      \"emojione-monotone\",\n      \"emojione-v1\",\n      \"entypo\",\n      \"entypo-social\",\n      \"eos-icons\",\n      \"ep\",\n      \"et\",\n      \"eva\",\n      \"f7\",\n      \"fa\",\n      \"fa-brands\",\n      \"fa-regular\",\n      \"fa-solid\",\n      \"fa6-brands\",\n      \"fa6-regular\",\n      \"fa6-solid\",\n      \"fad\",\n      \"fe\",\n      \"feather\",\n      \"file-icons\",\n      \"flag\",\n      \"flagpack\",\n      \"flat-color-icons\",\n      \"flat-ui\",\n      \"flowbite\",\n      \"fluent\",\n      \"fluent-emoji\",\n      \"fluent-emoji-flat\",\n      \"fluent-emoji-high-contrast\",\n      \"fluent-mdl2\",\n      \"fontelico\",\n      \"fontisto\",\n      \"formkit\",\n      \"foundation\",\n      \"fxemoji\",\n      \"gala\",\n      \"game-icons\",\n      \"geo\",\n      \"gg\",\n      \"gis\",\n      \"gravity-ui\",\n      \"gridicons\",\n      \"grommet-icons\",\n      \"guidance\",\n      \"healthicons\",\n      \"heroicons\",\n      \"heroicons-outline\",\n      \"heroicons-solid\",\n      \"hugeicons\",\n      \"humbleicons\",\n      \"ic\",\n      \"icomoon-free\",\n      \"icon-park\",\n      \"icon-park-outline\",\n      \"icon-park-solid\",\n      \"icon-park-twotone\",\n      \"iconamoon\",\n      \"iconoir\",\n      \"icons8\",\n      \"il\",\n      \"ion\",\n      \"iwwa\",\n      \"jam\",\n      \"la\",\n      \"lets-icons\",\n      \"line-md\",\n      \"logos\",\n      \"ls\",\n      \"lucide\",\n      \"lucide-lab\",\n      \"mage\",\n      \"majesticons\",\n      \"maki\",\n      \"map\",\n      \"marketeq\",\n      \"material-symbols\",\n      \"material-symbols-light\",\n      \"mdi\",\n      \"mdi-light\",\n      \"medical-icon\",\n      \"memory\",\n      \"meteocons\",\n      \"mi\",\n      \"mingcute\",\n      \"mono-icons\",\n      \"mynaui\",\n      \"nimbus\",\n      \"nonicons\",\n      \"noto\",\n      \"noto-v1\",\n      \"octicon\",\n      \"oi\",\n      \"ooui\",\n      \"openmoji\",\n      \"oui\",\n      \"pajamas\",\n      \"pepicons\",\n      \"pepicons-pencil\",\n      \"pepicons-pop\",\n      \"pepicons-print\",\n      \"ph\",\n      \"pixelarticons\",\n      \"prime\",\n      \"ps\",\n      \"quill\",\n      \"radix-icons\",\n      \"raphael\",\n      \"ri\",\n      \"rivet-icons\",\n      \"si-glyph\",\n      \"simple-icons\",\n      \"simple-line-icons\",\n      \"skill-icons\",\n      \"solar\",\n      \"streamline\",\n      \"streamline-emojis\",\n      \"subway\",\n      \"svg-spinners\",\n      \"system-uicons\",\n      \"tabler\",\n      \"tdesign\",\n      \"teenyicons\",\n      \"token\",\n      \"token-branded\",\n      \"topcoat\",\n      \"twemoji\",\n      \"typcn\",\n      \"uil\",\n      \"uim\",\n      \"uis\",\n      \"uit\",\n      \"uiw\",\n      \"unjs\",\n      \"vaadin\",\n      \"vs\",\n      \"vscode-icons\",\n      \"websymbol\",\n      \"weui\",\n      \"whh\",\n      \"wi\",\n      \"wpf\",\n      \"zmdi\",\n      \"zondicons\"\n    ],\n    \"fetchTimeout\": 1500\n  },\n  \"ui\": {\n    \"primary\": \"green\",\n    \"gray\": \"cool\",\n    \"colors\": [\n      \"red\",\n      \"orange\",\n      \"amber\",\n      \"yellow\",\n      \"lime\",\n      \"green\",\n      \"emerald\",\n      \"teal\",\n      \"cyan\",\n      \"sky\",\n      \"blue\",\n      \"indigo\",\n      \"violet\",\n      \"purple\",\n      \"fuchsia\",\n      \"pink\",\n      \"rose\",\n      \"primary\"\n    ],\n    \"strategy\": \"merge\"\n  }\n}\n\n// Vite - webpack is handled directly in #app/config\nif (import.meta.hot) {\n  import.meta.hot.accept((newModule) => {\n    _replaceAppConfig(newModule.default)\n  })\n}\n\n\n\nexport default /*@__PURE__*/ defuFn(inlineConfig)\n","export function omit(object, keysToOmit) {\n  const result = { ...object };\n  for (const key of keysToOmit) {\n    delete result[key];\n  }\n  return result;\n}\nexport function get(object, path, defaultValue) {\n  if (typeof path === \"string\") {\n    path = path.split(\".\").map((key) => {\n      const numKey = Number(key);\n      return Number.isNaN(numKey) ? key : numKey;\n    });\n  }\n  let result = object;\n  for (const key of path) {\n    if (result === void 0 || result === null) {\n      return defaultValue;\n    }\n    result = result[key];\n  }\n  return result !== void 0 ? result : defaultValue;\n}\n","export const nuxtLinkProps = {\n  to: {\n    type: [String, Object],\n    default: void 0,\n    required: false\n  },\n  href: {\n    type: [String, Object],\n    default: void 0,\n    required: false\n  },\n  // Attributes\n  target: {\n    type: String,\n    default: void 0,\n    required: false\n  },\n  rel: {\n    type: String,\n    default: void 0,\n    required: false\n  },\n  noRel: {\n    type: Boolean,\n    default: void 0,\n    required: false\n  },\n  // Prefetching\n  prefetch: {\n    type: Boolean,\n    default: void 0,\n    required: false\n  },\n  noPrefetch: {\n    type: Boolean,\n    default: void 0,\n    required: false\n  },\n  // Styling\n  activeClass: {\n    type: String,\n    default: void 0,\n    required: false\n  },\n  exactActiveClass: {\n    type: String,\n    default: void 0,\n    required: false\n  },\n  prefetchedClass: {\n    type: String,\n    default: void 0,\n    required: false\n  },\n  // Vue Router's `<RouterLink>` additional props\n  replace: {\n    type: Boolean,\n    default: void 0,\n    required: false\n  },\n  ariaCurrentValue: {\n    type: String,\n    default: void 0,\n    required: false\n  },\n  // Edge cases handling\n  external: {\n    type: Boolean,\n    default: void 0,\n    required: false\n  }\n};\nconst uLinkProps = {\n  as: {\n    type: String,\n    default: \"button\"\n  },\n  type: {\n    type: String,\n    default: \"button\"\n  },\n  disabled: {\n    type: Boolean,\n    default: null\n  },\n  active: {\n    type: Boolean,\n    default: void 0\n  },\n  exact: {\n    type: Boolean,\n    default: false\n  },\n  exactQuery: {\n    type: Boolean,\n    default: false\n  },\n  exactHash: {\n    type: Boolean,\n    default: false\n  },\n  inactiveClass: {\n    type: String,\n    default: void 0\n  }\n};\nexport const getNuxtLinkProps = (props) => {\n  const keys = Object.keys(nuxtLinkProps);\n  return keys.reduce((acc, key) => {\n    if (props[key] !== void 0) {\n      acc[key] = props[key];\n    }\n    return acc;\n  }, {});\n};\nexport const getULinkProps = (props) => {\n  const keys = Object.keys(props);\n  const ariaKeys = keys.filter((key) => key.startsWith(\"aria-\"));\n  const dataKeys = keys.filter((key) => key.startsWith(\"data-\"));\n  return [...Object.keys(nuxtLinkProps), ...Object.keys(uLinkProps), ...ariaKeys, ...dataKeys].reduce((acc, key) => {\n    if (props[key] !== void 0) {\n      acc[key] = props[key];\n    }\n    return acc;\n  }, {});\n};\n","import { defu, createDefu } from \"defu\";\nimport { extendTailwindMerge } from \"tailwind-merge\";\nimport appConfig from \"#build/app.config\";\nexport const twMerge = extendTailwindMerge(defu({\n  extend: {\n    classGroups: {\n      icons: [(classPart) => classPart.startsWith(\"i-\")]\n    }\n  }\n}, appConfig.ui?.tailwindMerge));\nconst defuTwMerge = createDefu((obj, key, value, namespace) => {\n  if (namespace === \"default\" || namespace.startsWith(\"default.\")) {\n    return false;\n  }\n  if (namespace === \"popper\" || namespace.startsWith(\"popper.\")) {\n    return false;\n  }\n  if (namespace.endsWith(\"avatar\") && key === \"size\") {\n    return false;\n  }\n  if (namespace.endsWith(\"chip\") && key === \"size\") {\n    return false;\n  }\n  if (namespace.endsWith(\"badge\") && key === \"size\" || key === \"color\" || key === \"variant\") {\n    return false;\n  }\n  if (typeof obj[key] === \"string\" && typeof value === \"string\" && obj[key] && value) {\n    obj[key] = twMerge(obj[key], value);\n    return true;\n  }\n});\nexport function mergeConfig(strategy, ...configs) {\n  if (strategy === \"override\") {\n    return defu({}, ...configs);\n  }\n  return defuTwMerge({}, ...configs);\n}\nconst rxHex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i;\nexport function parseConfigValue(value) {\n  return rxHex.test(value) ? hexToRgb(value) : value;\n}\nexport function hexToRgb(hex) {\n  const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  hex = hex.replace(shorthandRegex, function(_, r, g, b) {\n    return r + r + g + g + b + b;\n  });\n  const result = rxHex.exec(hex);\n  return result ? `${Number.parseInt(result[1], 16)} ${Number.parseInt(result[2], 16)} ${Number.parseInt(result[3], 16)}` : null;\n}\nexport function getSlotsChildren(slots) {\n  let children = slots.default?.();\n  if (children?.length) {\n    children = children.flatMap((c) => {\n      if (typeof c.type === \"symbol\") {\n        if (typeof c.children === \"string\") {\n          return;\n        }\n        return c.children;\n      } else if (c.type.name === \"ContentSlot\") {\n        return c.ctx.slots.default?.();\n      }\n      return c;\n    }).filter(Boolean);\n  }\n  return children || [];\n}\nexport function looseToNumber(val) {\n  const n = Number.parseFloat(val);\n  return Number.isNaN(n) ? val : n;\n}\nexport * from \"./lodash.js\";\nexport * from \"./link.js\";\n","const _inherit = \"inherit\"\nconst _current = \"currentColor\"\nconst _transparent = \"transparent\"\nconst _black = \"#000\"\nconst _white = \"#fff\"\nconst _slate = {\"50\":\"#f8fafc\",\"100\":\"#f1f5f9\",\"200\":\"#e2e8f0\",\"300\":\"#cbd5e1\",\"400\":\"#94a3b8\",\"500\":\"#64748b\",\"600\":\"#475569\",\"700\":\"#334155\",\"800\":\"#1e293b\",\"900\":\"#0f172a\",\"950\":\"#020617\"}\nconst _gray = {\"50\":\"rgb(var(--color-gray-50) / <alpha-value>)\",\"100\":\"rgb(var(--color-gray-100) / <alpha-value>)\",\"200\":\"rgb(var(--color-gray-200) / <alpha-value>)\",\"300\":\"rgb(var(--color-gray-300) / <alpha-value>)\",\"400\":\"rgb(var(--color-gray-400) / <alpha-value>)\",\"500\":\"rgb(var(--color-gray-500) / <alpha-value>)\",\"600\":\"rgb(var(--color-gray-600) / <alpha-value>)\",\"700\":\"rgb(var(--color-gray-700) / <alpha-value>)\",\"800\":\"rgb(var(--color-gray-800) / <alpha-value>)\",\"900\":\"rgb(var(--color-gray-900) / <alpha-value>)\",\"950\":\"rgb(var(--color-gray-950) / <alpha-value>)\"}\nconst _zinc = {\"50\":\"#fafafa\",\"100\":\"#f4f4f5\",\"200\":\"#e4e4e7\",\"300\":\"#d4d4d8\",\"400\":\"#a1a1aa\",\"500\":\"#71717a\",\"600\":\"#52525b\",\"700\":\"#3f3f46\",\"800\":\"#27272a\",\"900\":\"#18181b\",\"950\":\"#09090b\"}\nconst _neutral = {\"50\":\"#fafafa\",\"100\":\"#f5f5f5\",\"200\":\"#e5e5e5\",\"300\":\"#d4d4d4\",\"400\":\"#a3a3a3\",\"500\":\"#737373\",\"600\":\"#525252\",\"700\":\"#404040\",\"800\":\"#262626\",\"900\":\"#171717\",\"950\":\"#0a0a0a\"}\nconst _stone = {\"50\":\"#fafaf9\",\"100\":\"#f5f5f4\",\"200\":\"#e7e5e4\",\"300\":\"#d6d3d1\",\"400\":\"#a8a29e\",\"500\":\"#78716c\",\"600\":\"#57534e\",\"700\":\"#44403c\",\"800\":\"#292524\",\"900\":\"#1c1917\",\"950\":\"#0c0a09\"}\nconst _red = {\"50\":\"#fef2f2\",\"100\":\"#fee2e2\",\"200\":\"#fecaca\",\"300\":\"#fca5a5\",\"400\":\"#f87171\",\"500\":\"#ef4444\",\"600\":\"#dc2626\",\"700\":\"#b91c1c\",\"800\":\"#991b1b\",\"900\":\"#7f1d1d\",\"950\":\"#450a0a\"}\nconst _orange = {\"50\":\"#fff7ed\",\"100\":\"#ffedd5\",\"200\":\"#fed7aa\",\"300\":\"#fdba74\",\"400\":\"#fb923c\",\"500\":\"#f97316\",\"600\":\"#ea580c\",\"700\":\"#c2410c\",\"800\":\"#9a3412\",\"900\":\"#7c2d12\",\"950\":\"#431407\"}\nconst _amber = {\"50\":\"#fffbeb\",\"100\":\"#fef3c7\",\"200\":\"#fde68a\",\"300\":\"#fcd34d\",\"400\":\"#fbbf24\",\"500\":\"#f59e0b\",\"600\":\"#d97706\",\"700\":\"#b45309\",\"800\":\"#92400e\",\"900\":\"#78350f\",\"950\":\"#451a03\"}\nconst _yellow = {\"50\":\"#fefce8\",\"100\":\"#fef9c3\",\"200\":\"#fef08a\",\"300\":\"#fde047\",\"400\":\"#facc15\",\"500\":\"#eab308\",\"600\":\"#ca8a04\",\"700\":\"#a16207\",\"800\":\"#854d0e\",\"900\":\"#713f12\",\"950\":\"#422006\"}\nconst _lime = {\"50\":\"#f7fee7\",\"100\":\"#ecfccb\",\"200\":\"#d9f99d\",\"300\":\"#bef264\",\"400\":\"#a3e635\",\"500\":\"#84cc16\",\"600\":\"#65a30d\",\"700\":\"#4d7c0f\",\"800\":\"#3f6212\",\"900\":\"#365314\",\"950\":\"#1a2e05\"}\nconst _green = {\"50\":\"#f0fdf4\",\"100\":\"#dcfce7\",\"200\":\"#bbf7d0\",\"300\":\"#86efac\",\"400\":\"#4ade80\",\"500\":\"#22c55e\",\"600\":\"#16a34a\",\"700\":\"#15803d\",\"800\":\"#166534\",\"900\":\"#14532d\",\"950\":\"#052e16\"}\nconst _emerald = {\"50\":\"#ecfdf5\",\"100\":\"#d1fae5\",\"200\":\"#a7f3d0\",\"300\":\"#6ee7b7\",\"400\":\"#34d399\",\"500\":\"#10b981\",\"600\":\"#059669\",\"700\":\"#047857\",\"800\":\"#065f46\",\"900\":\"#064e3b\",\"950\":\"#022c22\"}\nconst _teal = {\"50\":\"#f0fdfa\",\"100\":\"#ccfbf1\",\"200\":\"#99f6e4\",\"300\":\"#5eead4\",\"400\":\"#2dd4bf\",\"500\":\"#14b8a6\",\"600\":\"#0d9488\",\"700\":\"#0f766e\",\"800\":\"#115e59\",\"900\":\"#134e4a\",\"950\":\"#042f2e\"}\nconst _cyan = {\"50\":\"#ecfeff\",\"100\":\"#cffafe\",\"200\":\"#a5f3fc\",\"300\":\"#67e8f9\",\"400\":\"#22d3ee\",\"500\":\"#06b6d4\",\"600\":\"#0891b2\",\"700\":\"#0e7490\",\"800\":\"#155e75\",\"900\":\"#164e63\",\"950\":\"#083344\"}\nconst _sky = {\"50\":\"#f0f9ff\",\"100\":\"#e0f2fe\",\"200\":\"#bae6fd\",\"300\":\"#7dd3fc\",\"400\":\"#38bdf8\",\"500\":\"#0ea5e9\",\"600\":\"#0284c7\",\"700\":\"#0369a1\",\"800\":\"#075985\",\"900\":\"#0c4a6e\",\"950\":\"#082f49\"}\nconst _blue = {\"50\":\"#eff6ff\",\"100\":\"#dbeafe\",\"200\":\"#bfdbfe\",\"300\":\"#93c5fd\",\"400\":\"#60a5fa\",\"500\":\"#3b82f6\",\"600\":\"#2563eb\",\"700\":\"#1d4ed8\",\"800\":\"#1e40af\",\"900\":\"#1e3a8a\",\"950\":\"#172554\"}\nconst _indigo = {\"50\":\"#eef2ff\",\"100\":\"#e0e7ff\",\"200\":\"#c7d2fe\",\"300\":\"#a5b4fc\",\"400\":\"#818cf8\",\"500\":\"#6366f1\",\"600\":\"#4f46e5\",\"700\":\"#4338ca\",\"800\":\"#3730a3\",\"900\":\"#312e81\",\"950\":\"#1e1b4b\"}\nconst _violet = {\"50\":\"#f5f3ff\",\"100\":\"#ede9fe\",\"200\":\"#ddd6fe\",\"300\":\"#c4b5fd\",\"400\":\"#a78bfa\",\"500\":\"#8b5cf6\",\"600\":\"#7c3aed\",\"700\":\"#6d28d9\",\"800\":\"#5b21b6\",\"900\":\"#4c1d95\",\"950\":\"#2e1065\"}\nconst _purple = {\"50\":\"#faf5ff\",\"100\":\"#f3e8ff\",\"200\":\"#e9d5ff\",\"300\":\"#d8b4fe\",\"400\":\"#c084fc\",\"500\":\"#a855f7\",\"600\":\"#9333ea\",\"700\":\"#7e22ce\",\"800\":\"#6b21a8\",\"900\":\"#581c87\",\"950\":\"#3b0764\"}\nconst _fuchsia = {\"50\":\"#fdf4ff\",\"100\":\"#fae8ff\",\"200\":\"#f5d0fe\",\"300\":\"#f0abfc\",\"400\":\"#e879f9\",\"500\":\"#d946ef\",\"600\":\"#c026d3\",\"700\":\"#a21caf\",\"800\":\"#86198f\",\"900\":\"#701a75\",\"950\":\"#4a044e\"}\nconst _pink = {\"50\":\"#fdf2f8\",\"100\":\"#fce7f3\",\"200\":\"#fbcfe8\",\"300\":\"#f9a8d4\",\"400\":\"#f472b6\",\"500\":\"#ec4899\",\"600\":\"#db2777\",\"700\":\"#be185d\",\"800\":\"#9d174d\",\"900\":\"#831843\",\"950\":\"#500724\"}\nconst _rose = {\"50\":\"#fff1f2\",\"100\":\"#ffe4e6\",\"200\":\"#fecdd3\",\"300\":\"#fda4af\",\"400\":\"#fb7185\",\"500\":\"#f43f5e\",\"600\":\"#e11d48\",\"700\":\"#be123c\",\"800\":\"#9f1239\",\"900\":\"#881337\",\"950\":\"#4c0519\"}\nconst _primary = {\"50\":\"rgb(var(--color-primary-50) / <alpha-value>)\",\"100\":\"rgb(var(--color-primary-100) / <alpha-value>)\",\"200\":\"rgb(var(--color-primary-200) / <alpha-value>)\",\"300\":\"rgb(var(--color-primary-300) / <alpha-value>)\",\"400\":\"rgb(var(--color-primary-400) / <alpha-value>)\",\"500\":\"rgb(var(--color-primary-500) / <alpha-value>)\",\"600\":\"rgb(var(--color-primary-600) / <alpha-value>)\",\"700\":\"rgb(var(--color-primary-700) / <alpha-value>)\",\"800\":\"rgb(var(--color-primary-800) / <alpha-value>)\",\"900\":\"rgb(var(--color-primary-900) / <alpha-value>)\",\"950\":\"rgb(var(--color-primary-950) / <alpha-value>)\",\"DEFAULT\":\"rgb(var(--color-primary-DEFAULT) / <alpha-value>)\"}\nconst _cool = {\"50\":\"#f9fafb\",\"100\":\"#f3f4f6\",\"200\":\"#e5e7eb\",\"300\":\"#d1d5db\",\"400\":\"#9ca3af\",\"500\":\"#6b7280\",\"600\":\"#4b5563\",\"700\":\"#374151\",\"800\":\"#1f2937\",\"900\":\"#111827\",\"950\":\"#030712\"}\nconst config = { \"inherit\": _inherit, \"current\": _current, \"transparent\": _transparent, \"black\": _black, \"white\": _white, \"slate\": _slate, \"gray\": _gray, \"zinc\": _zinc, \"neutral\": _neutral, \"stone\": _stone, \"red\": _red, \"orange\": _orange, \"amber\": _amber, \"yellow\": _yellow, \"lime\": _lime, \"green\": _green, \"emerald\": _emerald, \"teal\": _teal, \"cyan\": _cyan, \"sky\": _sky, \"blue\": _blue, \"indigo\": _indigo, \"violet\": _violet, \"purple\": _purple, \"fuchsia\": _fuchsia, \"pink\": _pink, \"rose\": _rose, \"primary\": _primary, \"cool\": _cool,  }\nexport { config as default, _inherit, _current, _transparent, _black, _white, _slate, _gray, _zinc, _neutral, _stone, _red, _orange, _amber, _yellow, _lime, _green, _emerald, _teal, _cyan, _sky, _blue, _indigo, _violet, _purple, _fuchsia, _pink, _rose, _primary, _cool }","import { computed } from \"vue\";\nimport { get, parseConfigValue } from \"../utils/index.js\";\nimport { defineNuxtPlugin, useAppConfig, useNuxtApp, useHead } from \"#imports\";\nimport colors from \"#tailwind-config/theme/colors\";\nexport default defineNuxtPlugin(() => {\n  const appConfig = useAppConfig();\n  const nuxtApp = useNuxtApp();\n  const root = computed(() => {\n    const primary = get(colors, appConfig.ui.primary);\n    const gray = get(colors, appConfig.ui.gray);\n    if (!primary) {\n      console.warn(`[@nuxt/ui] Primary color '${appConfig.ui.primary}' not found in Tailwind config`);\n    }\n    if (!gray) {\n      console.warn(`[@nuxt/ui] Gray color '${appConfig.ui.gray}' not found in Tailwind config`);\n    }\n    return `:root {\n${Object.entries(primary || colors.green).map(([key, value]) => `--color-primary-${key}: ${parseConfigValue(value)};`).join(\"\\n\")}\n--color-primary-DEFAULT: var(--color-primary-500);\n\n${Object.entries(gray || colors.cool).map(([key, value]) => `--color-gray-${key}: ${parseConfigValue(value)};`).join(\"\\n\")}\n}\n\n.dark {\n  --color-primary-DEFAULT: var(--color-primary-400);\n}\n`;\n  });\n  const headData = {\n    style: [{\n      innerHTML: () => root.value,\n      tagPriority: -2,\n      id: \"nuxt-ui-colors\"\n    }]\n  };\n  if (import.meta.client && nuxtApp.isHydrating && !nuxtApp.payload.serverRendered) {\n    const style = document.createElement(\"style\");\n    style.innerHTML = root.value;\n    style.setAttribute(\"data-nuxt-ui-colors\", \"\");\n    document.head.appendChild(style);\n    headData.script = [{\n      innerHTML: \"document.head.removeChild(document.querySelector('[data-nuxt-ui-colors]'))\"\n    }];\n  }\n  useHead(headData);\n});\n","export const preference = \"system\"\n      \nexport const fallback = \"light\"\n      \nexport const hid = \"nuxt-color-mode-script\"\n      \nexport const globalName = \"__NUXT_COLOR_MODE__\"\n      \nexport const componentName = \"ColorScheme\"\n      \nexport const classPrefix = \"\"\n      \nexport const classSuffix = \"\"\n      \nexport const dataValue = \"\"\n      \nexport const storageKey = \"nuxt-color-mode\"\n      \nexport const storage = \"localStorage\"\n      \nexport const disableTransition = false\n      \nexport const script = \"\\\"use strict\\\";(()=>{const t=window,e=document.documentElement,c=[\\\"dark\\\",\\\"light\\\"],n=getStorageValue(\\\"localStorage\\\",\\\"nuxt-color-mode\\\")||\\\"system\\\";let i=n===\\\"system\\\"?u():n;const r=e.getAttribute(\\\"data-color-mode-forced\\\");r&&(i=r),l(i),t[\\\"__NUXT_COLOR_MODE__\\\"]={preference:n,value:i,getColorScheme:u,addColorScheme:l,removeColorScheme:d};function l(o){const s=\\\"\\\"+o+\\\"\\\",a=\\\"\\\";e.classList?e.classList.add(s):e.className+=\\\" \\\"+s,a&&e.setAttribute(\\\"data-\\\"+a,o)}function d(o){const s=\\\"\\\"+o+\\\"\\\",a=\\\"\\\";e.classList?e.classList.remove(s):e.className=e.className.replace(new RegExp(s,\\\"g\\\"),\\\"\\\"),a&&e.removeAttribute(\\\"data-\\\"+a)}function f(o){return t.matchMedia(\\\"(prefers-color-scheme\\\"+o+\\\")\\\")}function u(){if(t.matchMedia&&f(\\\"\\\").media!==\\\"not all\\\"){for(const o of c)if(f(\\\":\\\"+o).matches)return o}return\\\"light\\\"}})();function getStorageValue(t,e){switch(t){case\\\"localStorage\\\":return window.localStorage.getItem(e);case\\\"sessionStorage\\\":return window.sessionStorage.getItem(e);case\\\"cookie\\\":return getCookie(e);default:return null}}function getCookie(t){const c=(\\\"; \\\"+window.document.cookie).split(\\\"; \\\"+t+\\\"=\\\");if(c.length===2)return c.pop()?.split(\\\";\\\").shift()}\"\n      ","import { isRef, toRef } from \"vue\";\nimport { useNuxtApp } from \"../nuxt.js\";\nimport { toArray } from \"../utils.js\";\nconst useStateKeyPrefix = \"$s\";\nexport function useState(...args) {\n  const autoKey = typeof args[args.length - 1] === \"string\" ? args.pop() : void 0;\n  if (typeof args[0] !== \"string\") {\n    args.unshift(autoKey);\n  }\n  const [_key, init] = args;\n  if (!_key || typeof _key !== \"string\") {\n    throw new TypeError(\"[nuxt] [useState] key must be a string: \" + _key);\n  }\n  if (init !== void 0 && typeof init !== \"function\") {\n    throw new Error(\"[nuxt] [useState] init must be a function: \" + init);\n  }\n  const key = useStateKeyPrefix + _key;\n  const nuxtApp = useNuxtApp();\n  const state = toRef(nuxtApp.payload.state, key);\n  if (state.value === void 0 && init) {\n    const initialValue = init();\n    if (isRef(initialValue)) {\n      nuxtApp.payload.state[key] = initialValue;\n      return initialValue;\n    }\n    state.value = initialValue;\n  }\n  return state;\n}\nexport function clearNuxtState(keys) {\n  const nuxtApp = useNuxtApp();\n  const _allKeys = Object.keys(nuxtApp.payload.state).map((key) => key.substring(useStateKeyPrefix.length));\n  const _keys = !keys ? _allKeys : typeof keys === \"function\" ? _allKeys.filter(keys) : toArray(keys);\n  for (const _key of _keys) {\n    const key = useStateKeyPrefix + _key;\n    if (key in nuxtApp.payload.state) {\n      nuxtApp.payload.state[key] = void 0;\n    }\n  }\n}\n","import { reactive, ref } from \"vue\";\nimport { defineNuxtPlugin, isVue2, isVue3, useHead, useState, useRouter, useRequestHeaders } from \"#imports\";\nimport { preference, hid, script, dataValue, storage, storageKey } from \"#color-mode-options\";\nconst addScript = (head) => {\n  head.script = head.script || [];\n  head.script.push({\n    hid,\n    innerHTML: script\n  });\n  const serializeProp = \"__dangerouslyDisableSanitizersByTagID\";\n  head[serializeProp] = head[serializeProp] || {};\n  head[serializeProp][hid] = [\"innerHTML\"];\n};\nexport default defineNuxtPlugin((nuxtApp) => {\n  const colorMode = nuxtApp.ssrContext?.islandContext ? ref({}) : useState(\"color-mode\", () => reactive({\n    preference,\n    value: preference,\n    unknown: true,\n    forced: false\n  })).value;\n  const htmlAttrs = {};\n  if (isVue2) {\n    const app = nuxtApp.nuxt2Context.app;\n    if (typeof app.head === \"function\") {\n      const originalHead = app.head;\n      app.head = function() {\n        const head = originalHead.call(this) || {};\n        addScript(head);\n        head.htmlAttrs = htmlAttrs;\n        return head;\n      };\n    } else {\n      addScript(app.head);\n      app.head.htmlAttrs = htmlAttrs;\n    }\n  }\n  if (isVue3) {\n    if (storage === \"cookie\") {\n      const { cookie } = useRequestHeaders([\"cookie\"]);\n      const [, value] = cookie?.split(\"; \").map((s) => s.split(\"=\")).find(([k]) => k === storageKey) ?? [];\n      if (value) {\n        colorMode.preference = value;\n      }\n    }\n    useHead({ htmlAttrs });\n  }\n  useRouter().afterEach((to) => {\n    const forcedColorMode = isVue2 ? to.matched[0]?.components.default?.options?.colorMode : to.meta.colorMode;\n    if (forcedColorMode && forcedColorMode !== \"system\") {\n      colorMode.value = htmlAttrs[\"data-color-mode-forced\"] = forcedColorMode;\n      if (dataValue) {\n        htmlAttrs[`data-${dataValue}`] = colorMode.value;\n      }\n      colorMode.forced = true;\n    } else if (forcedColorMode === \"system\") {\n      console.warn(\"You cannot force the colorMode to system at the page level.\");\n    }\n  });\n  nuxtApp.provide(\"colorMode\", colorMode);\n});\n","import { addAPIProvider, _api, setCustomIconsLoader } from \"@iconify/vue\";\nimport { defineNuxtPlugin, useAppConfig, useRuntimeConfig } from \"#imports\";\nexport default defineNuxtPlugin({\n  name: \"@nuxt/icon\",\n  setup() {\n    const configs = useRuntimeConfig();\n    const options = useAppConfig().icon;\n    _api.setFetch($fetch.native);\n    const resources = [];\n    if (options.provider === \"server\") {\n      const baseURL = configs.app?.baseURL?.replace(/\\/$/, \"\") ?? \"\";\n      resources.push(baseURL + (options.localApiEndpoint || \"/api/_nuxt_icon\"));\n      if (options.fallbackToApi === true || options.fallbackToApi === \"client-only\") {\n        resources.push(options.iconifyApiEndpoint);\n      }\n    } else if (options.provider === \"none\") {\n      _api.setFetch(() => Promise.resolve(new Response()));\n    } else {\n      resources.push(options.iconifyApiEndpoint);\n    }\n    async function customIconLoader(icons, prefix) {\n      try {\n        const data = await $fetch(resources[0] + \"/\" + prefix + \".json\", {\n          query: {\n            icons: icons.join(\",\")\n          }\n        });\n        if (!data || data.prefix !== prefix || !data.icons)\n          throw new Error(\"Invalid data\" + JSON.stringify(data));\n        return data;\n      } catch (e) {\n        console.error(\"Failed to load custom icons\", e);\n        return null;\n      }\n    }\n    addAPIProvider(\"\", { resources });\n    for (const prefix of options.customCollections || []) {\n      if (prefix)\n        setCustomIconsLoader(customIconLoader, prefix);\n    }\n  }\n  // For type portability\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n});\n","import unhead_k2P3m_ZDyjlr2mMYnoDPwavjsDN8hBlk9cFai0bbopU from \"C:/Users/abdul/Downloads/abdullah-developer/node_modules/nuxt/dist/head/runtime/plugins/unhead.js\";\nimport router_GNCWhvtYfLTYRZZ135CdFAEjxdMexN0ixiUYCAN_tpw from \"C:/Users/abdul/Downloads/abdullah-developer/node_modules/nuxt/dist/pages/runtime/plugins/router.js\";\nimport revive_payload_server_MVtmlZaQpj6ApFmshWfUWl5PehCebzaBf2NuRMiIbms from \"C:/Users/abdul/Downloads/abdullah-developer/node_modules/nuxt/dist/app/plugins/revive-payload.server.js\";\nimport components_plugin_z4hgvsiddfKkfXTP6M8M4zG5Cb7sGnDhcryKVM45Di4 from \"C:/Users/abdul/Downloads/abdullah-developer/.nuxt/components.plugin.mjs\";\nimport slideovers_g1RyjnFCC2XCqS3NLpv7yngCZ5AzjpmT7UJr_dW3BbY from \"C:/Users/abdul/Downloads/abdullah-developer/node_modules/@nuxt/ui/dist/runtime/plugins/slideovers.js\";\nimport modals_JhH8M1KzF3pQyhcHsoNTBLd8tKGet6zo2zTBVDe7nK4 from \"C:/Users/abdul/Downloads/abdullah-developer/node_modules/@nuxt/ui/dist/runtime/plugins/modals.js\";\nimport colors_E7kSti5pGZ28QhUUurq6gGRU3l65WuXO_KJC3GQgzFo from \"C:/Users/abdul/Downloads/abdullah-developer/node_modules/@nuxt/ui/dist/runtime/plugins/colors.js\";\nimport plugin_server_9Ca9_HhnjAGwBWpwAydRauMHxWoxTDY60BrArRnXN_A from \"C:/Users/abdul/Downloads/abdullah-developer/node_modules/@nuxtjs/color-mode/dist/runtime/plugin.server.js\";\nimport plugin_MeUvTuoKUi51yb_kBguab6hdcExVXeTtZtTg9TZZBB8 from \"C:/Users/abdul/Downloads/abdullah-developer/node_modules/@nuxt/icon/dist/runtime/plugin.js\";\nexport default [\n  unhead_k2P3m_ZDyjlr2mMYnoDPwavjsDN8hBlk9cFai0bbopU,\n  router_GNCWhvtYfLTYRZZ135CdFAEjxdMexN0ixiUYCAN_tpw,\n  revive_payload_server_MVtmlZaQpj6ApFmshWfUWl5PehCebzaBf2NuRMiIbms,\n  components_plugin_z4hgvsiddfKkfXTP6M8M4zG5Cb7sGnDhcryKVM45Di4,\n  slideovers_g1RyjnFCC2XCqS3NLpv7yngCZ5AzjpmT7UJr_dW3BbY,\n  modals_JhH8M1KzF3pQyhcHsoNTBLd8tKGet6zo2zTBVDe7nK4,\n  colors_E7kSti5pGZ28QhUUurq6gGRU3l65WuXO_KJC3GQgzFo,\n  plugin_server_9Ca9_HhnjAGwBWpwAydRauMHxWoxTDY60BrArRnXN_A,\n  plugin_MeUvTuoKUi51yb_kBguab6hdcExVXeTtZtTg9TZZBB8\n]","import { defineAsyncComponent } from 'vue'\nexport default {\n  app: defineAsyncComponent(() => import(\"C:/Users/abdul/Downloads/abdullah-developer/layouts/app.vue\").then(m => m.default || m))\n}","import { Suspense, computed, defineComponent, h, inject, mergeProps, nextTick, onMounted, provide, shallowReactive, shallowRef, unref } from \"vue\";\nimport { useRoute, useRouter } from \"../composables/router.js\";\nimport { useNuxtApp } from \"../nuxt.js\";\nimport { _wrapInTransition } from \"./utils.js\";\nimport { LayoutMetaSymbol, PageRouteSymbol } from \"./injections.js\";\nimport { useRoute as useVueRouterRoute } from \"#build/pages\";\nimport layouts from \"#build/layouts\";\nimport { appLayoutTransition as defaultLayoutTransition } from \"#build/nuxt.config.mjs\";\nconst LayoutLoader = defineComponent({\n  name: \"LayoutLoader\",\n  inheritAttrs: false,\n  props: {\n    name: String,\n    layoutProps: Object\n  },\n  setup(props, context) {\n    return () => h(layouts[props.name], props.layoutProps, context.slots);\n  }\n});\nconst nuxtLayoutProps = {\n  name: {\n    type: [String, Boolean, Object],\n    default: null\n  },\n  fallback: {\n    type: [String, Object],\n    default: null\n  }\n};\nexport default defineComponent({\n  name: \"NuxtLayout\",\n  inheritAttrs: false,\n  props: nuxtLayoutProps,\n  setup(props, context) {\n    const nuxtApp = useNuxtApp();\n    const injectedRoute = inject(PageRouteSymbol);\n    const shouldUseEagerRoute = !injectedRoute || injectedRoute === useRoute();\n    const route = shouldUseEagerRoute ? useVueRouterRoute() : injectedRoute;\n    const layout = computed(() => {\n      let layout2 = unref(props.name) ?? route?.meta.layout ?? \"default\";\n      if (layout2 && !(layout2 in layouts)) {\n        if (import.meta.dev && layout2 !== \"default\") {\n          console.warn(`Invalid layout \\`${layout2}\\` selected.`);\n        }\n        if (props.fallback) {\n          layout2 = unref(props.fallback);\n        }\n      }\n      return layout2;\n    });\n    const layoutRef = shallowRef();\n    context.expose({ layoutRef });\n    const done = nuxtApp.deferHydration();\n    if (import.meta.client && nuxtApp.isHydrating) {\n      const removeErrorHook = nuxtApp.hooks.hookOnce(\"app:error\", done);\n      useRouter().beforeEach(removeErrorHook);\n    }\n    if (import.meta.dev) {\n      nuxtApp._isNuxtLayoutUsed = true;\n    }\n    let lastLayout;\n    return () => {\n      const hasLayout = layout.value && layout.value in layouts;\n      const transitionProps = route?.meta.layoutTransition ?? defaultLayoutTransition;\n      const previouslyRenderedLayout = lastLayout;\n      lastLayout = layout.value;\n      return _wrapInTransition(hasLayout && transitionProps, {\n        default: () => h(Suspense, { suspensible: true, onResolve: () => {\n          nextTick(done);\n        } }, {\n          default: () => h(\n            LayoutProvider,\n            {\n              layoutProps: mergeProps(context.attrs, { ref: layoutRef }),\n              key: layout.value || void 0,\n              name: layout.value,\n              shouldProvide: !props.name,\n              isRenderingNewLayout: (name) => {\n                return name !== previouslyRenderedLayout && name === layout.value;\n              },\n              hasTransition: !!transitionProps\n            },\n            context.slots\n          )\n        })\n      }).default();\n    };\n  }\n});\nconst LayoutProvider = defineComponent({\n  name: \"NuxtLayoutProvider\",\n  inheritAttrs: false,\n  props: {\n    name: {\n      type: [String, Boolean]\n    },\n    layoutProps: {\n      type: Object\n    },\n    hasTransition: {\n      type: Boolean\n    },\n    shouldProvide: {\n      type: Boolean\n    },\n    isRenderingNewLayout: {\n      type: Function,\n      required: true\n    }\n  },\n  setup(props, context) {\n    const name = props.name;\n    if (props.shouldProvide) {\n      provide(LayoutMetaSymbol, {\n        isCurrent: (route) => name === (route.meta.layout ?? \"default\")\n      });\n    }\n    const injectedRoute = inject(PageRouteSymbol);\n    const isNotWithinNuxtPage = injectedRoute && injectedRoute === useRoute();\n    if (isNotWithinNuxtPage) {\n      const vueRouterRoute = useVueRouterRoute();\n      const reactiveChildRoute = {};\n      for (const _key in vueRouterRoute) {\n        const key = _key;\n        Object.defineProperty(reactiveChildRoute, key, {\n          enumerable: true,\n          get: () => {\n            return props.isRenderingNewLayout(props.name) ? vueRouterRoute[key] : injectedRoute[key];\n          }\n        });\n      }\n      provide(PageRouteSymbol, shallowReactive(reactiveChildRoute));\n    }\n    let vnode;\n    if (import.meta.dev && import.meta.client) {\n      onMounted(() => {\n        nextTick(() => {\n          if ([\"#comment\", \"#text\"].includes(vnode?.el?.nodeName)) {\n            if (name) {\n              console.warn(`[nuxt] \\`${name}\\` layout does not have a single root node and will cause errors when navigating between routes.`);\n            } else {\n              console.warn(\"[nuxt] `<NuxtLayout>` needs to be passed a single root node in its default slot.\");\n            }\n          }\n        });\n      });\n    }\n    return () => {\n      if (!name || typeof name === \"string\" && !(name in layouts)) {\n        if (import.meta.dev && import.meta.client && props.hasTransition) {\n          vnode = context.slots.default?.();\n          return vnode;\n        }\n        return context.slots.default?.();\n      }\n      if (import.meta.dev && import.meta.client && props.hasTransition) {\n        vnode = h(\n          LayoutLoader,\n          { key: name, layoutProps: props.layoutProps, name },\n          context.slots\n        );\n        return vnode;\n      }\n      return h(\n        LayoutLoader,\n        { key: name, layoutProps: props.layoutProps, name },\n        context.slots\n      );\n    };\n  }\n});\n","import { createElementBlock, defineComponent } from \"vue\";\nexport default defineComponent({\n  name: \"ServerPlaceholder\",\n  render() {\n    return createElementBlock(\"div\");\n  }\n});\n","import { defineComponent, h, nextTick, onMounted, provide, shallowReactive } from \"vue\";\nimport { PageRouteSymbol } from \"./injections.js\";\nexport const defineRouteProvider = (name = \"RouteProvider\") => defineComponent({\n  name,\n  props: {\n    route: {\n      type: Object,\n      required: true\n    },\n    vnode: Object,\n    vnodeRef: Object,\n    renderKey: String,\n    trackRootNodes: Boolean\n  },\n  setup(props) {\n    const previousKey = props.renderKey;\n    const previousRoute = props.route;\n    const route = {};\n    for (const key in props.route) {\n      Object.defineProperty(route, key, {\n        get: () => previousKey === props.renderKey ? props.route[key] : previousRoute[key],\n        enumerable: true\n      });\n    }\n    provide(PageRouteSymbol, shallowReactive(route));\n    let vnode;\n    if (import.meta.dev && import.meta.client && props.trackRootNodes) {\n      onMounted(() => {\n        nextTick(() => {\n          if ([\"#comment\", \"#text\"].includes(vnode?.el?.nodeName)) {\n            const filename = vnode?.type?.__file;\n            console.warn(`[nuxt] \\`${filename}\\` does not have a single root node and will cause errors when navigating between routes.`);\n          }\n        });\n      });\n    }\n    return () => {\n      if (!props.vnode) {\n        return props.vnode;\n      }\n      if (import.meta.dev && import.meta.client) {\n        vnode = h(props.vnode, { ref: props.vnodeRef });\n        return vnode;\n      }\n      return h(props.vnode, { ref: props.vnodeRef });\n    };\n  }\n});\nexport const RouteProvider = defineRouteProvider();\n","import { Fragment, Suspense, defineComponent, h, inject, nextTick, onBeforeUnmount, ref, watch } from \"vue\";\nimport { RouterView } from \"vue-router\";\nimport { defu } from \"defu\";\nimport { generateRouteKey, toArray, wrapInKeepAlive } from \"./utils.js\";\nimport { RouteProvider, defineRouteProvider } from \"#app/components/route-provider\";\nimport { useNuxtApp } from \"#app/nuxt\";\nimport { useRouter } from \"#app/composables/router\";\nimport { _wrapInTransition } from \"#app/components/utils\";\nimport { LayoutMetaSymbol, PageRouteSymbol } from \"#app/components/injections\";\nimport { appKeepalive as defaultKeepaliveConfig, appPageTransition as defaultPageTransition } from \"#build/nuxt.config.mjs\";\nconst _routeProviders = import.meta.dev ? /* @__PURE__ */ new Map() : /* @__PURE__ */ new WeakMap();\nexport default defineComponent({\n  name: \"NuxtPage\",\n  inheritAttrs: false,\n  props: {\n    name: {\n      type: String\n    },\n    transition: {\n      type: [Boolean, Object],\n      default: void 0\n    },\n    keepalive: {\n      type: [Boolean, Object],\n      default: void 0\n    },\n    route: {\n      type: Object\n    },\n    pageKey: {\n      type: [Function, String],\n      default: null\n    }\n  },\n  setup(props, { attrs, slots, expose }) {\n    const nuxtApp = useNuxtApp();\n    const pageRef = ref();\n    const forkRoute = inject(PageRouteSymbol, null);\n    let previousPageKey;\n    expose({ pageRef });\n    const _layoutMeta = inject(LayoutMetaSymbol, null);\n    let vnode;\n    const done = nuxtApp.deferHydration();\n    if (import.meta.client && nuxtApp.isHydrating) {\n      const removeErrorHook = nuxtApp.hooks.hookOnce(\"app:error\", done);\n      useRouter().beforeEach(removeErrorHook);\n    }\n    if (import.meta.client && props.pageKey) {\n      watch(() => props.pageKey, (next, prev) => {\n        if (next !== prev) {\n          nuxtApp.callHook(\"page:loading:start\");\n        }\n      });\n    }\n    if (import.meta.dev) {\n      nuxtApp._isNuxtPageUsed = true;\n    }\n    let pageLoadingEndHookAlreadyCalled = false;\n    if (import.meta.client) {\n      const unsub = useRouter().beforeResolve(() => {\n        pageLoadingEndHookAlreadyCalled = false;\n      });\n      onBeforeUnmount(() => {\n        unsub();\n      });\n    }\n    return () => {\n      return h(RouterView, { name: props.name, route: props.route, ...attrs }, {\n        default: import.meta.server ? (routeProps) => {\n          return h(Suspense, { suspensible: true }, {\n            default() {\n              return h(RouteProvider, {\n                vnode: slots.default ? normalizeSlot(slots.default, routeProps) : routeProps.Component,\n                route: routeProps.route,\n                vnodeRef: pageRef\n              });\n            }\n          });\n        } : (routeProps) => {\n          const isRenderingNewRouteInOldFork = haveParentRoutesRendered(forkRoute, routeProps.route, routeProps.Component);\n          const hasSameChildren = forkRoute && forkRoute.matched.length === routeProps.route.matched.length;\n          if (!routeProps.Component) {\n            if (vnode && !hasSameChildren) {\n              return vnode;\n            }\n            done();\n            return;\n          }\n          if (vnode && _layoutMeta && !_layoutMeta.isCurrent(routeProps.route)) {\n            return vnode;\n          }\n          if (isRenderingNewRouteInOldFork && forkRoute && (!_layoutMeta || _layoutMeta?.isCurrent(forkRoute))) {\n            if (hasSameChildren) {\n              return vnode;\n            }\n            return null;\n          }\n          const key = generateRouteKey(routeProps, props.pageKey);\n          const willRenderAnotherChild = hasChildrenRoutes(forkRoute, routeProps.route, routeProps.Component);\n          if (!nuxtApp.isHydrating && previousPageKey === key && !willRenderAnotherChild) {\n            nextTick(() => {\n              pageLoadingEndHookAlreadyCalled = true;\n              nuxtApp.callHook(\"page:loading:end\");\n            });\n          }\n          previousPageKey = key;\n          const hasTransition = !!(props.transition ?? routeProps.route.meta.pageTransition ?? defaultPageTransition);\n          const transitionProps = hasTransition && _mergeTransitionProps([\n            props.transition,\n            routeProps.route.meta.pageTransition,\n            defaultPageTransition,\n            {\n              onAfterLeave() {\n                delete nuxtApp._runningTransition;\n                nuxtApp.callHook(\"page:transition:finish\", routeProps.Component);\n              }\n            }\n          ]);\n          const keepaliveConfig = props.keepalive ?? routeProps.route.meta.keepalive ?? defaultKeepaliveConfig;\n          vnode = _wrapInTransition(\n            hasTransition && transitionProps,\n            wrapInKeepAlive(\n              keepaliveConfig,\n              h(Suspense, {\n                suspensible: true,\n                onPending: () => {\n                  if (hasTransition) {\n                    nuxtApp._runningTransition = true;\n                  }\n                  nuxtApp.callHook(\"page:start\", routeProps.Component);\n                },\n                onResolve: () => {\n                  nextTick(() => nuxtApp.callHook(\"page:finish\", routeProps.Component).then(() => {\n                    delete nuxtApp._runningTransition;\n                    if (!pageLoadingEndHookAlreadyCalled && !willRenderAnotherChild) {\n                      pageLoadingEndHookAlreadyCalled = true;\n                      return nuxtApp.callHook(\"page:loading:end\");\n                    }\n                  }).finally(done));\n                }\n              }, {\n                default: () => {\n                  const routeProviderProps = {\n                    key: key || void 0,\n                    vnode: slots.default ? normalizeSlot(slots.default, routeProps) : routeProps.Component,\n                    route: routeProps.route,\n                    renderKey: key || void 0,\n                    trackRootNodes: hasTransition,\n                    vnodeRef: pageRef\n                  };\n                  if (!keepaliveConfig) {\n                    return h(RouteProvider, routeProviderProps);\n                  }\n                  const routerComponentType = routeProps.Component.type;\n                  const routeProviderKey = import.meta.dev ? routerComponentType.name || routerComponentType.__name : routerComponentType;\n                  let PageRouteProvider = _routeProviders.get(routeProviderKey);\n                  if (!PageRouteProvider) {\n                    PageRouteProvider = defineRouteProvider(routerComponentType.name || routerComponentType.__name);\n                    _routeProviders.set(routeProviderKey, PageRouteProvider);\n                  }\n                  return h(PageRouteProvider, routeProviderProps);\n                }\n              })\n            )\n          ).default();\n          return vnode;\n        }\n      });\n    };\n  }\n});\nfunction _mergeTransitionProps(routeProps) {\n  const _props = [];\n  for (const prop of routeProps) {\n    if (!prop) {\n      continue;\n    }\n    _props.push({\n      ...prop,\n      onAfterLeave: prop.onAfterLeave ? toArray(prop.onAfterLeave) : void 0\n    });\n  }\n  return defu(..._props);\n}\nfunction haveParentRoutesRendered(fork, newRoute, Component) {\n  if (!fork) {\n    return false;\n  }\n  const index = newRoute.matched.findIndex((m) => m.components?.default === Component?.type);\n  if (!index || index === -1) {\n    return false;\n  }\n  return newRoute.matched.slice(0, index).some(\n    (c, i) => c.components?.default !== fork.matched[i]?.components?.default\n  ) || Component && generateRouteKey({ route: newRoute, Component }) !== generateRouteKey({ route: fork, Component });\n}\nfunction hasChildrenRoutes(fork, newRoute, Component) {\n  if (!fork) {\n    return false;\n  }\n  const index = newRoute.matched.findIndex((m) => m.components?.default === Component?.type);\n  return index < newRoute.matched.length - 1;\n}\nfunction normalizeSlot(slot, data) {\n  const slotContent = slot(data);\n  return slotContent.length === 1 ? h(slotContent[0]) : h(Fragment, void 0, slotContent);\n}\n","<template>\n  <NuxtLayout>\n    <NuxtRouteAnnouncer />\n    <NuxtPage />\n  </NuxtLayout>\n</template>\n","import { computed, defineComponent, h, inject, onBeforeUnmount, onMounted, provide, ref, resolveComponent, shallowRef } from \"vue\";\nimport { hasProtocol, joinURL, parseQuery, withTrailingSlash, withoutTrailingSlash } from \"ufo\";\nimport { preloadRouteComponents } from \"../composables/preload.js\";\nimport { onNuxtReady } from \"../composables/ready.js\";\nimport { navigateTo, resolveRouteObject, useRouter } from \"../composables/router.js\";\nimport { useNuxtApp, useRuntimeConfig } from \"../nuxt.js\";\nimport { cancelIdleCallback, requestIdleCallback } from \"../compat/idle-callback.js\";\nimport { nuxtLinkDefaults } from \"#build/nuxt.config.mjs\";\nimport { hashMode } from \"#build/router.options\";\nconst firstNonUndefined = (...args) => args.find((arg) => arg !== void 0);\nconst NuxtLinkDevKeySymbol = Symbol(\"nuxt-link-dev-key\");\n// @__NO_SIDE_EFFECTS__\nexport function defineNuxtLink(options) {\n  const componentName = options.componentName || \"NuxtLink\";\n  function checkPropConflicts(props, main, sub) {\n    if (import.meta.dev && props[main] !== void 0 && props[sub] !== void 0) {\n      console.warn(`[${componentName}] \\`${main}\\` and \\`${sub}\\` cannot be used together. \\`${sub}\\` will be ignored.`);\n    }\n  }\n  function isHashLinkWithoutHashMode(link) {\n    return !hashMode && typeof link === \"string\" && link.startsWith(\"#\");\n  }\n  function resolveTrailingSlashBehavior(to, resolve, trailingSlash) {\n    const effectiveTrailingSlash = trailingSlash ?? options.trailingSlash;\n    if (!to || effectiveTrailingSlash !== \"append\" && effectiveTrailingSlash !== \"remove\") {\n      return to;\n    }\n    if (typeof to === \"string\") {\n      return applyTrailingSlashBehavior(to, effectiveTrailingSlash);\n    }\n    const path = \"path\" in to && to.path !== void 0 ? to.path : resolve(to).path;\n    const resolvedPath = {\n      ...to,\n      name: void 0,\n      // named routes would otherwise always override trailing slash behavior\n      path: applyTrailingSlashBehavior(path, effectiveTrailingSlash)\n    };\n    return resolvedPath;\n  }\n  function useNuxtLink(props) {\n    const router = useRouter();\n    const config = useRuntimeConfig();\n    const hasTarget = computed(() => !!props.target && props.target !== \"_self\");\n    const isAbsoluteUrl = computed(() => {\n      const path = props.to || props.href || \"\";\n      return typeof path === \"string\" && hasProtocol(path, { acceptRelative: true });\n    });\n    const builtinRouterLink = resolveComponent(\"RouterLink\");\n    const useBuiltinLink = builtinRouterLink && typeof builtinRouterLink !== \"string\" ? builtinRouterLink.useLink : void 0;\n    const isExternal = computed(() => {\n      if (props.external) {\n        return true;\n      }\n      const path = props.to || props.href || \"\";\n      if (typeof path === \"object\") {\n        return false;\n      }\n      return path === \"\" || isAbsoluteUrl.value;\n    });\n    const to = computed(() => {\n      checkPropConflicts(props, \"to\", \"href\");\n      const path = props.to || props.href || \"\";\n      if (isExternal.value) {\n        return path;\n      }\n      return resolveTrailingSlashBehavior(path, router.resolve, props.trailingSlash);\n    });\n    const link = isExternal.value ? void 0 : useBuiltinLink?.({ ...props, to });\n    const href = computed(() => {\n      const effectiveTrailingSlash = props.trailingSlash ?? options.trailingSlash;\n      if (!to.value || isAbsoluteUrl.value || isHashLinkWithoutHashMode(to.value)) {\n        return to.value;\n      }\n      if (isExternal.value) {\n        const path = typeof to.value === \"object\" && \"path\" in to.value ? resolveRouteObject(to.value) : to.value;\n        const href2 = typeof path === \"object\" ? router.resolve(path).href : path;\n        return applyTrailingSlashBehavior(href2, effectiveTrailingSlash);\n      }\n      if (typeof to.value === \"object\") {\n        return router.resolve(to.value)?.href ?? null;\n      }\n      return applyTrailingSlashBehavior(joinURL(config.app.baseURL, to.value), effectiveTrailingSlash);\n    });\n    return {\n      to,\n      hasTarget,\n      isAbsoluteUrl,\n      isExternal,\n      //\n      href,\n      isActive: link?.isActive ?? computed(() => to.value === router.currentRoute.value.path),\n      isExactActive: link?.isExactActive ?? computed(() => to.value === router.currentRoute.value.path),\n      route: link?.route ?? computed(() => router.resolve(to.value)),\n      async navigate(_e) {\n        await navigateTo(href.value, { replace: props.replace, external: isExternal.value || hasTarget.value });\n      }\n    };\n  }\n  return defineComponent({\n    name: componentName,\n    props: {\n      // Routing\n      to: {\n        type: [String, Object],\n        default: void 0,\n        required: false\n      },\n      href: {\n        type: [String, Object],\n        default: void 0,\n        required: false\n      },\n      // Attributes\n      target: {\n        type: String,\n        default: void 0,\n        required: false\n      },\n      rel: {\n        type: String,\n        default: void 0,\n        required: false\n      },\n      noRel: {\n        type: Boolean,\n        default: void 0,\n        required: false\n      },\n      // Prefetching\n      prefetch: {\n        type: Boolean,\n        default: void 0,\n        required: false\n      },\n      prefetchOn: {\n        type: [String, Object],\n        default: void 0,\n        required: false\n      },\n      noPrefetch: {\n        type: Boolean,\n        default: void 0,\n        required: false\n      },\n      // Styling\n      activeClass: {\n        type: String,\n        default: void 0,\n        required: false\n      },\n      exactActiveClass: {\n        type: String,\n        default: void 0,\n        required: false\n      },\n      prefetchedClass: {\n        type: String,\n        default: void 0,\n        required: false\n      },\n      // Vue Router's `<RouterLink>` additional props\n      replace: {\n        type: Boolean,\n        default: void 0,\n        required: false\n      },\n      ariaCurrentValue: {\n        type: String,\n        default: void 0,\n        required: false\n      },\n      // Edge cases handling\n      external: {\n        type: Boolean,\n        default: void 0,\n        required: false\n      },\n      // Slot API\n      custom: {\n        type: Boolean,\n        default: void 0,\n        required: false\n      },\n      // Behavior\n      trailingSlash: {\n        type: String,\n        default: void 0,\n        required: false\n      }\n    },\n    useLink: useNuxtLink,\n    setup(props, { slots }) {\n      const router = useRouter();\n      const { to, href, navigate, isExternal, hasTarget, isAbsoluteUrl } = useNuxtLink(props);\n      const prefetched = shallowRef(false);\n      const el = import.meta.server ? void 0 : ref(null);\n      const elRef = import.meta.server ? void 0 : (ref2) => {\n        el.value = props.custom ? ref2?.$el?.nextElementSibling : ref2?.$el;\n      };\n      function shouldPrefetch(mode) {\n        if (import.meta.server) {\n          return;\n        }\n        return !prefetched.value && (typeof props.prefetchOn === \"string\" ? props.prefetchOn === mode : props.prefetchOn?.[mode] ?? options.prefetchOn?.[mode]) && (props.prefetch ?? options.prefetch) !== false && props.noPrefetch !== true && props.target !== \"_blank\" && !isSlowConnection();\n      }\n      async function prefetch(nuxtApp = useNuxtApp()) {\n        if (import.meta.server) {\n          return;\n        }\n        if (prefetched.value) {\n          return;\n        }\n        prefetched.value = true;\n        const path = typeof to.value === \"string\" ? to.value : isExternal.value ? resolveRouteObject(to.value) : router.resolve(to.value).fullPath;\n        const normalizedPath = isExternal.value ? new URL(path, window.location.href).href : path;\n        await Promise.all([\n          nuxtApp.hooks.callHook(\"link:prefetch\", normalizedPath).catch(() => {\n          }),\n          !isExternal.value && !hasTarget.value && preloadRouteComponents(to.value, router).catch(() => {\n          })\n        ]);\n      }\n      if (import.meta.client) {\n        checkPropConflicts(props, \"prefetch\", \"noPrefetch\");\n        if (shouldPrefetch(\"visibility\")) {\n          const nuxtApp = useNuxtApp();\n          let idleId;\n          let unobserve = null;\n          onMounted(() => {\n            const observer = useObserver();\n            onNuxtReady(() => {\n              idleId = requestIdleCallback(() => {\n                if (el?.value?.tagName) {\n                  unobserve = observer.observe(el.value, async () => {\n                    unobserve?.();\n                    unobserve = null;\n                    await prefetch(nuxtApp);\n                  });\n                }\n              });\n            });\n          });\n          onBeforeUnmount(() => {\n            if (idleId) {\n              cancelIdleCallback(idleId);\n            }\n            unobserve?.();\n            unobserve = null;\n          });\n        }\n      }\n      if (import.meta.dev && import.meta.server && !props.custom) {\n        const isNuxtLinkChild = inject(NuxtLinkDevKeySymbol, false);\n        if (isNuxtLinkChild) {\n          console.log(\"[nuxt] [NuxtLink] You can't nest one <a> inside another <a>. This will cause a hydration error on client-side. You can pass the `custom` prop to take full control of the markup.\");\n        } else {\n          provide(NuxtLinkDevKeySymbol, true);\n        }\n      }\n      return () => {\n        if (!isExternal.value && !hasTarget.value && !isHashLinkWithoutHashMode(to.value)) {\n          const routerLinkProps = {\n            ref: elRef,\n            to: to.value,\n            activeClass: props.activeClass || options.activeClass,\n            exactActiveClass: props.exactActiveClass || options.exactActiveClass,\n            replace: props.replace,\n            ariaCurrentValue: props.ariaCurrentValue,\n            custom: props.custom\n          };\n          if (!props.custom) {\n            if (import.meta.client) {\n              if (shouldPrefetch(\"interaction\")) {\n                routerLinkProps.onPointerenter = prefetch.bind(null, void 0);\n                routerLinkProps.onFocus = prefetch.bind(null, void 0);\n              }\n              if (prefetched.value) {\n                routerLinkProps.class = props.prefetchedClass || options.prefetchedClass;\n              }\n            }\n            routerLinkProps.rel = props.rel || void 0;\n          }\n          return h(\n            resolveComponent(\"RouterLink\"),\n            routerLinkProps,\n            slots.default\n          );\n        }\n        const target = props.target || null;\n        checkPropConflicts(props, \"noRel\", \"rel\");\n        const rel = firstNonUndefined(\n          // converts `\"\"` to `null` to prevent the attribute from being added as empty (`rel=\"\"`)\n          props.noRel ? \"\" : props.rel,\n          options.externalRelAttribute,\n          /*\n          * A fallback rel of `noopener noreferrer` is applied for external links or links that open in a new tab.\n          * This solves a reverse tabnapping security flaw in browsers pre-2021 as well as improving privacy.\n          */\n          isAbsoluteUrl.value || hasTarget.value ? \"noopener noreferrer\" : \"\"\n        ) || null;\n        if (props.custom) {\n          if (!slots.default) {\n            return null;\n          }\n          return slots.default({\n            href: href.value,\n            navigate,\n            prefetch,\n            get route() {\n              if (!href.value) {\n                return void 0;\n              }\n              const url = new URL(href.value, import.meta.client ? window.location.href : \"http://localhost\");\n              return {\n                path: url.pathname,\n                fullPath: url.pathname,\n                get query() {\n                  return parseQuery(url.search);\n                },\n                hash: url.hash,\n                params: {},\n                name: void 0,\n                matched: [],\n                redirectedFrom: void 0,\n                meta: {},\n                href: href.value\n              };\n            },\n            rel,\n            target,\n            isExternal: isExternal.value || hasTarget.value,\n            isActive: false,\n            isExactActive: false\n          });\n        }\n        return h(\"a\", {\n          ref: el,\n          href: href.value || null,\n          // converts `\"\"` to `null` to prevent the attribute from being added as empty (`href=\"\"`)\n          rel,\n          target,\n          onClick: (event) => {\n            if (isExternal.value || hasTarget.value) {\n              return;\n            }\n            event.preventDefault();\n            return props.replace ? router.replace(href.value) : router.push(href.value);\n          }\n        }, slots.default?.());\n      };\n    }\n    // }) as unknown as DefineComponent<NuxtLinkProps, object, object, ComputedOptions, MethodOptions, object, object, EmitsOptions, string, object, NuxtLinkProps, object, SlotsType<NuxtLinkSlots>>\n  });\n}\nexport default /* @__PURE__ */ defineNuxtLink(nuxtLinkDefaults);\nfunction applyTrailingSlashBehavior(to, trailingSlash) {\n  const normalizeFn = trailingSlash === \"append\" ? withTrailingSlash : withoutTrailingSlash;\n  const hasProtocolDifferentFromHttp = hasProtocol(to) && !to.startsWith(\"http\");\n  if (hasProtocolDifferentFromHttp) {\n    return to;\n  }\n  return normalizeFn(to, true);\n}\nfunction useObserver() {\n  if (import.meta.server) {\n    return;\n  }\n  const nuxtApp = useNuxtApp();\n  if (nuxtApp._observer) {\n    return nuxtApp._observer;\n  }\n  let observer = null;\n  const callbacks = /* @__PURE__ */ new Map();\n  const observe = (element, callback) => {\n    observer ||= new IntersectionObserver((entries) => {\n      for (const entry of entries) {\n        const callback2 = callbacks.get(entry.target);\n        const isVisible = entry.isIntersecting || entry.intersectionRatio > 0;\n        if (isVisible && callback2) {\n          callback2();\n        }\n      }\n    });\n    callbacks.set(element, callback);\n    observer.observe(element);\n    return () => {\n      callbacks.delete(element);\n      observer?.unobserve(element);\n      if (callbacks.size === 0) {\n        observer?.disconnect();\n        observer = null;\n      }\n    };\n  };\n  const _observer = nuxtApp._observer = {\n    observe\n  };\n  return _observer;\n}\nconst IS_2G_RE = /2g/;\nfunction isSlowConnection() {\n  if (import.meta.server) {\n    return;\n  }\n  const cn = navigator.connection;\n  if (cn && (cn.saveData || IS_2G_RE.test(cn.effectiveType))) {\n    return true;\n  }\n  return false;\n}\n","<template>\n  <component\n    :is=\"as\"\n    v-if=\"!to\"\n    :type=\"type\"\n    :disabled=\"disabled\"\n    v-bind=\"$attrs\"\n    :class=\"active ? activeClass : inactiveClass\"\n  >\n    <slot v-bind=\"{ isActive: active }\" />\n  </component>\n  <NuxtLink\n    v-else\n    v-slot=\"{ route, href, target, rel, navigate, isActive, isExactActive, isExternal }\"\n    v-bind=\"$props\"\n    custom\n  >\n    <a\n      v-bind=\"$attrs\"\n      :href=\"!disabled ? href : void 0\"\n      :aria-disabled=\"disabled ? 'true' : void 0\"\n      :role=\"disabled ? 'link' : void 0\"\n      :rel=\"rel\"\n      :target=\"target\"\n      :class=\"active !== void 0 ? active ? activeClass : inactiveClass : resolveLinkClass(route, $route, { isActive, isExactActive })\"\n      :tabindex=\"disabled ? -1 : void 0\"\n      @click=\"(e) => !isExternal && !disabled && navigate(e)\"\n    >\n      <slot v-bind=\"{ isActive: active !== void 0 ? active : exact ? isExactActive : isActive }\" />\n    </a>\n  </NuxtLink>\n</template>\n\n<script>\nimport { isEqual, diff } from \"ohash/utils\";\nimport { defineComponent } from \"vue\";\nimport { nuxtLinkProps } from \"../../utils\";\nexport default defineComponent({\n  inheritAttrs: false,\n  props: {\n    ...nuxtLinkProps,\n    as: {\n      type: String,\n      default: \"button\"\n    },\n    type: {\n      type: String,\n      default: \"button\"\n    },\n    disabled: {\n      type: Boolean,\n      default: null\n    },\n    active: {\n      type: Boolean,\n      default: void 0\n    },\n    exact: {\n      type: Boolean,\n      default: false\n    },\n    exactQuery: {\n      type: [Boolean, String],\n      default: false\n    },\n    exactHash: {\n      type: Boolean,\n      default: false\n    },\n    inactiveClass: {\n      type: String,\n      default: void 0\n    }\n  },\n  setup(props) {\n    function isPartiallyEqual(item1, item2) {\n      const diffedKeys = diff(item1, item2).reduce((filtered, q) => {\n        if (q.type === \"added\") {\n          filtered.add(q.key);\n        }\n        return filtered;\n      }, /* @__PURE__ */ new Set());\n      const item1Filtered = Object.fromEntries(Object.entries(item1).filter(([key]) => !diffedKeys.has(key)));\n      const item2Filtered = Object.fromEntries(Object.entries(item2).filter(([key]) => !diffedKeys.has(key)));\n      return isEqual(item1Filtered, item2Filtered);\n    }\n    function resolveLinkClass(route, $route, { isActive, isExactActive }) {\n      if (props.exactQuery === \"partial\") {\n        if (!isPartiallyEqual(route.query, $route.query)) return props.inactiveClass;\n      } else if (props.exactQuery === true) {\n        if (!isEqual(route.query, $route.query)) return props.inactiveClass;\n      }\n      if (props.exactHash && route.hash !== $route.hash) {\n        return props.inactiveClass;\n      }\n      if (props.exact && isExactActive) {\n        return props.activeClass;\n      }\n      if (!props.exact && isActive) {\n        return props.activeClass;\n      }\n      return props.inactiveClass;\n    }\n    return {\n      resolveLinkClass\n    };\n  }\n});\n</script>\n","import { computed } from \"vue\";\nimport { getIcon as _getIcon, addIcon as _addIcon, loadIcon as _loadIcon } from \"@iconify/vue\";\nimport { useAppConfig } from \"#imports\";\nimport { init as initClientBundle } from \"#build/nuxt-icon-client-bundle\";\nexport { initClientBundle };\nexport async function loadIcon(name, timeout) {\n  if (!name)\n    return null;\n  initClientBundle(_addIcon);\n  const _icon = _getIcon(name);\n  if (_icon)\n    return _icon;\n  let timeoutWarn;\n  const load = _loadIcon(name).catch(() => {\n    console.warn(`[Icon] failed to load icon \\`${name}\\``);\n    return null;\n  });\n  if (timeout > 0)\n    await Promise.race([\n      load,\n      new Promise((resolve) => {\n        timeoutWarn = setTimeout(() => {\n          console.warn(`[Icon] loading icon \\`${name}\\` timed out after ${timeout}ms`);\n          resolve();\n        }, timeout);\n      })\n    ]).finally(() => clearTimeout(timeoutWarn));\n  else\n    await load;\n  return _getIcon(name);\n}\nexport function useResolvedName(getName) {\n  const options = useAppConfig().icon;\n  const collections = (options.collections || []).sort((a, b) => b.length - a.length);\n  return computed(() => {\n    const name = getName();\n    const bare = name.startsWith(options.cssSelectorPrefix) ? name.slice(options.cssSelectorPrefix.length) : name;\n    const resolved = options.aliases?.[bare] || bare;\n    if (!resolved.includes(\":\")) {\n      const collection = collections.find((c) => resolved.startsWith(c + \"-\"));\n      return collection ? collection + \":\" + resolved.slice(collection.length + 1) : resolved;\n    }\n    return resolved;\n  });\n}\nexport function resolveCustomizeFn(customize, globalCustomize) {\n  if (customize === false) return void 0;\n  if (customize === true || customize === null) return globalCustomize;\n  return customize;\n}\n","import { addIcon, getIcon as _getIcon } from \"@iconify/vue\";\nimport { computed, watch, h, defineComponent } from \"vue\";\nimport { getIconCSS } from \"@iconify/utils/lib/css/icon\";\nimport { loadIcon, resolveCustomizeFn } from \"./shared.js\";\nimport { useAppConfig, useNuxtApp, useHead, useRuntimeConfig, onServerPrefetch } from \"#imports\";\nlet cssSelectors;\nconst SYMBOL_SERVER_CSS = \"NUXT_ICONS_SERVER_CSS\";\nfunction escapeCssSelector(selector) {\n  return selector.replace(/([^\\w-])/g, \"\\\\$1\");\n}\nfunction getAllSelectors() {\n  if (cssSelectors)\n    return cssSelectors;\n  cssSelectors = /* @__PURE__ */ new Set();\n  const filter = (selector) => {\n    selector = selector.replace(/^:where\\((.*)\\)$/, \"$1\").trim();\n    if (selector.startsWith(\".\")) {\n      return selector;\n    }\n  };\n  const scanCssRules = (rules) => {\n    if (!rules?.length)\n      return;\n    for (const rule of rules) {\n      if (rule?.cssRules) {\n        scanCssRules(rule.cssRules);\n      }\n      const selectorRaw = rule?.selectorText;\n      if (typeof selectorRaw === \"string\") {\n        const selector = filter(selectorRaw);\n        if (selector)\n          cssSelectors.add(selector);\n      }\n    }\n  };\n  if (typeof document !== \"undefined\") {\n    for (const styleSheet of document.styleSheets) {\n      try {\n        const rules = styleSheet.cssRules || styleSheet.rules;\n        scanCssRules(rules);\n      } catch {\n      }\n    }\n  }\n  return cssSelectors;\n}\nexport const NuxtIconCss = /* @__PURE__ */ defineComponent({\n  name: \"NuxtIconCss\",\n  props: {\n    name: {\n      type: String,\n      required: true\n    },\n    customize: {\n      type: [Function, Boolean, null],\n      default: null,\n      required: false\n    }\n  },\n  setup(props) {\n    const nuxt = useNuxtApp();\n    const options = useAppConfig().icon;\n    const cssClass = computed(() => props.name ? options.cssSelectorPrefix + props.name : \"\");\n    function getIcon(name) {\n      if (!name)\n        return;\n      const icon = _getIcon(name);\n      if (icon)\n        return icon;\n      const payload = nuxt.payload?.data?.[name];\n      if (payload) {\n        addIcon(name, payload);\n        return payload;\n      }\n    }\n    const selector = computed(() => \".\" + escapeCssSelector(cssClass.value));\n    function getCSS(icon, withLayer = true) {\n      let iconSelector = selector.value;\n      if (options.cssWherePseudo) {\n        iconSelector = `:where(${iconSelector})`;\n      }\n      const css = getIconCSS(icon, {\n        iconSelector,\n        format: \"compressed\",\n        customise: resolveCustomizeFn(props.customize, options.customize)\n      });\n      if (options.cssLayer && withLayer) {\n        return `@layer ${options.cssLayer} { ${css} }`;\n      }\n      return css;\n    }\n    if (import.meta.client) {\n      const selectors = getAllSelectors();\n      async function mountCSS(icon) {\n        if (selectors.has(selector.value))\n          return;\n        if (typeof document === \"undefined\")\n          return;\n        const style = document.createElement(\"style\");\n        style.textContent = getCSS(icon);\n        if (import.meta.dev) {\n          style.dataset.nuxtIconDev = props.name;\n        }\n        const firstStyle = document.head.querySelector('style, link[rel=\"stylesheet\"]');\n        if (firstStyle)\n          document.head.insertBefore(style, firstStyle);\n        else\n          document.head.appendChild(style);\n        selectors.add(selector.value);\n      }\n      watch(\n        () => props.name,\n        () => {\n          if (selectors.has(selector.value)) {\n            return;\n          }\n          const data = getIcon(props.name);\n          if (data) {\n            mountCSS(data);\n          } else {\n            loadIcon(props.name, import.meta.server ? options.fetchTimeout : -1).then((data2) => {\n              if (data2)\n                mountCSS(data2);\n            }).catch(() => null);\n          }\n        },\n        { immediate: true }\n      );\n    }\n    onServerPrefetch(async () => {\n      if (import.meta.server) {\n        const configs = useRuntimeConfig().icon || {};\n        if (!configs?.serverKnownCssClasses?.includes(cssClass.value)) {\n          const icon = await loadIcon(props.name, options.fetchTimeout).catch(() => null);\n          if (!icon)\n            return null;\n          let ssrCSS = nuxt.vueApp._context.provides[SYMBOL_SERVER_CSS];\n          if (!ssrCSS) {\n            ssrCSS = nuxt.vueApp._context.provides[SYMBOL_SERVER_CSS] = /* @__PURE__ */ new Map();\n            nuxt.runWithContext(() => {\n              useHead({\n                style: [\n                  () => {\n                    const sep = import.meta.dev ? \"\\n\" : \"\";\n                    let css = Array.from(ssrCSS.values()).sort().join(sep);\n                    if (options.cssLayer) {\n                      css = `@layer ${options.cssLayer} {${sep}${css}${sep}}`;\n                    }\n                    return { innerHTML: css };\n                  }\n                ]\n              }, {\n                tagPriority: \"low\"\n              });\n            });\n          }\n          if (props.name && !ssrCSS.has(props.name)) {\n            const css = getCSS(icon, false);\n            ssrCSS.set(props.name, css);\n          }\n          return null;\n        }\n      }\n    });\n    return () => h(\"span\", { class: [\"iconify\", cssClass.value] });\n  }\n});\n","import { cloneVNode, createElementBlock, defineComponent, getCurrentInstance, h, onMounted, provide, shallowRef } from \"vue\";\nimport { isPromise } from \"@vue/shared\";\nimport { useNuxtApp } from \"../nuxt.js\";\nimport ServerPlaceholder from \"./server-placeholder.js\";\nimport { elToStaticVNode } from \"./utils.js\";\nexport const clientOnlySymbol = Symbol.for(\"nuxt:client-only\");\nconst STATIC_DIV = \"<div></div>\";\nexport default defineComponent({\n  name: \"ClientOnly\",\n  inheritAttrs: false,\n  props: [\"fallback\", \"placeholder\", \"placeholderTag\", \"fallbackTag\"],\n  ...import.meta.dev && {\n    slots: Object\n  },\n  setup(props, { slots, attrs }) {\n    const mounted = shallowRef(false);\n    onMounted(() => {\n      mounted.value = true;\n    });\n    if (import.meta.dev) {\n      const nuxtApp = useNuxtApp();\n      nuxtApp._isNuxtPageUsed = true;\n      nuxtApp._isNuxtLayoutUsed = true;\n    }\n    const vm = getCurrentInstance();\n    if (vm) {\n      vm._nuxtClientOnly = true;\n    }\n    provide(clientOnlySymbol, true);\n    return () => {\n      if (mounted.value) {\n        const vnodes = slots.default?.();\n        if (vnodes && vnodes.length === 1) {\n          return [cloneVNode(vnodes[0], attrs)];\n        }\n        return vnodes;\n      }\n      const slot = slots.fallback || slots.placeholder;\n      if (slot) {\n        return h(slot);\n      }\n      const fallbackStr = props.fallback || props.placeholder || \"\";\n      const fallbackTag = props.fallbackTag || props.placeholderTag || \"span\";\n      return createElementBlock(fallbackTag, attrs, fallbackStr);\n    };\n  }\n});\nconst cache = /* @__PURE__ */ new WeakMap();\n// @__NO_SIDE_EFFECTS__\nexport function createClientOnly(component) {\n  if (import.meta.server) {\n    return ServerPlaceholder;\n  }\n  if (cache.has(component)) {\n    return cache.get(component);\n  }\n  const clone = { ...component };\n  if (clone.render) {\n    clone.render = (ctx, cache2, $props, $setup, $data, $options) => {\n      if ($setup.mounted$ ?? ctx.mounted$) {\n        const res = component.render?.bind(ctx)(ctx, cache2, $props, $setup, $data, $options);\n        return res.children === null || typeof res.children === \"string\" ? cloneVNode(res) : h(res);\n      }\n      return elToStaticVNode(ctx._.vnode.el, STATIC_DIV);\n    };\n  } else {\n    clone.template &&= `\n      <template v-if=\"mounted$\">${component.template}</template>\n      <template v-else>${STATIC_DIV}</template>\n    `;\n  }\n  clone.setup = (props, ctx) => {\n    const nuxtApp = useNuxtApp();\n    const mounted$ = shallowRef(nuxtApp.isHydrating === false);\n    const instance = getCurrentInstance();\n    if (nuxtApp.isHydrating) {\n      const attrs = { ...instance.attrs };\n      const directives = extractDirectives(instance);\n      for (const key in attrs) {\n        delete instance.attrs[key];\n      }\n      onMounted(() => {\n        Object.assign(instance.attrs, attrs);\n        instance.vnode.dirs = directives;\n      });\n    }\n    onMounted(() => {\n      mounted$.value = true;\n    });\n    const setupState = component.setup?.(props, ctx) || {};\n    if (isPromise(setupState)) {\n      return Promise.resolve(setupState).then((setupState2) => {\n        if (typeof setupState2 !== \"function\") {\n          setupState2 ||= {};\n          setupState2.mounted$ = mounted$;\n          return setupState2;\n        }\n        return (...args) => {\n          if (mounted$.value || !nuxtApp.isHydrating) {\n            const res = setupState2(...args);\n            return res.children === null || typeof res.children === \"string\" ? cloneVNode(res) : h(res);\n          }\n          return elToStaticVNode(instance?.vnode.el, STATIC_DIV);\n        };\n      });\n    } else {\n      if (typeof setupState === \"function\") {\n        return (...args) => {\n          if (mounted$.value) {\n            const res = setupState(...args);\n            const attrs = clone.inheritAttrs !== false ? ctx.attrs : void 0;\n            return res.children === null || typeof res.children === \"string\" ? cloneVNode(res, attrs) : h(res, attrs);\n          }\n          return elToStaticVNode(instance?.vnode.el, STATIC_DIV);\n        };\n      }\n      return Object.assign(setupState, { mounted$ });\n    }\n  };\n  cache.set(component, clone);\n  return clone;\n}\nfunction extractDirectives(instance) {\n  if (!instance || !instance.vnode.dirs) {\n    return null;\n  }\n  const directives = instance.vnode.dirs;\n  instance.vnode.dirs = null;\n  return directives;\n}\n","import { computed, getCurrentInstance, getCurrentScope, inject, isShallow, nextTick, onBeforeMount, onScopeDispose, onServerPrefetch, onUnmounted, ref, shallowRef, toRef, toValue, unref, watch } from \"vue\";\nimport { debounce } from \"perfect-debounce\";\nimport { hash } from \"ohash\";\nimport { useNuxtApp } from \"../nuxt.js\";\nimport { getUserCaller, toArray } from \"../utils.js\";\nimport { clientOnlySymbol } from \"../components/client-only.js\";\nimport { createError } from \"./error.js\";\nimport { onNuxtReady } from \"./ready.js\";\nimport { asyncDataDefaults, granularCachedData, pendingWhenIdle, purgeCachedData, resetAsyncDataToUndefined } from \"#build/nuxt.config.mjs\";\nconst isDefer = (dedupe) => dedupe === \"defer\" || dedupe === false;\nexport function useAsyncData(...args) {\n  const autoKey = typeof args[args.length - 1] === \"string\" ? args.pop() : void 0;\n  if (_isAutoKeyNeeded(args[0], args[1])) {\n    args.unshift(autoKey);\n  }\n  let [_key, _handler, options = {}] = args;\n  const key = computed(() => toValue(_key));\n  if (typeof key.value !== \"string\") {\n    throw new TypeError(\"[nuxt] [useAsyncData] key must be a string.\");\n  }\n  if (typeof _handler !== \"function\") {\n    throw new TypeError(\"[nuxt] [useAsyncData] handler must be a function.\");\n  }\n  const nuxtApp = useNuxtApp();\n  options.server ??= true;\n  options.default ??= getDefault;\n  options.getCachedData ??= getDefaultCachedData;\n  options.lazy ??= false;\n  options.immediate ??= true;\n  options.deep ??= asyncDataDefaults.deep;\n  options.dedupe ??= \"cancel\";\n  const functionName = options._functionName || \"useAsyncData\";\n  if (import.meta.dev && typeof options.dedupe === \"boolean\") {\n    console.warn(`[nuxt] \\`boolean\\` values are deprecated for the \\`dedupe\\` option of \\`${functionName}\\` and will be removed in the future. Use 'cancel' or 'defer' instead.`);\n  }\n  const currentData = nuxtApp._asyncData[key.value];\n  if (import.meta.dev && currentData) {\n    const warnings = [];\n    const values = createHash(_handler, options);\n    if (values.handler !== currentData._hash?.handler) {\n      warnings.push(`different handler`);\n    }\n    for (const opt of [\"transform\", \"pick\", \"getCachedData\"]) {\n      if (values[opt] !== currentData._hash[opt]) {\n        warnings.push(`different \\`${opt}\\` option`);\n      }\n    }\n    if (currentData._default.toString() !== options.default.toString()) {\n      warnings.push(`different \\`default\\` value`);\n    }\n    if (options.deep && isShallow(currentData.data)) {\n      warnings.push(`mismatching \\`deep\\` option`);\n    }\n    if (warnings.length) {\n      const caller = getUserCaller();\n      const explanation = caller ? ` (used at ${caller.source}:${caller.line}:${caller.column})` : \"\";\n      console.warn(`[nuxt] [${functionName}] Incompatible options detected for \"${key.value}\"${explanation}:\n${warnings.map((w) => `- ${w}`).join(\"\\n\")}\nYou can use a different key or move the call to a composable to ensure the options are shared across calls.`);\n    }\n  }\n  const initialFetchOptions = { cause: \"initial\", dedupe: options.dedupe };\n  if (!nuxtApp._asyncData[key.value]?._init) {\n    initialFetchOptions.cachedData = options.getCachedData(key.value, nuxtApp, { cause: \"initial\" });\n    nuxtApp._asyncData[key.value] = createAsyncData(nuxtApp, key.value, _handler, options, initialFetchOptions.cachedData);\n  }\n  const asyncData = nuxtApp._asyncData[key.value];\n  asyncData._deps++;\n  const initialFetch = () => nuxtApp._asyncData[key.value].execute(initialFetchOptions);\n  const fetchOnServer = options.server !== false && nuxtApp.payload.serverRendered;\n  if (import.meta.server && fetchOnServer && options.immediate) {\n    const promise = initialFetch();\n    if (getCurrentInstance()) {\n      onServerPrefetch(() => promise);\n    } else {\n      nuxtApp.hook(\"app:created\", async () => {\n        await promise;\n      });\n    }\n  }\n  if (import.meta.client) {\n    let unregister = function(key2) {\n      const data = nuxtApp._asyncData[key2];\n      if (data?._deps) {\n        data._deps--;\n        if (data._deps === 0) {\n          data?._off();\n        }\n      }\n    };\n    const instance = getCurrentInstance();\n    if (instance && fetchOnServer && options.immediate && !instance.sp) {\n      instance.sp = [];\n    }\n    if (import.meta.dev && !nuxtApp.isHydrating && !nuxtApp._processingMiddleware && (!instance || instance?.isMounted)) {\n      console.warn(`[nuxt] [${functionName}] Component is already mounted, please use $fetch instead. See https://nuxt.com/docs/getting-started/data-fetching`);\n    }\n    if (instance && !instance._nuxtOnBeforeMountCbs) {\n      instance._nuxtOnBeforeMountCbs = [];\n      const cbs = instance._nuxtOnBeforeMountCbs;\n      onBeforeMount(() => {\n        cbs.forEach((cb) => {\n          cb();\n        });\n        cbs.splice(0, cbs.length);\n      });\n      onUnmounted(() => cbs.splice(0, cbs.length));\n    }\n    const isWithinClientOnly = instance && (instance._nuxtClientOnly || inject(clientOnlySymbol, false));\n    if (fetchOnServer && nuxtApp.isHydrating && (asyncData.error.value || asyncData.data.value != null)) {\n      if (pendingWhenIdle) {\n        asyncData.pending.value = false;\n      }\n      asyncData.status.value = asyncData.error.value ? \"error\" : \"success\";\n    } else if (instance && (!isWithinClientOnly && nuxtApp.payload.serverRendered && nuxtApp.isHydrating || options.lazy) && options.immediate) {\n      instance._nuxtOnBeforeMountCbs.push(initialFetch);\n    } else if (options.immediate) {\n      initialFetch();\n    }\n    const hasScope = getCurrentScope();\n    const unsubKeyWatcher = watch(key, (newKey, oldKey) => {\n      if ((newKey || oldKey) && newKey !== oldKey) {\n        const hasRun = nuxtApp._asyncData[oldKey]?.data.value !== asyncDataDefaults.value;\n        const isRunning = nuxtApp._asyncDataPromises[oldKey] !== void 0;\n        if (oldKey) {\n          unregister(oldKey);\n        }\n        const initialFetchOptions2 = { cause: \"initial\", dedupe: options.dedupe };\n        if (!nuxtApp._asyncData[newKey]?._init) {\n          let value;\n          if (oldKey && hasRun) {\n            value = nuxtApp._asyncData[oldKey]?.data.value;\n          } else {\n            value = options.getCachedData(newKey, nuxtApp, { cause: \"initial\" });\n            initialFetchOptions2.cachedData = value;\n          }\n          nuxtApp._asyncData[newKey] = createAsyncData(nuxtApp, newKey, _handler, options, value);\n        }\n        nuxtApp._asyncData[newKey]._deps++;\n        if (options.immediate || hasRun || isRunning) {\n          nuxtApp._asyncData[newKey].execute(initialFetchOptions2);\n        }\n      }\n    }, { flush: \"sync\" });\n    const unsubWatcher = options.watch ? watch(options.watch, () => {\n      asyncData._execute({ cause: \"watch\", dedupe: options.dedupe });\n    }) : () => {\n    };\n    if (hasScope) {\n      onScopeDispose(() => {\n        unsubKeyWatcher();\n        unsubWatcher();\n        unregister(key.value);\n      });\n    }\n  }\n  const asyncReturn = {\n    data: writableComputedRef(() => nuxtApp._asyncData[key.value]?.data),\n    pending: writableComputedRef(() => nuxtApp._asyncData[key.value]?.pending),\n    status: writableComputedRef(() => nuxtApp._asyncData[key.value]?.status),\n    error: writableComputedRef(() => nuxtApp._asyncData[key.value]?.error),\n    refresh: (...args2) => nuxtApp._asyncData[key.value].execute(...args2),\n    execute: (...args2) => nuxtApp._asyncData[key.value].execute(...args2),\n    clear: () => clearNuxtDataByKey(nuxtApp, key.value)\n  };\n  const asyncDataPromise = Promise.resolve(nuxtApp._asyncDataPromises[key.value]).then(() => asyncReturn);\n  Object.assign(asyncDataPromise, asyncReturn);\n  return asyncDataPromise;\n}\nfunction writableComputedRef(getter) {\n  return computed({\n    get() {\n      return getter()?.value;\n    },\n    set(value) {\n      const ref2 = getter();\n      if (ref2) {\n        ref2.value = value;\n      }\n    }\n  });\n}\nexport function useLazyAsyncData(...args) {\n  const autoKey = typeof args[args.length - 1] === \"string\" ? args.pop() : void 0;\n  if (_isAutoKeyNeeded(args[0], args[1])) {\n    args.unshift(autoKey);\n  }\n  const [key, handler, options = {}] = args;\n  if (import.meta.dev) {\n    options._functionName ||= \"useLazyAsyncData\";\n  }\n  return useAsyncData(key, handler, { ...options, lazy: true }, null);\n}\nfunction _isAutoKeyNeeded(keyOrFetcher, fetcher) {\n  if (typeof keyOrFetcher === \"string\") {\n    return false;\n  }\n  if (typeof keyOrFetcher === \"object\" && keyOrFetcher !== null) {\n    return false;\n  }\n  if (typeof keyOrFetcher === \"function\" && typeof fetcher === \"function\") {\n    return false;\n  }\n  return true;\n}\nexport function useNuxtData(key) {\n  const nuxtApp = useNuxtApp();\n  if (!(key in nuxtApp.payload.data)) {\n    nuxtApp.payload.data[key] = asyncDataDefaults.value;\n  }\n  if (nuxtApp._asyncData[key]) {\n    const data = nuxtApp._asyncData[key];\n    data._deps++;\n    if (getCurrentScope()) {\n      onScopeDispose(() => {\n        data._deps--;\n        if (data._deps === 0) {\n          data?._off();\n        }\n      });\n    }\n  }\n  return {\n    data: computed({\n      get() {\n        return nuxtApp._asyncData[key]?.data.value ?? nuxtApp.payload.data[key];\n      },\n      set(value) {\n        if (nuxtApp._asyncData[key]) {\n          nuxtApp._asyncData[key].data.value = value;\n        } else {\n          nuxtApp.payload.data[key] = value;\n        }\n      }\n    })\n  };\n}\nexport async function refreshNuxtData(keys) {\n  if (import.meta.server) {\n    return Promise.resolve();\n  }\n  await new Promise((resolve) => onNuxtReady(resolve));\n  const _keys = keys ? toArray(keys) : void 0;\n  await useNuxtApp().hooks.callHookParallel(\"app:data:refresh\", _keys);\n}\nexport function clearNuxtData(keys) {\n  const nuxtApp = useNuxtApp();\n  const _allKeys = Object.keys(nuxtApp.payload.data);\n  const _keys = !keys ? _allKeys : typeof keys === \"function\" ? _allKeys.filter(keys) : toArray(keys);\n  for (const key of _keys) {\n    clearNuxtDataByKey(nuxtApp, key);\n  }\n}\nfunction clearNuxtDataByKey(nuxtApp, key) {\n  if (key in nuxtApp.payload.data) {\n    nuxtApp.payload.data[key] = void 0;\n  }\n  if (key in nuxtApp.payload._errors) {\n    nuxtApp.payload._errors[key] = asyncDataDefaults.errorValue;\n  }\n  if (nuxtApp._asyncData[key]) {\n    nuxtApp._asyncData[key].data.value = resetAsyncDataToUndefined ? void 0 : unref(nuxtApp._asyncData[key]._default());\n    nuxtApp._asyncData[key].error.value = asyncDataDefaults.errorValue;\n    if (pendingWhenIdle) {\n      nuxtApp._asyncData[key].pending.value = false;\n    }\n    nuxtApp._asyncData[key].status.value = \"idle\";\n  }\n  if (key in nuxtApp._asyncDataPromises) {\n    if (nuxtApp._asyncDataPromises[key]) {\n      nuxtApp._asyncDataPromises[key].cancelled = true;\n    }\n    nuxtApp._asyncDataPromises[key] = void 0;\n  }\n}\nfunction pick(obj, keys) {\n  const newObj = {};\n  for (const key of keys) {\n    newObj[key] = obj[key];\n  }\n  return newObj;\n}\nfunction createAsyncData(nuxtApp, key, _handler, options, initialCachedData) {\n  nuxtApp.payload._errors[key] ??= asyncDataDefaults.errorValue;\n  const hasCustomGetCachedData = options.getCachedData !== getDefaultCachedData;\n  const handler = import.meta.client || !import.meta.prerender || !nuxtApp.ssrContext?._sharedPrerenderCache ? _handler : () => {\n    const value = nuxtApp.ssrContext._sharedPrerenderCache.get(key);\n    if (value) {\n      return value;\n    }\n    const promise = Promise.resolve().then(() => nuxtApp.runWithContext(() => _handler(nuxtApp)));\n    nuxtApp.ssrContext._sharedPrerenderCache.set(key, promise);\n    return promise;\n  };\n  const _ref = options.deep ? ref : shallowRef;\n  const hasCachedData = initialCachedData != null;\n  const unsubRefreshAsyncData = nuxtApp.hook(\"app:data:refresh\", async (keys) => {\n    if (!keys || keys.includes(key)) {\n      await asyncData.execute({ cause: \"refresh:hook\" });\n    }\n  });\n  const asyncData = {\n    data: _ref(hasCachedData ? initialCachedData : options.default()),\n    pending: pendingWhenIdle ? shallowRef(!hasCachedData) : computed(() => asyncData.status.value === \"pending\"),\n    error: toRef(nuxtApp.payload._errors, key),\n    status: shallowRef(\"idle\"),\n    execute: (...args) => {\n      const [_opts, newValue = void 0] = args;\n      const opts = _opts && newValue === void 0 && typeof _opts === \"object\" ? _opts : {};\n      if (import.meta.dev && newValue !== void 0 && (!_opts || typeof _opts !== \"object\")) {\n        console.warn(`[nuxt] [${options._functionName}] Do not pass \\`execute\\` directly to \\`watch\\`. Instead, use an inline function, such as \\`watch(q, () => execute())\\`.`);\n      }\n      if (nuxtApp._asyncDataPromises[key]) {\n        if (isDefer(opts.dedupe ?? options.dedupe)) {\n          return nuxtApp._asyncDataPromises[key];\n        }\n        nuxtApp._asyncDataPromises[key].cancelled = true;\n      }\n      if (granularCachedData || opts.cause === \"initial\" || nuxtApp.isHydrating) {\n        const cachedData = \"cachedData\" in opts ? opts.cachedData : options.getCachedData(key, nuxtApp, { cause: opts.cause ?? \"refresh:manual\" });\n        if (cachedData != null) {\n          nuxtApp.payload.data[key] = asyncData.data.value = cachedData;\n          asyncData.error.value = asyncDataDefaults.errorValue;\n          asyncData.status.value = \"success\";\n          return Promise.resolve(cachedData);\n        }\n      }\n      if (pendingWhenIdle) {\n        asyncData.pending.value = true;\n      }\n      asyncData.status.value = \"pending\";\n      const promise = new Promise(\n        (resolve, reject) => {\n          try {\n            resolve(handler(nuxtApp));\n          } catch (err) {\n            reject(err);\n          }\n        }\n      ).then(async (_result) => {\n        if (promise.cancelled) {\n          return nuxtApp._asyncDataPromises[key];\n        }\n        let result = _result;\n        if (options.transform) {\n          result = await options.transform(_result);\n        }\n        if (options.pick) {\n          result = pick(result, options.pick);\n        }\n        if (import.meta.dev && import.meta.server && result == null) {\n          const caller = getUserCaller();\n          const explanation = caller ? ` (used at ${caller.source}:${caller.line}:${caller.column})` : \"\";\n          console.warn(`[nuxt] \\`${options._functionName || \"useAsyncData\"}${explanation}\\` must return a value (it should not be \\`undefined\\` or \\`null\\`) or the request may be duplicated on the client side.`);\n        }\n        nuxtApp.payload.data[key] = result;\n        asyncData.data.value = result;\n        asyncData.error.value = asyncDataDefaults.errorValue;\n        asyncData.status.value = \"success\";\n      }).catch((error) => {\n        if (promise.cancelled) {\n          return nuxtApp._asyncDataPromises[key];\n        }\n        asyncData.error.value = createError(error);\n        asyncData.data.value = unref(options.default());\n        asyncData.status.value = \"error\";\n      }).finally(() => {\n        if (promise.cancelled) {\n          return;\n        }\n        if (pendingWhenIdle) {\n          asyncData.pending.value = false;\n        }\n        delete nuxtApp._asyncDataPromises[key];\n      });\n      nuxtApp._asyncDataPromises[key] = promise;\n      return nuxtApp._asyncDataPromises[key];\n    },\n    _execute: debounce((...args) => asyncData.execute(...args), 0, { leading: true }),\n    _default: options.default,\n    _deps: 0,\n    _init: true,\n    _hash: import.meta.dev ? createHash(_handler, options) : void 0,\n    _off: () => {\n      unsubRefreshAsyncData();\n      if (nuxtApp._asyncData[key]?._init) {\n        nuxtApp._asyncData[key]._init = false;\n      }\n      if (purgeCachedData && !hasCustomGetCachedData) {\n        nextTick(() => {\n          if (!nuxtApp._asyncData[key]?._init) {\n            clearNuxtDataByKey(nuxtApp, key);\n            asyncData.execute = () => Promise.resolve();\n            asyncData.data.value = asyncDataDefaults.value;\n          }\n        });\n      }\n    }\n  };\n  return asyncData;\n}\nconst getDefault = () => asyncDataDefaults.value;\nconst getDefaultCachedData = (key, nuxtApp, ctx) => {\n  if (nuxtApp.isHydrating) {\n    return nuxtApp.payload.data[key];\n  }\n  if (ctx.cause !== \"refresh:manual\" && ctx.cause !== \"refresh:hook\") {\n    return nuxtApp.static.data[key];\n  }\n};\nfunction createHash(_handler, options) {\n  return {\n    handler: hash(_handler),\n    transform: options.transform ? hash(options.transform) : void 0,\n    pick: options.pick ? hash(options.pick) : void 0,\n    getCachedData: options.getCachedData ? hash(options.getCachedData) : void 0\n  };\n}\n","import { Icon as Iconify, addIcon } from \"@iconify/vue\";\nimport { h } from \"vue\";\nimport { initClientBundle, loadIcon, useResolvedName, resolveCustomizeFn } from \"./shared.js\";\nimport { useAsyncData, useNuxtApp, defineComponent, useAppConfig, onServerPrefetch } from \"#imports\";\nexport const NuxtIconSvg = /* @__PURE__ */ defineComponent({\n  name: \"NuxtIconSvg\",\n  props: {\n    name: {\n      type: String,\n      required: true\n    },\n    customize: {\n      type: [Function, Boolean, null],\n      default: null,\n      required: false\n    }\n  },\n  setup(props, { slots }) {\n    const nuxt = useNuxtApp();\n    const options = useAppConfig().icon;\n    const name = useResolvedName(() => props.name);\n    const storeKey = \"i-\" + name.value;\n    if (name.value) {\n      onServerPrefetch(async () => {\n        if (import.meta.server) {\n          await useAsyncData(\n            storeKey,\n            async () => await loadIcon(name.value, options.fetchTimeout),\n            { deep: false }\n          );\n        }\n      });\n      if (import.meta.client) {\n        const payload = nuxt.payload.data[storeKey];\n        if (payload) {\n          addIcon(name.value, payload);\n        } else {\n          initClientBundle(addIcon);\n        }\n      }\n    }\n    return () => h(Iconify, {\n      icon: name.value,\n      ssr: true,\n      // Iconify uses `customise`, where we expose `customize` for consistency\n      customise: resolveCustomizeFn(props.customize, options.customize)\n    }, slots);\n  }\n});\n","import { computed, defineComponent, h } from \"vue\";\nimport { NuxtIconCss } from \"./css.js\";\nimport { NuxtIconSvg } from \"./svg.js\";\nimport { useResolvedName } from \"./shared.js\";\nimport { useAppConfig, useNuxtApp } from \"#imports\";\nexport default defineComponent({\n  name: \"NuxtIcon\",\n  props: {\n    name: {\n      type: String,\n      required: true\n    },\n    mode: {\n      type: String,\n      required: false,\n      default: null\n    },\n    size: {\n      type: [Number, String],\n      required: false,\n      default: null\n    },\n    customize: {\n      type: [Function, Boolean, null],\n      default: null,\n      required: false\n    }\n  },\n  setup(props, { slots }) {\n    const nuxtApp = useNuxtApp();\n    const runtimeOptions = useAppConfig().icon;\n    const name = useResolvedName(() => props.name);\n    const component = computed(\n      () => nuxtApp.vueApp?.component(name.value) || ((props.mode || runtimeOptions.mode) === \"svg\" ? NuxtIconSvg : NuxtIconCss)\n    );\n    const style = computed(() => {\n      const size = props.size || runtimeOptions.size;\n      return size ? { fontSize: Number.isNaN(+size) ? size : size + \"px\" } : null;\n    });\n    return () => h(\n      component.value,\n      {\n        ...runtimeOptions.attrs,\n        name: name.value,\n        class: runtimeOptions.class,\n        style: style.value,\n        customize: props.customize\n      },\n      slots\n    );\n  }\n});\n","<template>\n  <Icon v-bind=\"$props\" />\n</template>\n\n<script>\nimport { defineComponent } from \"vue\";\nexport default defineComponent({\n  props: {\n    name: {\n      type: String,\n      required: true\n    },\n    mode: {\n      type: String,\n      required: false,\n      default: null\n    },\n    size: {\n      type: [Number, String],\n      required: false,\n      default: null\n    },\n    customize: {\n      type: Function,\n      required: false,\n      default: null\n    }\n  }\n});\n</script>\n","import { computed, toValue, useAttrs } from \"vue\";\nimport { mergeConfig, omit, get } from \"../utils/index.js\";\nimport { useAppConfig } from \"#imports\";\nexport const useUI = (key, $ui, $config, $wrapperClass, withAppConfig = false) => {\n  const $attrs = useAttrs();\n  const appConfig = useAppConfig();\n  const ui = computed(() => {\n    const _ui = toValue($ui);\n    const _config = toValue($config);\n    const _wrapperClass = toValue($wrapperClass);\n    return mergeConfig(\n      _ui?.strategy || appConfig.ui?.strategy,\n      _wrapperClass ? { wrapper: _wrapperClass } : {},\n      _ui || {},\n      import.meta.dev || withAppConfig ? get(appConfig.ui, key, {}) : {},\n      _config || {}\n    );\n  });\n  const attrs = computed(() => omit($attrs, [\"class\"]));\n  return {\n    ui,\n    attrs\n  };\n};\n","import { computed, ref, provide, inject, onMounted, onUnmounted, getCurrentInstance } from \"vue\";\nexport function useProvideButtonGroup(buttonGroupProps) {\n  const instance = getCurrentInstance();\n  const groupKey = `group-${instance.uid}`;\n  const state = ref({\n    children: [],\n    register(child) {\n      this.children.push(child);\n    },\n    unregister(child) {\n      const index = this.children.indexOf(child);\n      if (index > -1) {\n        this.children.splice(index, 1);\n      }\n    },\n    ...buttonGroupProps\n  });\n  provide(groupKey, state);\n}\nexport function useInjectButtonGroup({ ui, props }) {\n  const instance = getCurrentInstance();\n  provide(\"ButtonGroupContextConsumer\", true);\n  const isParentPartOfGroup = inject(\"ButtonGroupContextConsumer\", false);\n  if (isParentPartOfGroup) {\n    return {\n      size: computed(() => props.size),\n      rounded: computed(() => ui.value.rounded)\n    };\n  }\n  let parent = instance.parent;\n  let groupContext;\n  while (parent && !groupContext) {\n    if (parent.type.name === \"ButtonGroup\") {\n      groupContext = inject(`group-${parent.uid}`);\n      break;\n    }\n    parent = parent.parent;\n  }\n  const positionInGroup = computed(() => groupContext?.value.children.indexOf(instance));\n  onMounted(() => {\n    groupContext?.value.register(instance);\n  });\n  onUnmounted(() => {\n    groupContext?.value.unregister(instance);\n  });\n  return {\n    size: computed(() => {\n      if (!groupContext?.value) return props.size;\n      return groupContext?.value.size ?? ui.value.default.size;\n    }),\n    rounded: computed(() => {\n      if (!groupContext || positionInGroup.value === -1) return ui.value.rounded;\n      if (groupContext.value.children.length === 1) return groupContext.value.ui.rounded;\n      if (positionInGroup.value === 0) return groupContext.value.rounded.start;\n      if (positionInGroup.value === groupContext.value.children.length - 1) return groupContext.value.rounded.end;\n      return \"rounded-none\";\n    })\n  };\n}\n","export default {\n  base: \"focus:outline-none focus-visible:outline-0 disabled:cursor-not-allowed disabled:opacity-75 aria-disabled:cursor-not-allowed aria-disabled:opacity-75 flex-shrink-0\",\n  font: \"font-medium\",\n  rounded: \"rounded-md\",\n  truncate: \"text-left break-all line-clamp-1\",\n  block: \"w-full flex justify-center items-center\",\n  inline: \"inline-flex items-center\",\n  size: {\n    \"2xs\": \"text-xs\",\n    \"xs\": \"text-xs\",\n    \"sm\": \"text-sm\",\n    \"md\": \"text-sm\",\n    \"lg\": \"text-sm\",\n    \"xl\": \"text-base\"\n  },\n  gap: {\n    \"2xs\": \"gap-x-1\",\n    \"xs\": \"gap-x-1.5\",\n    \"sm\": \"gap-x-1.5\",\n    \"md\": \"gap-x-2\",\n    \"lg\": \"gap-x-2.5\",\n    \"xl\": \"gap-x-2.5\"\n  },\n  padding: {\n    \"2xs\": \"px-2 py-1\",\n    \"xs\": \"px-2.5 py-1.5\",\n    \"sm\": \"px-2.5 py-1.5\",\n    \"md\": \"px-3 py-2\",\n    \"lg\": \"px-3.5 py-2.5\",\n    \"xl\": \"px-3.5 py-2.5\"\n  },\n  square: {\n    \"2xs\": \"p-1\",\n    \"xs\": \"p-1.5\",\n    \"sm\": \"p-1.5\",\n    \"md\": \"p-2\",\n    \"lg\": \"p-2.5\",\n    \"xl\": \"p-2.5\"\n  },\n  color: {\n    white: {\n      solid: \"shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-700 text-gray-900 dark:text-white bg-white hover:bg-gray-50 disabled:bg-white aria-disabled:bg-white dark:bg-gray-900 dark:hover:bg-gray-800/50 dark:disabled:bg-gray-900 dark:aria-disabled:bg-gray-900 focus-visible:ring-2 focus-visible:ring-primary-500 dark:focus-visible:ring-primary-400\",\n      ghost: \"text-gray-900 dark:text-white hover:bg-white dark:hover:bg-gray-900 focus-visible:ring-inset focus-visible:ring-2 focus-visible:ring-primary-500 dark:focus-visible:ring-primary-400\"\n    },\n    gray: {\n      solid: \"shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-700 text-gray-700 dark:text-gray-200 bg-gray-50 hover:bg-gray-100 disabled:bg-gray-50 aria-disabled:bg-gray-50 dark:bg-gray-800 dark:hover:bg-gray-700/50 dark:disabled:bg-gray-800 dark:aria-disabled:bg-gray-800 focus-visible:ring-2 focus-visible:ring-primary-500 dark:focus-visible:ring-primary-400\",\n      ghost: \"text-gray-700 dark:text-gray-200 hover:text-gray-900 dark:hover:text-white hover:bg-gray-50 dark:hover:bg-gray-800 focus-visible:ring-inset focus-visible:ring-2 focus-visible:ring-primary-500 dark:focus-visible:ring-primary-400\",\n      link: \"text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 underline-offset-4 hover:underline focus-visible:ring-inset focus-visible:ring-2 focus-visible:ring-primary-500 dark:focus-visible:ring-primary-400\"\n    },\n    black: {\n      solid: \"shadow-sm text-white dark:text-gray-900 bg-gray-900 hover:bg-gray-800 disabled:bg-gray-900 aria-disabled:bg-gray-900 dark:bg-white dark:hover:bg-gray-100 dark:disabled:bg-white dark:aria-disabled:bg-white focus-visible:ring-inset focus-visible:ring-2 focus-visible:ring-primary-500 dark:focus-visible:ring-primary-400\",\n      link: \"text-gray-900 dark:text-white underline-offset-4 hover:underline focus-visible:ring-inset focus-visible:ring-2 focus-visible:ring-primary-500 dark:focus-visible:ring-primary-400\"\n    }\n  },\n  variant: {\n    solid: \"shadow-sm text-white dark:text-gray-900 bg-{color}-500 hover:bg-{color}-600 disabled:bg-{color}-500 aria-disabled:bg-{color}-500 dark:bg-{color}-400 dark:hover:bg-{color}-500 dark:disabled:bg-{color}-400 dark:aria-disabled:bg-{color}-400 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-{color}-500 dark:focus-visible:outline-{color}-400\",\n    outline: \"ring-1 ring-inset ring-current text-{color}-500 dark:text-{color}-400 hover:bg-{color}-50 disabled:bg-transparent aria-disabled:bg-transparent dark:hover:bg-{color}-950 dark:disabled:bg-transparent dark:aria-disabled:bg-transparent focus-visible:ring-2 focus-visible:ring-{color}-500 dark:focus-visible:ring-{color}-400\",\n    soft: \"text-{color}-500 dark:text-{color}-400 bg-{color}-50 hover:bg-{color}-100 disabled:bg-{color}-50 aria-disabled:bg-{color}-50 dark:bg-{color}-950 dark:hover:bg-{color}-900 dark:disabled:bg-{color}-950 dark:aria-disabled:bg-{color}-950 focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-{color}-500 dark:focus-visible:ring-{color}-400\",\n    ghost: \"text-{color}-500 dark:text-{color}-400 hover:bg-{color}-50 disabled:bg-transparent aria-disabled:bg-transparent dark:hover:bg-{color}-950 dark:disabled:bg-transparent dark:aria-disabled:bg-transparent focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-{color}-500 dark:focus-visible:ring-{color}-400\",\n    link: \"text-{color}-500 hover:text-{color}-600 disabled:text-{color}-500 aria-disabled:text-{color}-500 dark:text-{color}-400 dark:hover:text-{color}-500 dark:disabled:text-{color}-400 dark:aria-disabled:text-{color}-400 underline-offset-4 hover:underline focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-{color}-500 dark:focus-visible:ring-{color}-400\"\n  },\n  icon: {\n    base: \"flex-shrink-0\",\n    loading: \"animate-spin\",\n    size: {\n      \"2xs\": \"h-4 w-4\",\n      \"xs\": \"h-4 w-4\",\n      \"sm\": \"h-5 w-5\",\n      \"md\": \"h-5 w-5\",\n      \"lg\": \"h-5 w-5\",\n      \"xl\": \"h-6 w-6\"\n    }\n  },\n  default: {\n    size: \"sm\",\n    variant: \"solid\",\n    color: \"primary\",\n    loadingIcon: \"i-heroicons-arrow-path-20-solid\"\n  }\n};\n","export const arrow = {\n  base: \"invisible before:visible before:block before:rotate-45 before:z-[-1] before:w-2 before:h-2\",\n  ring: \"before:ring-1 before:ring-gray-200 dark:before:ring-gray-800\",\n  rounded: \"before:rounded-sm\",\n  background: \"before:bg-gray-200 dark:before:bg-gray-800\",\n  shadow: \"before:shadow\",\n  placement: `group-data-[popper-placement*='right']:-left-1 group-data-[popper-placement*='left']:-right-1 group-data-[popper-placement*='top']:-bottom-1 group-data-[popper-placement*='bottom']:-top-1`\n};\n","import { arrow } from \"../popper.js\";\nexport default {\n  wrapper: \"relative inline-flex text-left rtl:text-right\",\n  container: \"z-20 group\",\n  trigger: \"inline-flex w-full\",\n  width: \"w-48\",\n  height: \"\",\n  background: \"bg-white dark:bg-gray-800\",\n  shadow: \"shadow-lg\",\n  rounded: \"rounded-md\",\n  ring: \"ring-1 ring-gray-200 dark:ring-gray-700\",\n  base: \"relative focus:outline-none overflow-y-auto scroll-py-1\",\n  divide: \"divide-y divide-gray-200 dark:divide-gray-700\",\n  padding: \"p-1\",\n  item: {\n    base: \"group flex items-center gap-1.5 w-full\",\n    rounded: \"rounded-md\",\n    padding: \"px-1.5 py-1.5\",\n    size: \"text-sm\",\n    active: \"bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-white\",\n    inactive: \"text-gray-700 dark:text-gray-200\",\n    disabled: \"cursor-not-allowed opacity-50\",\n    icon: {\n      base: \"flex-shrink-0 w-5 h-5\",\n      active: \"text-gray-500 dark:text-gray-400\",\n      inactive: \"text-gray-400 dark:text-gray-500\"\n    },\n    avatar: {\n      base: \"flex-shrink-0\",\n      size: \"2xs\"\n    },\n    label: \"truncate\",\n    shortcuts: \"hidden md:inline-flex flex-shrink-0 gap-0.5 ms-auto\"\n  },\n  // Syntax for `<Transition>` component https://vuejs.org/guide/built-ins/transition.html#css-based-transitions\n  transition: {\n    enterActiveClass: \"transition duration-100 ease-out\",\n    enterFromClass: \"transform scale-95 opacity-0\",\n    enterToClass: \"transform scale-100 opacity-100\",\n    leaveActiveClass: \"transition duration-75 ease-in\",\n    leaveFromClass: \"transform scale-100 opacity-100\",\n    leaveToClass: \"transform scale-95 opacity-0\"\n  },\n  popper: {\n    placement: \"bottom-end\",\n    strategy: \"fixed\"\n  },\n  default: {\n    openDelay: 0,\n    closeDelay: 0\n  },\n  arrow: {\n    ...arrow,\n    ring: \"before:ring-1 before:ring-gray-200 dark:before:ring-gray-700\",\n    background: \"before:bg-white dark:before:bg-gray-700\"\n  }\n};\n","export default {\n  wrapper: \"relative\",\n  base: \"relative block w-full disabled:cursor-not-allowed disabled:opacity-75 focus:outline-none border-0\",\n  form: \"form-input\",\n  rounded: \"rounded-md\",\n  placeholder: \"placeholder-gray-400 dark:placeholder-gray-500\",\n  file: {\n    base: \"file:mr-1.5 file:font-medium file:text-gray-500 dark:file:text-gray-400 file:bg-transparent file:border-0 file:p-0 file:outline-none\"\n  },\n  size: {\n    \"2xs\": \"text-xs\",\n    \"xs\": \"text-xs\",\n    \"sm\": \"text-sm\",\n    \"md\": \"text-sm\",\n    \"lg\": \"text-sm\",\n    \"xl\": \"text-base\"\n  },\n  gap: {\n    \"2xs\": \"gap-x-1\",\n    \"xs\": \"gap-x-1.5\",\n    \"sm\": \"gap-x-1.5\",\n    \"md\": \"gap-x-2\",\n    \"lg\": \"gap-x-2.5\",\n    \"xl\": \"gap-x-2.5\"\n  },\n  padding: {\n    \"2xs\": \"px-2 py-1\",\n    \"xs\": \"px-2.5 py-1.5\",\n    \"sm\": \"px-2.5 py-1.5\",\n    \"md\": \"px-3 py-2\",\n    \"lg\": \"px-3.5 py-2.5\",\n    \"xl\": \"px-3.5 py-2.5\"\n  },\n  leading: {\n    padding: {\n      \"2xs\": \"ps-7\",\n      \"xs\": \"ps-8\",\n      \"sm\": \"ps-9\",\n      \"md\": \"ps-10\",\n      \"lg\": \"ps-11\",\n      \"xl\": \"ps-12\"\n    }\n  },\n  trailing: {\n    padding: {\n      \"2xs\": \"pe-7\",\n      \"xs\": \"pe-8\",\n      \"sm\": \"pe-9\",\n      \"md\": \"pe-10\",\n      \"lg\": \"pe-11\",\n      \"xl\": \"pe-12\"\n    }\n  },\n  color: {\n    white: {\n      outline: \"shadow-sm bg-white dark:bg-gray-900 text-gray-900 dark:text-white ring-1 ring-inset ring-gray-300 dark:ring-gray-700 focus:ring-2 focus:ring-primary-500 dark:focus:ring-primary-400\"\n    },\n    gray: {\n      outline: \"shadow-sm bg-gray-50 dark:bg-gray-800 text-gray-900 dark:text-white ring-1 ring-inset ring-gray-300 dark:ring-gray-700 focus:ring-2 focus:ring-primary-500 dark:focus:ring-primary-400\"\n    }\n  },\n  variant: {\n    outline: \"shadow-sm bg-transparent text-gray-900 dark:text-white ring-1 ring-inset ring-{color}-500 dark:ring-{color}-400 focus:ring-2 focus:ring-{color}-500 dark:focus:ring-{color}-400\",\n    none: \"bg-transparent focus:ring-0 focus:shadow-none\"\n  },\n  icon: {\n    base: \"flex-shrink-0 text-gray-400 dark:text-gray-500\",\n    color: \"text-{color}-500 dark:text-{color}-400\",\n    loading: \"animate-spin\",\n    size: {\n      \"2xs\": \"h-4 w-4\",\n      \"xs\": \"h-4 w-4\",\n      \"sm\": \"h-5 w-5\",\n      \"md\": \"h-5 w-5\",\n      \"lg\": \"h-5 w-5\",\n      \"xl\": \"h-6 w-6\"\n    },\n    leading: {\n      wrapper: \"absolute inset-y-0 start-0 flex items-center\",\n      pointer: \"pointer-events-none\",\n      padding: {\n        \"2xs\": \"px-2\",\n        \"xs\": \"px-2.5\",\n        \"sm\": \"px-2.5\",\n        \"md\": \"px-3\",\n        \"lg\": \"px-3.5\",\n        \"xl\": \"px-3.5\"\n      }\n    },\n    trailing: {\n      wrapper: \"absolute inset-y-0 end-0 flex items-center\",\n      pointer: \"pointer-events-none\",\n      padding: {\n        \"2xs\": \"px-2\",\n        \"xs\": \"px-2.5\",\n        \"sm\": \"px-2.5\",\n        \"md\": \"px-3\",\n        \"lg\": \"px-3.5\",\n        \"xl\": \"px-3.5\"\n      }\n    }\n  },\n  default: {\n    size: \"sm\",\n    color: \"white\",\n    variant: \"outline\",\n    loadingIcon: \"i-heroicons-arrow-path-20-solid\"\n  }\n};\n","import { arrow } from \"../popper.js\";\nexport default {\n  container: \"z-20 group\",\n  trigger: \"flex items-center w-full\",\n  width: \"w-full\",\n  height: \"max-h-60\",\n  base: \"relative focus:outline-none overflow-y-auto scroll-py-1\",\n  background: \"bg-white dark:bg-gray-800\",\n  shadow: \"shadow-lg\",\n  rounded: \"rounded-md\",\n  padding: \"p-1\",\n  ring: \"ring-1 ring-gray-200 dark:ring-gray-700\",\n  empty: \"text-sm text-gray-400 dark:text-gray-500 px-2 py-1.5\",\n  option: {\n    base: \"cursor-default select-none relative flex items-center justify-between gap-1\",\n    rounded: \"rounded-md\",\n    padding: \"px-1.5 py-1.5\",\n    size: \"text-sm\",\n    color: \"text-gray-900 dark:text-white\",\n    container: \"flex items-center gap-1.5 min-w-0\",\n    active: \"bg-gray-100 dark:bg-gray-900\",\n    inactive: \"\",\n    selected: \"pe-7\",\n    disabled: \"cursor-not-allowed opacity-50\",\n    empty: \"text-sm text-gray-400 dark:text-gray-500 px-2 py-1.5\",\n    icon: {\n      base: \"flex-shrink-0 h-5 w-5\",\n      active: \"text-gray-900 dark:text-white\",\n      inactive: \"text-gray-400 dark:text-gray-500\"\n    },\n    selectedIcon: {\n      wrapper: \"absolute inset-y-0 end-0 flex items-center\",\n      padding: \"pe-2\",\n      base: \"h-5 w-5 text-gray-900 dark:text-white flex-shrink-0\"\n    },\n    avatar: {\n      base: \"flex-shrink-0\",\n      size: \"2xs\"\n    },\n    chip: {\n      base: \"flex-shrink-0 w-2 h-2 mx-1 rounded-full\"\n    }\n  },\n  // Syntax for `<Transition>` component https://vuejs.org/guide/built-ins/transition.html#css-based-transitions\n  transition: {\n    leaveActiveClass: \"transition ease-in duration-100\",\n    leaveFromClass: \"opacity-100\",\n    leaveToClass: \"opacity-0\"\n  },\n  popper: {\n    placement: \"bottom-end\"\n  },\n  default: {\n    selectedIcon: \"i-heroicons-check-20-solid\",\n    trailingIcon: \"i-heroicons-chevron-down-20-solid\",\n    empty: {\n      label: \"No options.\"\n    },\n    optionEmpty: {\n      label: 'No results for \"{query}\".'\n    }\n  },\n  arrow: {\n    ...arrow,\n    ring: \"before:ring-1 before:ring-gray-200 dark:before:ring-gray-700\",\n    background: \"before:bg-white dark:before:bg-gray-700\"\n  }\n};\n","import input from \"./input.js\";\nexport default {\n  ...input,\n  form: \"form-textarea\",\n  default: {\n    size: \"sm\",\n    color: \"white\",\n    variant: \"outline\"\n  }\n};\n","import input from \"./input.js\";\nexport default {\n  ...input,\n  form: \"form-select\",\n  placeholder: \"text-gray-400 dark:text-gray-500\",\n  default: {\n    size: \"sm\",\n    color: \"white\",\n    variant: \"outline\",\n    loadingIcon: \"i-heroicons-arrow-path-20-solid\",\n    trailingIcon: \"i-heroicons-chevron-down-20-solid\"\n  }\n};\n","import { arrow } from \"../popper.js\";\nimport inputMenu from \"./inputMenu.js\";\nexport default {\n  ...inputMenu,\n  select: \"inline-flex items-center text-left cursor-default\",\n  input: \"block w-[calc(100%+0.5rem)] focus:ring-transparent text-sm px-3 py-1.5 text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-800 border-0 border-b border-gray-200 dark:border-gray-700 sticky -top-1 -mt-1 mb-1 -mx-1 z-10 placeholder-gray-400 dark:placeholder-gray-500 focus:outline-none\",\n  required: \"absolute inset-0 w-px opacity-0 cursor-default\",\n  label: \"block truncate\",\n  option: {\n    ...inputMenu.option,\n    create: \"block truncate\"\n  },\n  // Syntax for `<Transition>` component https://vuejs.org/guide/built-ins/transition.html#css-based-transitions\n  transition: {\n    leaveActiveClass: \"transition ease-in duration-100\",\n    leaveFromClass: \"opacity-100\",\n    leaveToClass: \"opacity-0\"\n  },\n  popper: {\n    placement: \"bottom-end\"\n  },\n  default: {\n    selectedIcon: \"i-heroicons-check-20-solid\",\n    clearSearchOnClose: false,\n    showCreateOptionWhen: \"empty\",\n    searchablePlaceholder: {\n      label: \"Search...\"\n    },\n    empty: {\n      label: \"No options.\"\n    },\n    optionEmpty: {\n      label: 'No results for \"{query}\".'\n    }\n  },\n  arrow: {\n    ...arrow,\n    ring: \"before:ring-1 before:ring-gray-200 dark:before:ring-gray-700\",\n    background: \"before:bg-white dark:before:bg-gray-700\"\n  }\n};\n","import { arrow } from \"../popper.js\";\nexport default {\n  wrapper: \"relative inline-flex\",\n  container: \"z-20 group\",\n  width: \"max-w-xs\",\n  background: \"bg-white dark:bg-gray-900\",\n  color: \"text-gray-900 dark:text-white\",\n  shadow: \"shadow\",\n  rounded: \"rounded\",\n  ring: \"ring-1 ring-gray-200 dark:ring-gray-800\",\n  base: \"[@media(pointer:coarse)]:hidden h-6 px-2 py-1 text-xs font-normal truncate relative\",\n  shortcuts: \"hidden md:inline-flex flex-shrink-0 gap-0.5\",\n  middot: \"mx-1 text-gray-700 dark:text-gray-200\",\n  // Syntax for `<Transition>` component https://vuejs.org/guide/built-ins/transition.html#css-based-transitions\n  transition: {\n    enterActiveClass: \"transition ease-out duration-200\",\n    enterFromClass: \"opacity-0 translate-y-1\",\n    enterToClass: \"opacity-100 translate-y-0\",\n    leaveActiveClass: \"transition ease-in duration-150\",\n    leaveFromClass: \"opacity-100 translate-y-0\",\n    leaveToClass: \"opacity-0 translate-y-1\"\n  },\n  popper: {\n    strategy: \"fixed\"\n  },\n  default: {\n    openDelay: 0,\n    closeDelay: 0\n  },\n  arrow: {\n    ...arrow,\n    base: \"[@media(pointer:coarse)]:hidden invisible before:visible before:block before:rotate-45 before:z-[-1] before:w-2 before:h-2\"\n  }\n};\n","<template>\n  <ULink :type=\"type\" :disabled=\"disabled || loading\" :class=\"buttonClass\" v-bind=\"{ ...linkProps, ...attrs }\">\n    <slot name=\"leading\" :disabled=\"disabled\" :loading=\"loading\">\n      <UIcon v-if=\"isLeading && leadingIconName\" :name=\"leadingIconName\" :class=\"leadingIconClass\" aria-hidden=\"true\" />\n    </slot>\n\n    <slot>\n      <span v-if=\"label !== void 0 && label !== null\" :class=\"[truncate ? ui.truncate : '']\">\n        {{ label }}\n      </span>\n    </slot>\n\n    <slot name=\"trailing\" :disabled=\"disabled\" :loading=\"loading\">\n      <UIcon v-if=\"isTrailing && trailingIconName\" :name=\"trailingIconName\" :class=\"trailingIconClass\" aria-hidden=\"true\" />\n    </slot>\n  </ULink>\n</template>\n\n<script>\nimport { computed, defineComponent, toRef } from \"vue\";\nimport { twJoin } from \"tailwind-merge\";\nimport UIcon from \"../elements/Icon.vue\";\nimport ULink from \"../elements/Link.vue\";\nimport { useUI } from \"../../composables/useUI\";\nimport { getNuxtLinkProps, mergeConfig, nuxtLinkProps, twMerge } from \"../../utils\";\nimport { useInjectButtonGroup } from \"../../composables/useButtonGroup\";\nimport appConfig from \"#build/app.config\";\nimport { button } from \"#ui/ui.config\";\nconst config = mergeConfig(appConfig.ui.strategy, appConfig.ui.button, button);\nexport default defineComponent({\n  components: {\n    UIcon,\n    ULink\n  },\n  inheritAttrs: false,\n  props: {\n    ...nuxtLinkProps,\n    type: {\n      type: String,\n      default: \"button\"\n    },\n    block: {\n      type: Boolean,\n      default: false\n    },\n    label: {\n      type: String,\n      default: null\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    padded: {\n      type: Boolean,\n      default: true\n    },\n    size: {\n      type: String,\n      default: () => config.default.size,\n      validator(value) {\n        return Object.keys(config.size).includes(value);\n      }\n    },\n    color: {\n      type: String,\n      default: () => config.default.color,\n      validator(value) {\n        return [...appConfig.ui.colors, ...Object.keys(config.color)].includes(value);\n      }\n    },\n    variant: {\n      type: String,\n      default: () => config.default.variant,\n      validator(value) {\n        return [\n          ...Object.keys(config.variant),\n          ...Object.values(config.color).flatMap((value2) => Object.keys(value2))\n        ].includes(value);\n      }\n    },\n    icon: {\n      type: String,\n      default: null\n    },\n    loadingIcon: {\n      type: String,\n      default: () => config.default.loadingIcon\n    },\n    leadingIcon: {\n      type: String,\n      default: null\n    },\n    trailingIcon: {\n      type: String,\n      default: null\n    },\n    trailing: {\n      type: Boolean,\n      default: false\n    },\n    leading: {\n      type: Boolean,\n      default: false\n    },\n    square: {\n      type: Boolean,\n      default: false\n    },\n    truncate: {\n      type: Boolean,\n      default: false\n    },\n    class: {\n      type: [String, Object, Array],\n      default: () => \"\"\n    },\n    ui: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props, { slots }) {\n    const { ui, attrs } = useUI(\"button\", toRef(props, \"ui\"), config);\n    const { size, rounded } = useInjectButtonGroup({ ui, props });\n    const isLeading = computed(() => {\n      return props.icon && props.leading || props.icon && !props.trailing || props.loading && !props.trailing || props.leadingIcon;\n    });\n    const isTrailing = computed(() => {\n      return props.icon && props.trailing || props.loading && props.trailing || props.trailingIcon;\n    });\n    const isSquare = computed(() => props.square || !slots.default && !props.label);\n    const buttonClass = computed(() => {\n      const variant = ui.value.color?.[props.color]?.[props.variant] || ui.value.variant[props.variant];\n      return twMerge(twJoin(\n        ui.value.base,\n        ui.value.font,\n        rounded.value,\n        ui.value.size[size.value],\n        ui.value.gap[size.value],\n        props.padded && ui.value[isSquare.value ? \"square\" : \"padding\"][size.value],\n        variant?.replaceAll(\"{color}\", props.color),\n        props.block ? ui.value.block : ui.value.inline\n      ), props.class);\n    });\n    const leadingIconName = computed(() => {\n      if (props.loading) {\n        return props.loadingIcon;\n      }\n      return props.leadingIcon || props.icon;\n    });\n    const trailingIconName = computed(() => {\n      if (props.loading && !isLeading.value) {\n        return props.loadingIcon;\n      }\n      return props.trailingIcon || props.icon;\n    });\n    const leadingIconClass = computed(() => {\n      return twJoin(\n        ui.value.icon.base,\n        ui.value.icon.size[size.value],\n        props.loading && ui.value.icon.loading\n      );\n    });\n    const trailingIconClass = computed(() => {\n      return twJoin(\n        ui.value.icon.base,\n        ui.value.icon.size[size.value],\n        props.loading && !isLeading.value && ui.value.icon.loading\n      );\n    });\n    const linkProps = computed(() => getNuxtLinkProps(props));\n    return {\n      // eslint-disable-next-line vue/no-dupe-keys\n      ui,\n      attrs,\n      isLeading,\n      isTrailing,\n      isSquare,\n      buttonClass,\n      leadingIconName,\n      trailingIconName,\n      leadingIconClass,\n      trailingIconClass,\n      linkProps\n    };\n  }\n});\n</script>\n","<template>\r\n  <div class=\"h-screen mx-auto text-center w-full flex flex-col items-center justify-center text-white\">\r\n    <div class=\"mt-7 text-7xl font-bold flex error-status\" :title=\"error.statusCode\">404</div>\r\n    <p class=\"mt-7 text-6xl\"> Ooops. </p>\r\n    <p class=\"mt-7\">{{ error.message }}</p>\r\n    <UButton class=\"mt-7\" color=\"white\" variant=\"solid\" size=\"xl\" to=\"/\">Go Home</UButton>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n  defineProps(['error'])\r\n</script>\r\n\r\n<style scoped>\r\n@import url('https://fonts.googleapis.com/css?family=Fira+Mono:400');\r\n*{\r\n  background: #131313;\r\n  font-family: 'Fira Mono', monospace;\r\n}\r\n.error-status {\r\n  animation: glitch 1s linear infinite;\r\n  font-size: 96px;\r\n}\r\n\r\n@keyframes glitch {\r\n  2%,\r\n  64% {\r\n    transform: translate(2px, 0) skew(0deg);\r\n  }\r\n\r\n  4%,\r\n  60% {\r\n    transform: translate(-2px, 0) skew(0deg);\r\n  }\r\n\r\n  62% {\r\n    transform: translate(0, 0) skew(5deg);\r\n  }\r\n}\r\n\r\ndiv:before,\r\ndiv:after {\r\n  content: attr(title);\r\n  position: absolute;\r\n}\r\n\r\ndiv:before {\r\n  animation: glitchTop 1s linear infinite;\r\n  clip-path: polygon(0 0, 100% 0, 100% 33%, 0 33%);\r\n  -webkit-clip-path: polygon(0 0, 100% 0, 100% 33%, 0 33%);\r\n}\r\n\r\n@keyframes glitchTop {\r\n\r\n  2%,\r\n  64% {\r\n    transform: translate(2px, -2px);\r\n  }\r\n\r\n  4%,\r\n  60% {\r\n    transform: translate(-2px, 2px);\r\n  }\r\n\r\n  62% {\r\n    transform: translate(13px, -1px) skew(-13deg);\r\n  }\r\n}\r\n\r\ndiv:after {\r\n  animation: glitchBotom 1.5s linear infinite;\r\n  clip-path: polygon(0 67%, 100% 67%, 100% 100%, 0 100%);\r\n  -webkit-clip-path: polygon(0 67%, 100% 67%, 100% 100%, 0 100%);\r\n}\r\n\r\n@keyframes glitchBotom {\r\n\r\n  2%,\r\n  64% {\r\n    transform: translate(-2px, 0);\r\n  }\r\n\r\n  4%,\r\n  60% {\r\n    transform: translate(-2px, 0);\r\n  }\r\n\r\n  62% {\r\n    transform: translate(-22px, 5px) skew(21deg);\r\n  }\r\n}\r\n</style>","<template>\n  <Suspense @resolve=\"onResolve\">\n    <div v-if=\"abortRender\" />\n    <ErrorComponent\n      v-else-if=\"error\"\n      :error=\"error\"\n    />\n    <IslandRenderer\n      v-else-if=\"islandContext\"\n      :context=\"islandContext\"\n    />\n    <component\n      :is=\"SingleRenderer\"\n      v-else-if=\"SingleRenderer\"\n    />\n    <AppComponent v-else />\n  </Suspense>\n</template>\n\n<script setup>\nimport { defineAsyncComponent, onErrorCaptured, onServerPrefetch, provide } from \"vue\";\nimport { useNuxtApp } from \"../nuxt\";\nimport { isNuxtError, showError, useError } from \"../composables/error\";\nimport { useRoute, useRouter } from \"../composables/router\";\nimport { PageRouteSymbol } from \"../components/injections\";\nimport AppComponent from \"#build/app-component.mjs\";\nimport ErrorComponent from \"#build/error-component.mjs\";\nimport { componentIslands } from \"#build/nuxt.config.mjs\";\nconst IslandRenderer = import.meta.server && componentIslands ? defineAsyncComponent(() => import(\"./island-renderer\").then((r) => r.default || r)) : () => null;\nconst nuxtApp = useNuxtApp();\nconst onResolve = nuxtApp.deferHydration();\nif (import.meta.client && nuxtApp.isHydrating) {\n  const removeErrorHook = nuxtApp.hooks.hookOnce(\"app:error\", onResolve);\n  useRouter().beforeEach(removeErrorHook);\n}\nconst url = import.meta.server ? nuxtApp.ssrContext.url : window.location.pathname;\nconst SingleRenderer = import.meta.test && import.meta.dev && import.meta.server && url.startsWith(\"/__nuxt_component_test__/\") && defineAsyncComponent(() => import(\"#build/test-component-wrapper.mjs\").then((r) => r.default(import.meta.server ? url : window.location.href)));\nprovide(PageRouteSymbol, useRoute());\nconst results = nuxtApp.hooks.callHookWith((hooks) => hooks.map((hook) => hook()), \"vue:setup\");\nif (import.meta.dev && results && results.some((i) => i && \"then\" in i)) {\n  console.error(\"[nuxt] Error in `vue:setup`. Callbacks must be synchronous.\");\n}\nconst error = useError();\nconst abortRender = import.meta.server && error.value && !nuxtApp.ssrContext.error;\nconst BOT_RE = /bot\\b|chrome-lighthouse|facebookexternalhit|google\\b/i;\nonErrorCaptured((err, target, info) => {\n  nuxtApp.hooks.callHook(\"vue:error\", err, target, info).catch((hookError) => console.error(\"[nuxt] Error in `vue:error` hook\", hookError));\n  if (import.meta.client && BOT_RE.test(navigator.userAgent)) {\n    nuxtApp.hooks.callHook(\"app:error\", err);\n    console.error(`[nuxt] Not rendering error page for bot with user agent \\`${navigator.userAgent}\\`:`, err);\n    return false;\n  }\n  if (import.meta.server || isNuxtError(err) && (err.fatal || err.unhandled)) {\n    const p = nuxtApp.runWithContext(() => showError(err));\n    onServerPrefetch(() => p);\n    return false;\n  }\n});\nconst islandContext = import.meta.server && nuxtApp.ssrContext.islandContext;\n</script>\n","import { createApp, createSSRApp, nextTick } from \"vue\";\nimport \"#build/fetch.mjs\";\nimport \"#build/global-polyfills.mjs\";\nimport { applyPlugins, createNuxtApp } from \"./nuxt.js\";\nimport { createError } from \"./composables/error.js\";\nimport \"#build/css\";\nimport plugins from \"#build/plugins\";\nimport RootComponent from \"#build/root-component.mjs\";\nimport { appId, appSpaLoaderAttrs, multiApp, spaLoadingTemplateOutside, vueAppRootContainer } from \"#build/nuxt.config.mjs\";\nlet entry;\nif (import.meta.server) {\n  entry = async function createNuxtAppServer(ssrContext) {\n    const vueApp = createApp(RootComponent);\n    const nuxt = createNuxtApp({ vueApp, ssrContext });\n    try {\n      await applyPlugins(nuxt, plugins);\n      await nuxt.hooks.callHook(\"app:created\", vueApp);\n    } catch (error) {\n      await nuxt.hooks.callHook(\"app:error\", error);\n      nuxt.payload.error ||= createError(error);\n    }\n    if (ssrContext?._renderResponse) {\n      throw new Error(\"skipping render\");\n    }\n    return vueApp;\n  };\n}\nif (import.meta.client) {\n  if (import.meta.dev && import.meta.webpackHot) {\n    import.meta.webpackHot.accept();\n  }\n  let vueAppPromise;\n  entry = async function initApp() {\n    if (vueAppPromise) {\n      return vueAppPromise;\n    }\n    const isSSR = Boolean(\n      (multiApp ? window.__NUXT__?.[appId] : window.__NUXT__)?.serverRendered ?? (multiApp ? document.querySelector(`[data-nuxt-data=\"${appId}\"]`) : document.getElementById(\"__NUXT_DATA__\"))?.dataset.ssr === \"true\"\n    );\n    const vueApp = isSSR ? createSSRApp(RootComponent) : createApp(RootComponent);\n    const nuxt = createNuxtApp({ vueApp });\n    async function handleVueError(error) {\n      await nuxt.callHook(\"app:error\", error);\n      nuxt.payload.error ||= createError(error);\n    }\n    vueApp.config.errorHandler = handleVueError;\n    nuxt.hook(\"app:suspense:resolve\", () => {\n      if (vueApp.config.errorHandler === handleVueError) {\n        vueApp.config.errorHandler = void 0;\n      }\n    });\n    if (spaLoadingTemplateOutside && !isSSR && appSpaLoaderAttrs.id) {\n      nuxt.hook(\"app:suspense:resolve\", () => {\n        document.getElementById(appSpaLoaderAttrs.id)?.remove();\n      });\n    }\n    try {\n      await applyPlugins(nuxt, plugins);\n    } catch (err) {\n      handleVueError(err);\n    }\n    try {\n      await nuxt.hooks.callHook(\"app:created\", vueApp);\n      await nuxt.hooks.callHook(\"app:beforeMount\", vueApp);\n      vueApp.mount(vueAppRootContainer);\n      await nuxt.hooks.callHook(\"app:mounted\", vueApp);\n      await nextTick();\n    } catch (err) {\n      handleVueError(err);\n    }\n    return vueApp;\n  };\n  vueAppPromise = entry().catch((error) => {\n    console.error(\"Error while mounting app:\", error);\n    throw error;\n  });\n}\nexport default (ssrContext) => entry(ssrContext);\n"],"version":3}