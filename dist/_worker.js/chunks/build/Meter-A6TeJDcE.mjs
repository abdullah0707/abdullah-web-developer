import{a as e,v as a,m as t,e as r,f as l,i as s,g as o}from"./server.mjs";import{m as n}from"./meter-B60JAxnv.mjs";import{q as u,k as i,t as m,A as c,v as d,y as p,j as v}from"../routes/renderer.mjs";import"../_/nitro.mjs";import"../_/shared.esm-bundler.mjs";const b=t(o.ui.strategy,o.ui.meter,n),f=a.defineComponent({components:{UIcon:r},inheritAttrs:!1,props:{value:{type:Number,default:0},min:{type:Number,default:0},max:{type:Number,default:100},indicator:{type:Boolean,default:!1},label:{type:String,default:null},size:{type:String,default:()=>b.default.size,validator:e=>Object.keys(b.meter.size).includes(e)},color:{type:String,default:()=>b.default.color,validator:e=>[...o.ui.colors,...Object.keys(b.color)].includes(e)},icon:{type:String,default:null},class:{type:[String,Object,Array],default:()=>""},ui:{type:Object,default:()=>({})}},slots:Object,setup(e){const{ui:t,attrs:r}=l("meter",a.toRef(e,"ui"),b,a.toRef(e,"class"));const o=a.computed(()=>s(t.value.indicator.container)),n=a.computed(()=>s(t.value.indicator.text,t.value.indicator.size[e.size])),u=a.computed(()=>{var a;return s(t.value.meter.base,t.value.meter.background,t.value.meter.ring,t.value.meter.rounded,t.value.meter.shadow,null!=(a=t.value.color[e.color])?a:t.value.meter.color.replaceAll("{color}",e.color),t.value.meter.size[e.size])}),i=a.computed(()=>s(t.value.meter.appearance.inner,t.value.meter.appearance.meter,t.value.meter.appearance.bar,t.value.meter.appearance.value)),m=a.computed(()=>s(t.value.meter.bar.transition,t.value.meter.bar.ring,t.value.meter.bar.rounded,t.value.meter.bar.size[e.size])),c=a.computed(()=>{var a;return s(t.value.label.base,t.value.label.text,null!=(a=t.value.color[e.color])?a:t.value.label.color.replaceAll("{color}",e.color),t.value.label.size[e.size])}),d=a.computed(()=>e.min>e.max?e.max:e.min),p=a.computed(()=>e.max<e.min?e.min:e.max),v=a.computed(()=>function(e,a,t){if(a==t)return e<a?0:100;a>t&&(t=[a,a=t][0]);const r=(e-a)/(t-a)*100;return Math.max(0,Math.min(100,r))}(Number(e.value),d.value,p.value));return{ui:t,attrs:r,indicatorContainerClass:o,indicatorClass:n,meterClass:u,meterAppearanceClass:i,meterBarClass:m,labelClass:c,normalizedMin:d,normalizedMax:p,percent:v}}});const x=f.setup;f.setup=(e,t)=>{const r=a.useSSRContext();return(r.modules||(r.modules=new Set)).add("node_modules/@nuxt/ui/dist/runtime/components/elements/Meter.vue"),x?x(e,t):void 0};const y=e(f,[["ssrRender",function(e,t,l,s,o,n,b,f){const x=r;t(`<div${u(a.mergeProps({class:e.ui.wrapper},e.attrs,s))}>`),e.indicator||e.$slots.indicator?i(e.$slots,"indicator",{percent:e.percent,value:e.value},()=>{t(`<div class="${m(e.indicatorContainerClass)}" style="${c({width:`${e.percent}%`})}"><div class="${m(e.indicatorClass)}">${d(Math.round(e.percent))}% </div></div>`)},t,l):t("\x3c!----\x3e"),t(`<meter${p("value",e.value)}${p("min",e.normalizedMin)}${p("max",e.normalizedMax)} class="${m([e.meterClass,e.meterAppearanceClass,e.meterBarClass])}"></meter>`),e.label||e.$slots.label?i(e.$slots,"label",{percent:e.percent,value:e.value},()=>{t(`<div class="${m(e.labelClass)}">`),e.icon?t(v(x,{name:e.icon},null,l)):t("\x3c!----\x3e"),t(` ${d(e.label)}</div>`)},t,l):t("\x3c!----\x3e"),t("</div>")}]]);export{y as default};
//# sourceMappingURL=Meter-A6TeJDcE.mjs.map
